
    export let wifcapi = " declare const UNKNOWN = 0;\r\n declare const STRING = 1;\r\n declare const LABEL = 2;\r\n declare const ENUM = 3;\r\n declare const REAL = 4;\r\n declare const REF = 5;\r\n declare const EMPTY = 6;\r\n declare const SET_BEGIN = 7;\r\n declare const SET_END = 8;\r\n declare const LINE_END = 9;\r\n interface LoaderSettings {\r\n    COORDINATE_TO_ORIGIN: boolean;\r\n    USE_FAST_BOOLS: boolean;\r\n    CIRCLE_SEGMENTS_LOW?: number;\r\n    CIRCLE_SEGMENTS_MEDIUM?: number;\r\n    CIRCLE_SEGMENTS_HIGH?: number;\r\n    BOOL_ABORT_THRESHOLD?: number;\r\n}\r\n interface Vector<T> {\r\n    get(index: number): T;\r\n    size(): number;\r\n}\r\n interface Color {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n}\r\n interface PlacedGeometry {\r\n    color: Color;\r\n    geometryExpressID: number;\r\n    flatTransformation: Array<number>;\r\n}\r\n interface FlatMesh {\r\n    geometries: Vector<PlacedGeometry>;\r\n    expressID: number;\r\n}\r\n interface RawLineData {\r\n    ID: number;\r\n    type: number;\r\n    arguments: any[];\r\n}\r\n interface LoaderError {\r\n    type: string;\r\n    message: string;\r\n    expressID: number;\r\n    ifcType: number;\r\n}\r\n interface IfcGeometry {\r\n    GetVertexData(): number;\r\n    GetVertexDataSize(): number;\r\n    GetIndexData(): number;\r\n    GetIndexDataSize(): number;\r\n}\r\n declare function ms(): number;\r\n declare class IfcAPI {\r\n    wasmModule: undefined | any;\r\n    fs: undefined | any;\r\n    wasmPath: string;\r\n    /**\r\n     * Initializes the WASM module (WebIFCWasm), required before using any other functionality\r\n    */\r\n    Init(): Promise<void>;\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @data Buffer containing IFC data (bytes)\r\n     * @data Settings settings for loading the model\r\n    */\r\n    OpenModel(data: string | Uint8Array, settings?: LoaderSettings): number;\r\n    /**\r\n     * Creates a new model and returns a modelID number\r\n     * @data Settings settings for generating data the model\r\n    */\r\n    CreateModel(settings?: LoaderSettings): number;\r\n    ExportFileAsIFC(modelID: number): Uint8Array;\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     * @data Buffer containing IFC data (bytes)\r\n    */\r\n    GetGeometry(modelID: number, geometryExpressID: number): IfcGeometry;\r\n    GetLine(modelID: number, expressID: number, flatten?: boolean): any;\r\n    GetAndClearErrors(modelID: number): Vector<LoaderError>;\r\n    WriteLine(modelID: number, lineObject: any): void;\r\n    FlattenLine(modelID: number, line: any): void;\r\n    GetRawLineData(modelID: number, expressID: number): RawLineData;\r\n    WriteRawLineData(modelID: number, data: RawLineData): any;\r\n    GetLineIDsWithType(modelID: number, type: number): Vector<number>;\r\n    GetAllLines(modelID: Number): Vector<number>;\r\n    SetGeometryTransformation(modelID: number, transformationMatrix: Array<number>): void;\r\n    GetCoordinationMatrix(modelID: number): Array<number>;\r\n    GetVertexArray(ptr: number, size: number): Float32Array;\r\n    GetIndexArray(ptr: number, size: number): Uint32Array;\r\n    getSubArray(heap: any, startPtr: any, sizeBytes: any): any;\r\n    /**\r\n     * Closes a model and frees all related memory\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n    */\r\n    CloseModel(modelID: number): void;\r\n    StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): void;\r\n    StreamAllMeshesWithTypes(modelID: number, types: Array<number>, meshCallback: (mesh: FlatMesh) => void): void;\r\n    /**\r\n     * Checks if a specific model ID is open or closed\r\n     * @modelID Model handle retrieved by OpenModel\r\n    */\r\n    IsModelOpen(modelID: number): boolean;\r\n    /**\r\n     * Load all geometry in a model\r\n     * @modelID Model handle retrieved by OpenModel\r\n    */\r\n    LoadAllGeometry(modelID: number): Vector<FlatMesh>;\r\n    /**\r\n     * Load geometry for a single element\r\n     * @modelID Model handle retrieved by OpenModel\r\n    */\r\n    GetFlatMesh(modelID: number, expressID: number): FlatMesh;\r\n    SetWasmPath(path: string): void;\r\n}\r\n";
    export let ifc2x4helper = " declare let FromRawLineData: {};\r\n declare class Handle<T> {\r\n    value: number;\r\n    constructor(id: number);\r\n    toTape(args: any[]): void;\r\n}\r\n declare function Value(type: string, value: any): any;\r\n declare class IfcAbsorbedDoseMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcAccelerationMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcAmountOfSubstanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcAngularVelocityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare type IfcArcIndex = Array<IfcPositiveInteger>;\r\n declare class IfcAreaDensityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcAreaMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcBinary {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcBoolean {\r\n    value: boolean;\r\n    constructor(v: boolean);\r\n}\r\n declare class IfcBoxAlignment {\r\n    value: IfcLabel;\r\n    constructor(v: IfcLabel);\r\n}\r\n declare class IfcCardinalPointReference {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare type IfcComplexNumber = Array<number>;\r\n declare type IfcCompoundPlaneAngleMeasure = Array<number>;\r\n declare class IfcContextDependentMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcCountMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcCurvatureMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcDate {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcDateTime {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcDayInMonthNumber {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcDayInWeekNumber {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcDescriptiveMeasure {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcDimensionCount {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcDoseEquivalentMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcDuration {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcDynamicViscosityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricCapacitanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricChargeMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricConductanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricCurrentMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricResistanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcElectricVoltageMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcEnergyMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcFontStyle {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcFontVariant {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcFontWeight {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcForceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcFrequencyMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcGloballyUniqueId {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcHeatFluxDensityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcHeatingValueMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcIdentifier {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcIlluminanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcInductanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcInteger {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcIntegerCountRateMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcIonConcentrationMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcIsothermalMoistureCapacityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcKinematicViscosityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLabel {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcLanguageId {\r\n    value: IfcIdentifier;\r\n    constructor(v: IfcIdentifier);\r\n}\r\n declare class IfcLengthMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare type IfcLineIndex = Array<IfcPositiveInteger>;\r\n declare class IfcLinearForceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLinearMomentMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLinearStiffnessMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLinearVelocityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLogical {\r\n    value: boolean;\r\n    constructor(v: boolean);\r\n}\r\n declare class IfcLuminousFluxMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLuminousIntensityDistributionMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcLuminousIntensityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMagneticFluxDensityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMagneticFluxMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMassDensityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMassFlowRateMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMassMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMassPerLengthMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcModulusOfElasticityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcModulusOfLinearSubgradeReactionMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcModulusOfRotationalSubgradeReactionMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcModulusOfSubgradeReactionMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMoistureDiffusivityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMolecularWeightMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMomentOfInertiaMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMonetaryMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcMonthInYearNumber {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcNonNegativeLengthMeasure {\r\n    value: IfcLengthMeasure;\r\n    constructor(v: IfcLengthMeasure);\r\n}\r\n declare class IfcNormalisedRatioMeasure {\r\n    value: IfcRatioMeasure;\r\n    constructor(v: IfcRatioMeasure);\r\n}\r\n declare class IfcNumericMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcPHMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcParameterValue {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcPlanarForceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcPlaneAngleMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcPositiveInteger {\r\n    value: IfcInteger;\r\n    constructor(v: IfcInteger);\r\n}\r\n declare class IfcPositiveLengthMeasure {\r\n    value: IfcLengthMeasure;\r\n    constructor(v: IfcLengthMeasure);\r\n}\r\n declare class IfcPositivePlaneAngleMeasure {\r\n    value: IfcPlaneAngleMeasure;\r\n    constructor(v: IfcPlaneAngleMeasure);\r\n}\r\n declare class IfcPositiveRatioMeasure {\r\n    value: IfcRatioMeasure;\r\n    constructor(v: IfcRatioMeasure);\r\n}\r\n declare class IfcPowerMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcPresentableText {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcPressureMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare type IfcPropertySetDefinitionSet = Array<IfcPropertySetDefinition>;\r\n declare class IfcRadioActivityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcRatioMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcReal {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcRotationalFrequencyMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcRotationalMassMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcRotationalStiffnessMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSectionModulusMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSectionalAreaIntegralMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcShearModulusMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSolidAngleMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSoundPowerLevelMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSoundPowerMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSoundPressureLevelMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSoundPressureMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSpecificHeatCapacityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSpecularExponent {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcSpecularRoughness {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcTemperatureGradientMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcTemperatureRateOfChangeMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcText {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcTextAlignment {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcTextDecoration {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcTextFontName {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcTextTransformation {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcThermalAdmittanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcThermalConductivityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcThermalExpansionCoefficientMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcThermalResistanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcThermalTransmittanceMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcThermodynamicTemperatureMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcTime {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcTimeMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcTimeStamp {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcTorqueMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcURIReference {\r\n    value: string;\r\n    constructor(v: string);\r\n}\r\n declare class IfcVaporPermeabilityMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcVolumeMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcVolumetricFlowRateMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcWarpingConstantMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcWarpingMomentMeasure {\r\n    value: number;\r\n    constructor(v: number);\r\n}\r\n declare class IfcActionRequestTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static EMAIL: string;\r\n    static FAX: string;\r\n    static PHONE: string;\r\n    static POST: string;\r\n    static VERBAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcActionSourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DEAD_LOAD_G: string;\r\n    static COMPLETION_G1: string;\r\n    static LIVE_LOAD_Q: string;\r\n    static SNOW_S: string;\r\n    static WIND_W: string;\r\n    static PRESTRESSING_P: string;\r\n    static SETTLEMENT_U: string;\r\n    static TEMPERATURE_T: string;\r\n    static EARTHQUAKE_E: string;\r\n    static FIRE: string;\r\n    static IMPULSE: string;\r\n    static IMPACT: string;\r\n    static TRANSPORT: string;\r\n    static ERECTION: string;\r\n    static PROPPING: string;\r\n    static SYSTEM_IMPERFECTION: string;\r\n    static SHRINKAGE: string;\r\n    static CREEP: string;\r\n    static LACK_OF_FIT: string;\r\n    static BUOYANCY: string;\r\n    static ICE: string;\r\n    static CURRENT: string;\r\n    static WAVE: string;\r\n    static RAIN: string;\r\n    static BRAKES: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcActionTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PERMANENT_G: string;\r\n    static VARIABLE_Q: string;\r\n    static EXTRAORDINARY_A: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcActuatorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ELECTRICACTUATOR: string;\r\n    static HANDOPERATEDACTUATOR: string;\r\n    static HYDRAULICACTUATOR: string;\r\n    static PNEUMATICACTUATOR: string;\r\n    static THERMOSTATICACTUATOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAddressTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static OFFICE: string;\r\n    static SITE: string;\r\n    static HOME: string;\r\n    static DISTRIBUTIONPOINT: string;\r\n    static USERDEFINED: string;\r\n}\r\n declare class IfcAirTerminalBoxTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONSTANTFLOW: string;\r\n    static VARIABLEFLOWPRESSUREDEPENDANT: string;\r\n    static VARIABLEFLOWPRESSUREINDEPENDANT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAirTerminalTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DIFFUSER: string;\r\n    static GRILLE: string;\r\n    static LOUVRE: string;\r\n    static REGISTER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAirToAirHeatRecoveryTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FIXEDPLATECOUNTERFLOWEXCHANGER: string;\r\n    static FIXEDPLATECROSSFLOWEXCHANGER: string;\r\n    static FIXEDPLATEPARALLELFLOWEXCHANGER: string;\r\n    static ROTARYWHEEL: string;\r\n    static RUNAROUNDCOILLOOP: string;\r\n    static HEATPIPE: string;\r\n    static TWINTOWERENTHALPYRECOVERYLOOPS: string;\r\n    static THERMOSIPHONSEALEDTUBEHEATEXCHANGERS: string;\r\n    static THERMOSIPHONCOILTYPEHEATEXCHANGERS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAlarmTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BELL: string;\r\n    static BREAKGLASSBUTTON: string;\r\n    static LIGHT: string;\r\n    static MANUALPULLBOX: string;\r\n    static SIREN: string;\r\n    static WHISTLE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAlignmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAnalysisModelTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static IN_PLANE_LOADING_2D: string;\r\n    static OUT_PLANE_LOADING_2D: string;\r\n    static LOADING_3D: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAnalysisTheoryTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FIRST_ORDER_THEORY: string;\r\n    static SECOND_ORDER_THEORY: string;\r\n    static THIRD_ORDER_THEORY: string;\r\n    static FULL_NONLINEAR_THEORY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcArithmeticOperatorEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ADD: string;\r\n    static DIVIDE: string;\r\n    static MULTIPLY: string;\r\n    static SUBTRACT: string;\r\n}\r\n declare class IfcAssemblyPlaceEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SITE: string;\r\n    static FACTORY: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcAudioVisualApplianceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AMPLIFIER: string;\r\n    static CAMERA: string;\r\n    static DISPLAY: string;\r\n    static MICROPHONE: string;\r\n    static PLAYER: string;\r\n    static PROJECTOR: string;\r\n    static RECEIVER: string;\r\n    static SPEAKER: string;\r\n    static SWITCHER: string;\r\n    static TELEPHONE: string;\r\n    static TUNER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBSplineCurveForm {\r\n    value: string;\r\n    constructor(v: string);\r\n    static POLYLINE_FORM: string;\r\n    static CIRCULAR_ARC: string;\r\n    static ELLIPTIC_ARC: string;\r\n    static PARABOLIC_ARC: string;\r\n    static HYPERBOLIC_ARC: string;\r\n    static UNSPECIFIED: string;\r\n}\r\n declare class IfcBSplineSurfaceForm {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PLANE_SURF: string;\r\n    static CYLINDRICAL_SURF: string;\r\n    static CONICAL_SURF: string;\r\n    static SPHERICAL_SURF: string;\r\n    static TOROIDAL_SURF: string;\r\n    static SURF_OF_REVOLUTION: string;\r\n    static RULED_SURF: string;\r\n    static GENERALISED_CONE: string;\r\n    static QUADRIC_SURF: string;\r\n    static SURF_OF_LINEAR_EXTRUSION: string;\r\n    static UNSPECIFIED: string;\r\n}\r\n declare class IfcBeamTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BEAM: string;\r\n    static JOIST: string;\r\n    static HOLLOWCORE: string;\r\n    static LINTEL: string;\r\n    static SPANDREL: string;\r\n    static T_BEAM: string;\r\n    static GIRDER_SEGMENT: string;\r\n    static DIAPHRAGM: string;\r\n    static PIERCAP: string;\r\n    static HATSTONE: string;\r\n    static CORNICE: string;\r\n    static EDGEBEAM: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBearingTypeDisplacementEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FIXED_MOVEMENT: string;\r\n    static GUIDED_LONGITUDINAL: string;\r\n    static GUIDED_TRANSVERSAL: string;\r\n    static FREE_MOVEMENT: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBearingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CYLINDRICAL: string;\r\n    static SPHERICAL: string;\r\n    static ELASTOMERIC: string;\r\n    static POT: string;\r\n    static GUIDE: string;\r\n    static ROCKER: string;\r\n    static ROLLER: string;\r\n    static DISK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBenchmarkEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static GREATERTHAN: string;\r\n    static GREATERTHANOREQUALTO: string;\r\n    static LESSTHAN: string;\r\n    static LESSTHANOREQUALTO: string;\r\n    static EQUALTO: string;\r\n    static NOTEQUALTO: string;\r\n    static INCLUDES: string;\r\n    static NOTINCLUDES: string;\r\n    static INCLUDEDIN: string;\r\n    static NOTINCLUDEDIN: string;\r\n}\r\n declare class IfcBoilerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static WATER: string;\r\n    static STEAM: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBooleanOperator {\r\n    value: string;\r\n    constructor(v: string);\r\n    static UNION: string;\r\n    static INTERSECTION: string;\r\n    static DIFFERENCE: string;\r\n}\r\n declare class IfcBridgePartTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ABUTMENT: string;\r\n    static DECK: string;\r\n    static DECK_SEGMENT: string;\r\n    static FOUNDATION: string;\r\n    static PIER: string;\r\n    static PIER_SEGMENT: string;\r\n    static PYLON: string;\r\n    static SUBSTRUCTURE: string;\r\n    static SUPERSTRUCTURE: string;\r\n    static SURFACESTRUCTURE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBridgeTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ARCHED: string;\r\n    static CABLE_STAYED: string;\r\n    static CANTILEVER: string;\r\n    static CULVERT: string;\r\n    static FRAMEWORK: string;\r\n    static GIRDER: string;\r\n    static SUSPENSION: string;\r\n    static TRUSS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBuildingElementPartTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static INSULATION: string;\r\n    static PRECASTPANEL: string;\r\n    static APRON: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBuildingElementProxyTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COMPLEX: string;\r\n    static ELEMENT: string;\r\n    static PARTIAL: string;\r\n    static PROVISIONFORVOID: string;\r\n    static PROVISIONFORSPACE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBuildingSystemTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FENESTRATION: string;\r\n    static FOUNDATION: string;\r\n    static LOADBEARING: string;\r\n    static OUTERSHELL: string;\r\n    static SHADING: string;\r\n    static TRANSPORT: string;\r\n    static REINFORCING: string;\r\n    static PRESTRESSING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcBurnerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCableCarrierFittingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BEND: string;\r\n    static CROSS: string;\r\n    static REDUCER: string;\r\n    static TEE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCableCarrierSegmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CABLELADDERSEGMENT: string;\r\n    static CABLETRAYSEGMENT: string;\r\n    static CABLETRUNKINGSEGMENT: string;\r\n    static CONDUITSEGMENT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCableFittingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONNECTOR: string;\r\n    static ENTRY: string;\r\n    static EXIT: string;\r\n    static JUNCTION: string;\r\n    static TRANSITION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCableSegmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BUSBARSEGMENT: string;\r\n    static CABLESEGMENT: string;\r\n    static CONDUCTORSEGMENT: string;\r\n    static CORESEGMENT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCaissonFoundationTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static WELL: string;\r\n    static CAISSON: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcChangeActionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static NOCHANGE: string;\r\n    static MODIFIED: string;\r\n    static ADDED: string;\r\n    static DELETED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcChillerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRCOOLED: string;\r\n    static WATERCOOLED: string;\r\n    static HEATRECOVERY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcChimneyTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCoilTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DXCOOLINGCOIL: string;\r\n    static ELECTRICHEATINGCOIL: string;\r\n    static GASHEATINGCOIL: string;\r\n    static HYDRONICCOIL: string;\r\n    static STEAMHEATINGCOIL: string;\r\n    static WATERCOOLINGCOIL: string;\r\n    static WATERHEATINGCOIL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcColumnTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COLUMN: string;\r\n    static PILASTER: string;\r\n    static PIERSTEM: string;\r\n    static PIERSTEM_SEGMENT: string;\r\n    static STANDCOLUMN: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCommunicationsApplianceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ANTENNA: string;\r\n    static COMPUTER: string;\r\n    static FAX: string;\r\n    static GATEWAY: string;\r\n    static MODEM: string;\r\n    static NETWORKAPPLIANCE: string;\r\n    static NETWORKBRIDGE: string;\r\n    static NETWORKHUB: string;\r\n    static PRINTER: string;\r\n    static REPEATER: string;\r\n    static ROUTER: string;\r\n    static SCANNER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcComplexPropertyTemplateTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static P_COMPLEX: string;\r\n    static Q_COMPLEX: string;\r\n}\r\n declare class IfcCompressorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DYNAMIC: string;\r\n    static RECIPROCATING: string;\r\n    static ROTARY: string;\r\n    static SCROLL: string;\r\n    static TROCHOIDAL: string;\r\n    static SINGLESTAGE: string;\r\n    static BOOSTER: string;\r\n    static OPENTYPE: string;\r\n    static HERMETIC: string;\r\n    static SEMIHERMETIC: string;\r\n    static WELDEDSHELLHERMETIC: string;\r\n    static ROLLINGPISTON: string;\r\n    static ROTARYVANE: string;\r\n    static SINGLESCREW: string;\r\n    static TWINSCREW: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCondenserTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRCOOLED: string;\r\n    static EVAPORATIVECOOLED: string;\r\n    static WATERCOOLED: string;\r\n    static WATERCOOLEDBRAZEDPLATE: string;\r\n    static WATERCOOLEDSHELLCOIL: string;\r\n    static WATERCOOLEDSHELLTUBE: string;\r\n    static WATERCOOLEDTUBEINTUBE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcConnectionTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ATPATH: string;\r\n    static ATSTART: string;\r\n    static ATEND: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcConstraintEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static HARD: string;\r\n    static SOFT: string;\r\n    static ADVISORY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcConstructionEquipmentResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DEMOLISHING: string;\r\n    static EARTHMOVING: string;\r\n    static ERECTING: string;\r\n    static HEATING: string;\r\n    static LIGHTING: string;\r\n    static PAVING: string;\r\n    static PUMPING: string;\r\n    static TRANSPORTING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcConstructionMaterialResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AGGREGATES: string;\r\n    static CONCRETE: string;\r\n    static DRYWALL: string;\r\n    static FUEL: string;\r\n    static GYPSUM: string;\r\n    static MASONRY: string;\r\n    static METAL: string;\r\n    static PLASTIC: string;\r\n    static WOOD: string;\r\n    static NOTDEFINED: string;\r\n    static USERDEFINED: string;\r\n}\r\n declare class IfcConstructionProductResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ASSEMBLY: string;\r\n    static FORMWORK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcControllerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FLOATING: string;\r\n    static PROGRAMMABLE: string;\r\n    static PROPORTIONAL: string;\r\n    static MULTIPOSITION: string;\r\n    static TWOPOSITION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCooledBeamTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ACTIVE: string;\r\n    static PASSIVE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCoolingTowerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static NATURALDRAFT: string;\r\n    static MECHANICALINDUCEDDRAFT: string;\r\n    static MECHANICALFORCEDDRAFT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCostItemTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCostScheduleTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BUDGET: string;\r\n    static COSTPLAN: string;\r\n    static ESTIMATE: string;\r\n    static TENDER: string;\r\n    static PRICEDBILLOFQUANTITIES: string;\r\n    static UNPRICEDBILLOFQUANTITIES: string;\r\n    static SCHEDULEOFRATES: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCoveringTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CEILING: string;\r\n    static FLOORING: string;\r\n    static CLADDING: string;\r\n    static ROOFING: string;\r\n    static MOLDING: string;\r\n    static SKIRTINGBOARD: string;\r\n    static INSULATION: string;\r\n    static MEMBRANE: string;\r\n    static SLEEVING: string;\r\n    static WRAPPING: string;\r\n    static COPING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCrewResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static OFFICE: string;\r\n    static SITE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCurtainWallTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcCurveInterpolationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LINEAR: string;\r\n    static LOG_LINEAR: string;\r\n    static LOG_LOG: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDamperTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BACKDRAFTDAMPER: string;\r\n    static BALANCINGDAMPER: string;\r\n    static BLASTDAMPER: string;\r\n    static CONTROLDAMPER: string;\r\n    static FIREDAMPER: string;\r\n    static FIRESMOKEDAMPER: string;\r\n    static FUMEHOODEXHAUST: string;\r\n    static GRAVITYDAMPER: string;\r\n    static GRAVITYRELIEFDAMPER: string;\r\n    static RELIEFDAMPER: string;\r\n    static SMOKEDAMPER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDataOriginEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static MEASURED: string;\r\n    static PREDICTED: string;\r\n    static SIMULATED: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDerivedUnitEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ANGULARVELOCITYUNIT: string;\r\n    static AREADENSITYUNIT: string;\r\n    static COMPOUNDPLANEANGLEUNIT: string;\r\n    static DYNAMICVISCOSITYUNIT: string;\r\n    static HEATFLUXDENSITYUNIT: string;\r\n    static INTEGERCOUNTRATEUNIT: string;\r\n    static ISOTHERMALMOISTURECAPACITYUNIT: string;\r\n    static KINEMATICVISCOSITYUNIT: string;\r\n    static LINEARVELOCITYUNIT: string;\r\n    static MASSDENSITYUNIT: string;\r\n    static MASSFLOWRATEUNIT: string;\r\n    static MOISTUREDIFFUSIVITYUNIT: string;\r\n    static MOLECULARWEIGHTUNIT: string;\r\n    static SPECIFICHEATCAPACITYUNIT: string;\r\n    static THERMALADMITTANCEUNIT: string;\r\n    static THERMALCONDUCTANCEUNIT: string;\r\n    static THERMALRESISTANCEUNIT: string;\r\n    static THERMALTRANSMITTANCEUNIT: string;\r\n    static VAPORPERMEABILITYUNIT: string;\r\n    static VOLUMETRICFLOWRATEUNIT: string;\r\n    static ROTATIONALFREQUENCYUNIT: string;\r\n    static TORQUEUNIT: string;\r\n    static MOMENTOFINERTIAUNIT: string;\r\n    static LINEARMOMENTUNIT: string;\r\n    static LINEARFORCEUNIT: string;\r\n    static PLANARFORCEUNIT: string;\r\n    static MODULUSOFELASTICITYUNIT: string;\r\n    static SHEARMODULUSUNIT: string;\r\n    static LINEARSTIFFNESSUNIT: string;\r\n    static ROTATIONALSTIFFNESSUNIT: string;\r\n    static MODULUSOFSUBGRADEREACTIONUNIT: string;\r\n    static ACCELERATIONUNIT: string;\r\n    static CURVATUREUNIT: string;\r\n    static HEATINGVALUEUNIT: string;\r\n    static IONCONCENTRATIONUNIT: string;\r\n    static LUMINOUSINTENSITYDISTRIBUTIONUNIT: string;\r\n    static MASSPERLENGTHUNIT: string;\r\n    static MODULUSOFLINEARSUBGRADEREACTIONUNIT: string;\r\n    static MODULUSOFROTATIONALSUBGRADEREACTIONUNIT: string;\r\n    static PHUNIT: string;\r\n    static ROTATIONALMASSUNIT: string;\r\n    static SECTIONAREAINTEGRALUNIT: string;\r\n    static SECTIONMODULUSUNIT: string;\r\n    static SOUNDPOWERLEVELUNIT: string;\r\n    static SOUNDPOWERUNIT: string;\r\n    static SOUNDPRESSURELEVELUNIT: string;\r\n    static SOUNDPRESSUREUNIT: string;\r\n    static TEMPERATUREGRADIENTUNIT: string;\r\n    static TEMPERATURERATEOFCHANGEUNIT: string;\r\n    static THERMALEXPANSIONCOEFFICIENTUNIT: string;\r\n    static WARPINGCONSTANTUNIT: string;\r\n    static WARPINGMOMENTUNIT: string;\r\n    static USERDEFINED: string;\r\n}\r\n declare class IfcDirectionSenseEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static POSITIVE: string;\r\n    static NEGATIVE: string;\r\n}\r\n declare class IfcDiscreteAccessoryTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ANCHORPLATE: string;\r\n    static BRACKET: string;\r\n    static SHOE: string;\r\n    static EXPANSION_JOINT_DEVICE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDistributionChamberElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FORMEDDUCT: string;\r\n    static INSPECTIONCHAMBER: string;\r\n    static INSPECTIONPIT: string;\r\n    static MANHOLE: string;\r\n    static METERCHAMBER: string;\r\n    static SUMP: string;\r\n    static TRENCH: string;\r\n    static VALVECHAMBER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDistributionPortTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CABLE: string;\r\n    static CABLECARRIER: string;\r\n    static DUCT: string;\r\n    static PIPE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDistributionSystemEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRCONDITIONING: string;\r\n    static AUDIOVISUAL: string;\r\n    static CHEMICAL: string;\r\n    static CHILLEDWATER: string;\r\n    static COMMUNICATION: string;\r\n    static COMPRESSEDAIR: string;\r\n    static CONDENSERWATER: string;\r\n    static CONTROL: string;\r\n    static CONVEYING: string;\r\n    static DATA: string;\r\n    static DISPOSAL: string;\r\n    static DOMESTICCOLDWATER: string;\r\n    static DOMESTICHOTWATER: string;\r\n    static DRAINAGE: string;\r\n    static EARTHING: string;\r\n    static ELECTRICAL: string;\r\n    static ELECTROACOUSTIC: string;\r\n    static EXHAUST: string;\r\n    static FIREPROTECTION: string;\r\n    static FUEL: string;\r\n    static GAS: string;\r\n    static HAZARDOUS: string;\r\n    static HEATING: string;\r\n    static LIGHTING: string;\r\n    static LIGHTNINGPROTECTION: string;\r\n    static MUNICIPALSOLIDWASTE: string;\r\n    static OIL: string;\r\n    static OPERATIONAL: string;\r\n    static POWERGENERATION: string;\r\n    static RAINWATER: string;\r\n    static REFRIGERATION: string;\r\n    static SECURITY: string;\r\n    static SEWAGE: string;\r\n    static SIGNAL: string;\r\n    static STORMWATER: string;\r\n    static TELEPHONE: string;\r\n    static TV: string;\r\n    static VACUUM: string;\r\n    static VENT: string;\r\n    static VENTILATION: string;\r\n    static WASTEWATER: string;\r\n    static WATERSUPPLY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDocumentConfidentialityEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PUBLIC: string;\r\n    static RESTRICTED: string;\r\n    static CONFIDENTIAL: string;\r\n    static PERSONAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDocumentStatusEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DRAFT: string;\r\n    static FINALDRAFT: string;\r\n    static FINAL: string;\r\n    static REVISION: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorPanelOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SWINGING: string;\r\n    static DOUBLE_ACTING: string;\r\n    static SLIDING: string;\r\n    static FOLDING: string;\r\n    static REVOLVING: string;\r\n    static ROLLINGUP: string;\r\n    static FIXEDPANEL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorPanelPositionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LEFT: string;\r\n    static MIDDLE: string;\r\n    static RIGHT: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorStyleConstructionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ALUMINIUM: string;\r\n    static HIGH_GRADE_STEEL: string;\r\n    static STEEL: string;\r\n    static WOOD: string;\r\n    static ALUMINIUM_WOOD: string;\r\n    static ALUMINIUM_PLASTIC: string;\r\n    static PLASTIC: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorStyleOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SINGLE_SWING_LEFT: string;\r\n    static SINGLE_SWING_RIGHT: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT: string;\r\n    static DOUBLE_SWING_LEFT: string;\r\n    static DOUBLE_SWING_RIGHT: string;\r\n    static DOUBLE_DOOR_DOUBLE_SWING: string;\r\n    static SLIDING_TO_LEFT: string;\r\n    static SLIDING_TO_RIGHT: string;\r\n    static DOUBLE_DOOR_SLIDING: string;\r\n    static FOLDING_TO_LEFT: string;\r\n    static FOLDING_TO_RIGHT: string;\r\n    static DOUBLE_DOOR_FOLDING: string;\r\n    static REVOLVING: string;\r\n    static ROLLINGUP: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DOOR: string;\r\n    static GATE: string;\r\n    static TRAPDOOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDoorTypeOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SINGLE_SWING_LEFT: string;\r\n    static SINGLE_SWING_RIGHT: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT: string;\r\n    static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT: string;\r\n    static DOUBLE_SWING_LEFT: string;\r\n    static DOUBLE_SWING_RIGHT: string;\r\n    static DOUBLE_DOOR_DOUBLE_SWING: string;\r\n    static SLIDING_TO_LEFT: string;\r\n    static SLIDING_TO_RIGHT: string;\r\n    static DOUBLE_DOOR_SLIDING: string;\r\n    static FOLDING_TO_LEFT: string;\r\n    static FOLDING_TO_RIGHT: string;\r\n    static DOUBLE_DOOR_FOLDING: string;\r\n    static REVOLVING: string;\r\n    static ROLLINGUP: string;\r\n    static SWING_FIXED_LEFT: string;\r\n    static SWING_FIXED_RIGHT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDuctFittingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BEND: string;\r\n    static CONNECTOR: string;\r\n    static ENTRY: string;\r\n    static EXIT: string;\r\n    static JUNCTION: string;\r\n    static OBSTRUCTION: string;\r\n    static TRANSITION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDuctSegmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static RIGIDSEGMENT: string;\r\n    static FLEXIBLESEGMENT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcDuctSilencerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FLATOVAL: string;\r\n    static RECTANGULAR: string;\r\n    static ROUND: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricApplianceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DISHWASHER: string;\r\n    static ELECTRICCOOKER: string;\r\n    static FREESTANDINGELECTRICHEATER: string;\r\n    static FREESTANDINGFAN: string;\r\n    static FREESTANDINGWATERHEATER: string;\r\n    static FREESTANDINGWATERCOOLER: string;\r\n    static FREEZER: string;\r\n    static FRIDGE_FREEZER: string;\r\n    static HANDDRYER: string;\r\n    static KITCHENMACHINE: string;\r\n    static MICROWAVE: string;\r\n    static PHOTOCOPIER: string;\r\n    static REFRIGERATOR: string;\r\n    static TUMBLEDRYER: string;\r\n    static VENDINGMACHINE: string;\r\n    static WASHINGMACHINE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricDistributionBoardTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONSUMERUNIT: string;\r\n    static DISTRIBUTIONBOARD: string;\r\n    static MOTORCONTROLCENTRE: string;\r\n    static SWITCHBOARD: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricFlowStorageDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BATTERY: string;\r\n    static CAPACITORBANK: string;\r\n    static HARMONICFILTER: string;\r\n    static INDUCTORBANK: string;\r\n    static UPS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricGeneratorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CHP: string;\r\n    static ENGINEGENERATOR: string;\r\n    static STANDALONE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricMotorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DC: string;\r\n    static INDUCTION: string;\r\n    static POLYPHASE: string;\r\n    static RELUCTANCESYNCHRONOUS: string;\r\n    static SYNCHRONOUS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElectricTimeControlTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static TIMECLOCK: string;\r\n    static TIMEDELAY: string;\r\n    static RELAY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElementAssemblyTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ACCESSORY_ASSEMBLY: string;\r\n    static ARCH: string;\r\n    static BEAM_GRID: string;\r\n    static BRACED_FRAME: string;\r\n    static GIRDER: string;\r\n    static REINFORCEMENT_UNIT: string;\r\n    static RIGID_FRAME: string;\r\n    static SLAB_FIELD: string;\r\n    static TRUSS: string;\r\n    static ABUTMENT: string;\r\n    static PIER: string;\r\n    static PYLON: string;\r\n    static CROSS_BRACING: string;\r\n    static DECK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcElementCompositionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COMPLEX: string;\r\n    static ELEMENT: string;\r\n    static PARTIAL: string;\r\n}\r\n declare class IfcEngineTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static EXTERNALCOMBUSTION: string;\r\n    static INTERNALCOMBUSTION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcEvaporativeCoolerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER: string;\r\n    static DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER: string;\r\n    static DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER: string;\r\n    static DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER: string;\r\n    static DIRECTEVAPORATIVEAIRWASHER: string;\r\n    static INDIRECTEVAPORATIVEPACKAGEAIRCOOLER: string;\r\n    static INDIRECTEVAPORATIVEWETCOIL: string;\r\n    static INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER: string;\r\n    static INDIRECTDIRECTCOMBINATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcEvaporatorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DIRECTEXPANSION: string;\r\n    static DIRECTEXPANSIONSHELLANDTUBE: string;\r\n    static DIRECTEXPANSIONTUBEINTUBE: string;\r\n    static DIRECTEXPANSIONBRAZEDPLATE: string;\r\n    static FLOODEDSHELLANDTUBE: string;\r\n    static SHELLANDCOIL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcEventTriggerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static EVENTRULE: string;\r\n    static EVENTMESSAGE: string;\r\n    static EVENTTIME: string;\r\n    static EVENTCOMPLEX: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcEventTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STARTEVENT: string;\r\n    static ENDEVENT: string;\r\n    static INTERMEDIATEEVENT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcExternalSpatialElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static EXTERNAL: string;\r\n    static EXTERNAL_EARTH: string;\r\n    static EXTERNAL_WATER: string;\r\n    static EXTERNAL_FIRE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFanTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CENTRIFUGALFORWARDCURVED: string;\r\n    static CENTRIFUGALRADIAL: string;\r\n    static CENTRIFUGALBACKWARDINCLINEDCURVED: string;\r\n    static CENTRIFUGALAIRFOIL: string;\r\n    static TUBEAXIAL: string;\r\n    static VANEAXIAL: string;\r\n    static PROPELLORAXIAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFastenerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static GLUE: string;\r\n    static MORTAR: string;\r\n    static WELD: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFilterTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRPARTICLEFILTER: string;\r\n    static COMPRESSEDAIRFILTER: string;\r\n    static ODORFILTER: string;\r\n    static OILFILTER: string;\r\n    static STRAINER: string;\r\n    static WATERFILTER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFireSuppressionTerminalTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BREECHINGINLET: string;\r\n    static FIREHYDRANT: string;\r\n    static HOSEREEL: string;\r\n    static SPRINKLER: string;\r\n    static SPRINKLERDEFLECTOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFlowDirectionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SOURCE: string;\r\n    static SINK: string;\r\n    static SOURCEANDSINK: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFlowInstrumentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PRESSUREGAUGE: string;\r\n    static THERMOMETER: string;\r\n    static AMMETER: string;\r\n    static FREQUENCYMETER: string;\r\n    static POWERFACTORMETER: string;\r\n    static PHASEANGLEMETER: string;\r\n    static VOLTMETER_PEAK: string;\r\n    static VOLTMETER_RMS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFlowMeterTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ENERGYMETER: string;\r\n    static GASMETER: string;\r\n    static OILMETER: string;\r\n    static WATERMETER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFootingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CAISSON_FOUNDATION: string;\r\n    static FOOTING_BEAM: string;\r\n    static PAD_FOOTING: string;\r\n    static PILE_CAP: string;\r\n    static STRIP_FOOTING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcFurnitureTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CHAIR: string;\r\n    static TABLE: string;\r\n    static DESK: string;\r\n    static BED: string;\r\n    static FILECABINET: string;\r\n    static SHELF: string;\r\n    static SOFA: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcGeographicElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static TERRAIN: string;\r\n    static SOIL_BORING_POINT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcGeometricProjectionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static GRAPH_VIEW: string;\r\n    static SKETCH_VIEW: string;\r\n    static MODEL_VIEW: string;\r\n    static PLAN_VIEW: string;\r\n    static REFLECTED_PLAN_VIEW: string;\r\n    static SECTION_VIEW: string;\r\n    static ELEVATION_VIEW: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcGlobalOrLocalEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static GLOBAL_COORDS: string;\r\n    static LOCAL_COORDS: string;\r\n}\r\n declare class IfcGridTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static RECTANGULAR: string;\r\n    static RADIAL: string;\r\n    static TRIANGULAR: string;\r\n    static IRREGULAR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcHeatExchangerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PLATE: string;\r\n    static SHELLANDTUBE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcHumidifierTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STEAMINJECTION: string;\r\n    static ADIABATICAIRWASHER: string;\r\n    static ADIABATICPAN: string;\r\n    static ADIABATICWETTEDELEMENT: string;\r\n    static ADIABATICATOMIZING: string;\r\n    static ADIABATICULTRASONIC: string;\r\n    static ADIABATICRIGIDMEDIA: string;\r\n    static ADIABATICCOMPRESSEDAIRNOZZLE: string;\r\n    static ASSISTEDELECTRIC: string;\r\n    static ASSISTEDNATURALGAS: string;\r\n    static ASSISTEDPROPANE: string;\r\n    static ASSISTEDBUTANE: string;\r\n    static ASSISTEDSTEAM: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcInterceptorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CYCLONIC: string;\r\n    static GREASE: string;\r\n    static OIL: string;\r\n    static PETROL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcInternalOrExternalEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static INTERNAL: string;\r\n    static EXTERNAL: string;\r\n    static EXTERNAL_EARTH: string;\r\n    static EXTERNAL_WATER: string;\r\n    static EXTERNAL_FIRE: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcInventoryTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ASSETINVENTORY: string;\r\n    static SPACEINVENTORY: string;\r\n    static FURNITUREINVENTORY: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcJunctionBoxTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DATA: string;\r\n    static POWER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcKnotType {\r\n    value: string;\r\n    constructor(v: string);\r\n    static UNIFORM_KNOTS: string;\r\n    static QUASI_UNIFORM_KNOTS: string;\r\n    static PIECEWISE_BEZIER_KNOTS: string;\r\n    static UNSPECIFIED: string;\r\n}\r\n declare class IfcLaborResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ADMINISTRATION: string;\r\n    static CARPENTRY: string;\r\n    static CLEANING: string;\r\n    static CONCRETE: string;\r\n    static DRYWALL: string;\r\n    static ELECTRIC: string;\r\n    static FINISHING: string;\r\n    static FLOORING: string;\r\n    static GENERAL: string;\r\n    static HVAC: string;\r\n    static LANDSCAPING: string;\r\n    static MASONRY: string;\r\n    static PAINTING: string;\r\n    static PAVING: string;\r\n    static PLUMBING: string;\r\n    static ROOFING: string;\r\n    static SITEGRADING: string;\r\n    static STEELWORK: string;\r\n    static SURVEYING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLampTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COMPACTFLUORESCENT: string;\r\n    static FLUORESCENT: string;\r\n    static HALOGEN: string;\r\n    static HIGHPRESSUREMERCURY: string;\r\n    static HIGHPRESSURESODIUM: string;\r\n    static LED: string;\r\n    static METALHALIDE: string;\r\n    static OLED: string;\r\n    static TUNGSTENFILAMENT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLayerSetDirectionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AXIS1: string;\r\n    static AXIS2: string;\r\n    static AXIS3: string;\r\n}\r\n declare class IfcLightDistributionCurveEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static TYPE_A: string;\r\n    static TYPE_B: string;\r\n    static TYPE_C: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLightEmissionSourceEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COMPACTFLUORESCENT: string;\r\n    static FLUORESCENT: string;\r\n    static HIGHPRESSUREMERCURY: string;\r\n    static HIGHPRESSURESODIUM: string;\r\n    static LIGHTEMITTINGDIODE: string;\r\n    static LOWPRESSURESODIUM: string;\r\n    static LOWVOLTAGEHALOGEN: string;\r\n    static MAINVOLTAGEHALOGEN: string;\r\n    static METALHALIDE: string;\r\n    static TUNGSTENFILAMENT: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLightFixtureTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static POINTSOURCE: string;\r\n    static DIRECTIONSOURCE: string;\r\n    static SECURITYLIGHTING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLoadGroupTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LOAD_GROUP: string;\r\n    static LOAD_CASE: string;\r\n    static LOAD_COMBINATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcLogicalOperatorEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LOGICALAND: string;\r\n    static LOGICALOR: string;\r\n    static LOGICALXOR: string;\r\n    static LOGICALNOTAND: string;\r\n    static LOGICALNOTOR: string;\r\n}\r\n declare class IfcMechanicalFastenerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ANCHORBOLT: string;\r\n    static BOLT: string;\r\n    static DOWEL: string;\r\n    static NAIL: string;\r\n    static NAILPLATE: string;\r\n    static RIVET: string;\r\n    static SCREW: string;\r\n    static SHEARCONNECTOR: string;\r\n    static STAPLE: string;\r\n    static STUDSHEARCONNECTOR: string;\r\n    static COUPLER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcMedicalDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRSTATION: string;\r\n    static FEEDAIRUNIT: string;\r\n    static OXYGENGENERATOR: string;\r\n    static OXYGENPLANT: string;\r\n    static VACUUMSTATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcMemberTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BRACE: string;\r\n    static CHORD: string;\r\n    static COLLAR: string;\r\n    static MEMBER: string;\r\n    static MULLION: string;\r\n    static PLATE: string;\r\n    static POST: string;\r\n    static PURLIN: string;\r\n    static RAFTER: string;\r\n    static STRINGER: string;\r\n    static STRUT: string;\r\n    static STUD: string;\r\n    static STIFFENING_RIB: string;\r\n    static ARCH_SEGMENT: string;\r\n    static SUSPENSION_CABLE: string;\r\n    static SUSPENDER: string;\r\n    static STAY_CABLE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcMotorConnectionTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BELTDRIVE: string;\r\n    static COUPLING: string;\r\n    static DIRECTDRIVE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcNullStyle {\r\n    value: string;\r\n    constructor(v: string);\r\n    static NULL: string;\r\n}\r\n declare class IfcObjectTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PRODUCT: string;\r\n    static PROCESS: string;\r\n    static CONTROL: string;\r\n    static RESOURCE: string;\r\n    static ACTOR: string;\r\n    static GROUP: string;\r\n    static PROJECT: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcObjectiveEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CODECOMPLIANCE: string;\r\n    static CODEWAIVER: string;\r\n    static DESIGNINTENT: string;\r\n    static EXTERNAL: string;\r\n    static HEALTHANDSAFETY: string;\r\n    static MERGECONFLICT: string;\r\n    static MODELVIEW: string;\r\n    static PARAMETER: string;\r\n    static REQUIREMENT: string;\r\n    static SPECIFICATION: string;\r\n    static TRIGGERCONDITION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcOccupantTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ASSIGNEE: string;\r\n    static ASSIGNOR: string;\r\n    static LESSEE: string;\r\n    static LESSOR: string;\r\n    static LETTINGAGENT: string;\r\n    static OWNER: string;\r\n    static TENANT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcOpeningElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static OPENING: string;\r\n    static RECESS: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcOutletTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AUDIOVISUALOUTLET: string;\r\n    static COMMUNICATIONSOUTLET: string;\r\n    static POWEROUTLET: string;\r\n    static DATAOUTLET: string;\r\n    static TELEPHONEOUTLET: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPerformanceHistoryTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPermeableCoveringOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static GRILL: string;\r\n    static LOUVER: string;\r\n    static SCREEN: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPermitTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ACCESS: string;\r\n    static BUILDING: string;\r\n    static WORK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPhysicalOrVirtualEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PHYSICAL: string;\r\n    static VIRTUAL: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPileConstructionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CAST_IN_PLACE: string;\r\n    static COMPOSITE: string;\r\n    static PRECAST_CONCRETE: string;\r\n    static PREFAB_STEEL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPileTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BORED: string;\r\n    static DRIVEN: string;\r\n    static JETGROUTING: string;\r\n    static COHESION: string;\r\n    static FRICTION: string;\r\n    static SUPPORT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPipeFittingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BEND: string;\r\n    static CONNECTOR: string;\r\n    static ENTRY: string;\r\n    static EXIT: string;\r\n    static JUNCTION: string;\r\n    static OBSTRUCTION: string;\r\n    static TRANSITION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPipeSegmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CULVERT: string;\r\n    static FLEXIBLESEGMENT: string;\r\n    static RIGIDSEGMENT: string;\r\n    static GUTTER: string;\r\n    static SPOOL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPlateTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CURTAIN_PANEL: string;\r\n    static SHEET: string;\r\n    static FLANGE_PLATE: string;\r\n    static WEB_PLATE: string;\r\n    static STIFFENER_PLATE: string;\r\n    static GUSSET_PLATE: string;\r\n    static COVER_PLATE: string;\r\n    static SPLICE_PLATE: string;\r\n    static BASE_PLATE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPreferredSurfaceCurveRepresentation {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CURVE3D: string;\r\n    static PCURVE_S1: string;\r\n    static PCURVE_S2: string;\r\n}\r\n declare class IfcProcedureTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ADVICE_CAUTION: string;\r\n    static ADVICE_NOTE: string;\r\n    static ADVICE_WARNING: string;\r\n    static CALIBRATION: string;\r\n    static DIAGNOSTIC: string;\r\n    static SHUTDOWN: string;\r\n    static STARTUP: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcProfileTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CURVE: string;\r\n    static AREA: string;\r\n}\r\n declare class IfcProjectOrderTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CHANGEORDER: string;\r\n    static MAINTENANCEWORKORDER: string;\r\n    static MOVEORDER: string;\r\n    static PURCHASEORDER: string;\r\n    static WORKORDER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcProjectedOrTrueLengthEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PROJECTED_LENGTH: string;\r\n    static TRUE_LENGTH: string;\r\n}\r\n declare class IfcProjectionElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BLISTER: string;\r\n    static DEVIATOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPropertySetTemplateTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PSET_TYPEDRIVENONLY: string;\r\n    static PSET_TYPEDRIVENOVERRIDE: string;\r\n    static PSET_OCCURRENCEDRIVEN: string;\r\n    static PSET_PERFORMANCEDRIVEN: string;\r\n    static QTO_TYPEDRIVENONLY: string;\r\n    static QTO_TYPEDRIVENOVERRIDE: string;\r\n    static QTO_OCCURRENCEDRIVEN: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcProtectiveDeviceTrippingUnitTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ELECTRONIC: string;\r\n    static ELECTROMAGNETIC: string;\r\n    static RESIDUALCURRENT: string;\r\n    static THERMAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcProtectiveDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CIRCUITBREAKER: string;\r\n    static EARTHLEAKAGECIRCUITBREAKER: string;\r\n    static EARTHINGSWITCH: string;\r\n    static FUSEDISCONNECTOR: string;\r\n    static RESIDUALCURRENTCIRCUITBREAKER: string;\r\n    static RESIDUALCURRENTSWITCH: string;\r\n    static VARISTOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcPumpTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CIRCULATOR: string;\r\n    static ENDSUCTION: string;\r\n    static SPLITCASE: string;\r\n    static SUBMERSIBLEPUMP: string;\r\n    static SUMPPUMP: string;\r\n    static VERTICALINLINE: string;\r\n    static VERTICALTURBINE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcRailingTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static HANDRAIL: string;\r\n    static GUARDRAIL: string;\r\n    static BALUSTRADE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcRampFlightTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STRAIGHT: string;\r\n    static SPIRAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcRampTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STRAIGHT_RUN_RAMP: string;\r\n    static TWO_STRAIGHT_RUN_RAMP: string;\r\n    static QUARTER_TURN_RAMP: string;\r\n    static TWO_QUARTER_TURN_RAMP: string;\r\n    static HALF_TURN_RAMP: string;\r\n    static SPIRAL_RAMP: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcRecurrenceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DAILY: string;\r\n    static WEEKLY: string;\r\n    static MONTHLY_BY_DAY_OF_MONTH: string;\r\n    static MONTHLY_BY_POSITION: string;\r\n    static BY_DAY_COUNT: string;\r\n    static BY_WEEKDAY_COUNT: string;\r\n    static YEARLY_BY_DAY_OF_MONTH: string;\r\n    static YEARLY_BY_POSITION: string;\r\n}\r\n declare class IfcReferentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static KILOPOINT: string;\r\n    static MILEPOINT: string;\r\n    static STATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcReflectanceMethodEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BLINN: string;\r\n    static FLAT: string;\r\n    static GLASS: string;\r\n    static MATT: string;\r\n    static METAL: string;\r\n    static MIRROR: string;\r\n    static PHONG: string;\r\n    static PLASTIC: string;\r\n    static STRAUSS: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcReinforcingBarRoleEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static MAIN: string;\r\n    static SHEAR: string;\r\n    static LIGATURE: string;\r\n    static STUD: string;\r\n    static PUNCHING: string;\r\n    static EDGE: string;\r\n    static RING: string;\r\n    static ANCHORING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcReinforcingBarSurfaceEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PLAIN: string;\r\n    static TEXTURED: string;\r\n}\r\n declare class IfcReinforcingBarTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ANCHORING: string;\r\n    static EDGE: string;\r\n    static LIGATURE: string;\r\n    static MAIN: string;\r\n    static PUNCHING: string;\r\n    static RING: string;\r\n    static SHEAR: string;\r\n    static STUD: string;\r\n    static SPACEBAR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcReinforcingMeshTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcRoleEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SUPPLIER: string;\r\n    static MANUFACTURER: string;\r\n    static CONTRACTOR: string;\r\n    static SUBCONTRACTOR: string;\r\n    static ARCHITECT: string;\r\n    static STRUCTURALENGINEER: string;\r\n    static COSTENGINEER: string;\r\n    static CLIENT: string;\r\n    static BUILDINGOWNER: string;\r\n    static BUILDINGOPERATOR: string;\r\n    static MECHANICALENGINEER: string;\r\n    static ELECTRICALENGINEER: string;\r\n    static PROJECTMANAGER: string;\r\n    static FACILITIESMANAGER: string;\r\n    static CIVILENGINEER: string;\r\n    static COMMISSIONINGENGINEER: string;\r\n    static ENGINEER: string;\r\n    static OWNER: string;\r\n    static CONSULTANT: string;\r\n    static CONSTRUCTIONMANAGER: string;\r\n    static FIELDCONSTRUCTIONMANAGER: string;\r\n    static RESELLER: string;\r\n    static USERDEFINED: string;\r\n}\r\n declare class IfcRoofTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FLAT_ROOF: string;\r\n    static SHED_ROOF: string;\r\n    static GABLE_ROOF: string;\r\n    static HIP_ROOF: string;\r\n    static HIPPED_GABLE_ROOF: string;\r\n    static GAMBREL_ROOF: string;\r\n    static MANSARD_ROOF: string;\r\n    static BARREL_ROOF: string;\r\n    static RAINBOW_ROOF: string;\r\n    static BUTTERFLY_ROOF: string;\r\n    static PAVILION_ROOF: string;\r\n    static DOME_ROOF: string;\r\n    static FREEFORM: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSIPrefix {\r\n    value: string;\r\n    constructor(v: string);\r\n    static EXA: string;\r\n    static PETA: string;\r\n    static TERA: string;\r\n    static GIGA: string;\r\n    static MEGA: string;\r\n    static KILO: string;\r\n    static HECTO: string;\r\n    static DECA: string;\r\n    static DECI: string;\r\n    static CENTI: string;\r\n    static MILLI: string;\r\n    static MICRO: string;\r\n    static NANO: string;\r\n    static PICO: string;\r\n    static FEMTO: string;\r\n    static ATTO: string;\r\n}\r\n declare class IfcSIUnitName {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AMPERE: string;\r\n    static BECQUEREL: string;\r\n    static CANDELA: string;\r\n    static COULOMB: string;\r\n    static CUBIC_METRE: string;\r\n    static DEGREE_CELSIUS: string;\r\n    static FARAD: string;\r\n    static GRAM: string;\r\n    static GRAY: string;\r\n    static HENRY: string;\r\n    static HERTZ: string;\r\n    static JOULE: string;\r\n    static KELVIN: string;\r\n    static LUMEN: string;\r\n    static LUX: string;\r\n    static METRE: string;\r\n    static MOLE: string;\r\n    static NEWTON: string;\r\n    static OHM: string;\r\n    static PASCAL: string;\r\n    static RADIAN: string;\r\n    static SECOND: string;\r\n    static SIEMENS: string;\r\n    static SIEVERT: string;\r\n    static SQUARE_METRE: string;\r\n    static STERADIAN: string;\r\n    static TESLA: string;\r\n    static VOLT: string;\r\n    static WATT: string;\r\n    static WEBER: string;\r\n}\r\n declare class IfcSanitaryTerminalTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BATH: string;\r\n    static BIDET: string;\r\n    static CISTERN: string;\r\n    static SHOWER: string;\r\n    static SINK: string;\r\n    static SANITARYFOUNTAIN: string;\r\n    static TOILETPAN: string;\r\n    static URINAL: string;\r\n    static WASHHANDBASIN: string;\r\n    static WCSEAT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSectionTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static UNIFORM: string;\r\n    static TAPERED: string;\r\n}\r\n declare class IfcSensorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COSENSOR: string;\r\n    static CO2SENSOR: string;\r\n    static CONDUCTANCESENSOR: string;\r\n    static CONTACTSENSOR: string;\r\n    static FIRESENSOR: string;\r\n    static FLOWSENSOR: string;\r\n    static FROSTSENSOR: string;\r\n    static GASSENSOR: string;\r\n    static HEATSENSOR: string;\r\n    static HUMIDITYSENSOR: string;\r\n    static IDENTIFIERSENSOR: string;\r\n    static IONCONCENTRATIONSENSOR: string;\r\n    static LEVELSENSOR: string;\r\n    static LIGHTSENSOR: string;\r\n    static MOISTURESENSOR: string;\r\n    static MOVEMENTSENSOR: string;\r\n    static PHSENSOR: string;\r\n    static PRESSURESENSOR: string;\r\n    static RADIATIONSENSOR: string;\r\n    static RADIOACTIVITYSENSOR: string;\r\n    static SMOKESENSOR: string;\r\n    static SOUNDSENSOR: string;\r\n    static TEMPERATURESENSOR: string;\r\n    static WINDSENSOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSequenceEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static START_START: string;\r\n    static START_FINISH: string;\r\n    static FINISH_START: string;\r\n    static FINISH_FINISH: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcShadingDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static JALOUSIE: string;\r\n    static SHUTTER: string;\r\n    static AWNING: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSimplePropertyTemplateTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static P_SINGLEVALUE: string;\r\n    static P_ENUMERATEDVALUE: string;\r\n    static P_BOUNDEDVALUE: string;\r\n    static P_LISTVALUE: string;\r\n    static P_TABLEVALUE: string;\r\n    static P_REFERENCEVALUE: string;\r\n    static Q_LENGTH: string;\r\n    static Q_AREA: string;\r\n    static Q_VOLUME: string;\r\n    static Q_COUNT: string;\r\n    static Q_WEIGHT: string;\r\n    static Q_TIME: string;\r\n}\r\n declare class IfcSlabTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FLOOR: string;\r\n    static ROOF: string;\r\n    static LANDING: string;\r\n    static BASESLAB: string;\r\n    static APPROACH_SLAB: string;\r\n    static PAVING: string;\r\n    static WEARING: string;\r\n    static SIDEWALK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSolarDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SOLARCOLLECTOR: string;\r\n    static SOLARPANEL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSpaceHeaterTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONVECTOR: string;\r\n    static RADIATOR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSpaceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SPACE: string;\r\n    static PARKING: string;\r\n    static GFA: string;\r\n    static INTERNAL: string;\r\n    static EXTERNAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSpatialZoneTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONSTRUCTION: string;\r\n    static FIRESAFETY: string;\r\n    static LIGHTING: string;\r\n    static OCCUPANCY: string;\r\n    static SECURITY: string;\r\n    static THERMAL: string;\r\n    static TRANSPORT: string;\r\n    static VENTILATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStackTerminalTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BIRDCAGE: string;\r\n    static COWL: string;\r\n    static RAINWATERHOPPER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStairFlightTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STRAIGHT: string;\r\n    static WINDER: string;\r\n    static SPIRAL: string;\r\n    static CURVED: string;\r\n    static FREEFORM: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStairTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static STRAIGHT_RUN_STAIR: string;\r\n    static TWO_STRAIGHT_RUN_STAIR: string;\r\n    static QUARTER_WINDING_STAIR: string;\r\n    static QUARTER_TURN_STAIR: string;\r\n    static HALF_WINDING_STAIR: string;\r\n    static HALF_TURN_STAIR: string;\r\n    static TWO_QUARTER_WINDING_STAIR: string;\r\n    static TWO_QUARTER_TURN_STAIR: string;\r\n    static THREE_QUARTER_WINDING_STAIR: string;\r\n    static THREE_QUARTER_TURN_STAIR: string;\r\n    static SPIRAL_STAIR: string;\r\n    static DOUBLE_RETURN_STAIR: string;\r\n    static CURVED_RUN_STAIR: string;\r\n    static TWO_CURVED_RUN_STAIR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStateEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static READWRITE: string;\r\n    static READONLY: string;\r\n    static LOCKED: string;\r\n    static READWRITELOCKED: string;\r\n    static READONLYLOCKED: string;\r\n}\r\n declare class IfcStructuralCurveActivityTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONST: string;\r\n    static LINEAR: string;\r\n    static POLYGONAL: string;\r\n    static EQUIDISTANT: string;\r\n    static SINUS: string;\r\n    static PARABOLA: string;\r\n    static DISCRETE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStructuralCurveMemberTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static RIGID_JOINED_MEMBER: string;\r\n    static PIN_JOINED_MEMBER: string;\r\n    static CABLE: string;\r\n    static TENSION_MEMBER: string;\r\n    static COMPRESSION_MEMBER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStructuralSurfaceActivityTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONST: string;\r\n    static BILINEAR: string;\r\n    static DISCRETE: string;\r\n    static ISOCONTOUR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcStructuralSurfaceMemberTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BENDING_ELEMENT: string;\r\n    static MEMBRANE_ELEMENT: string;\r\n    static SHELL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSubContractResourceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PURCHASE: string;\r\n    static WORK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSurfaceFeatureTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static MARK: string;\r\n    static TAG: string;\r\n    static TREATMENT: string;\r\n    static DEFECT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSurfaceSide {\r\n    value: string;\r\n    constructor(v: string);\r\n    static POSITIVE: string;\r\n    static NEGATIVE: string;\r\n    static BOTH: string;\r\n}\r\n declare class IfcSwitchingDeviceTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONTACTOR: string;\r\n    static DIMMERSWITCH: string;\r\n    static EMERGENCYSTOP: string;\r\n    static KEYPAD: string;\r\n    static MOMENTARYSWITCH: string;\r\n    static SELECTORSWITCH: string;\r\n    static STARTER: string;\r\n    static SWITCHDISCONNECTOR: string;\r\n    static TOGGLESWITCH: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcSystemFurnitureElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static PANEL: string;\r\n    static WORKSURFACE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTankTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BASIN: string;\r\n    static BREAKPRESSURE: string;\r\n    static EXPANSION: string;\r\n    static FEEDANDEXPANSION: string;\r\n    static PRESSUREVESSEL: string;\r\n    static STORAGE: string;\r\n    static VESSEL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTaskDurationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ELAPSEDTIME: string;\r\n    static WORKTIME: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTaskTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ATTENDANCE: string;\r\n    static CONSTRUCTION: string;\r\n    static DEMOLITION: string;\r\n    static DISMANTLE: string;\r\n    static DISPOSAL: string;\r\n    static INSTALLATION: string;\r\n    static LOGISTIC: string;\r\n    static MAINTENANCE: string;\r\n    static MOVE: string;\r\n    static OPERATION: string;\r\n    static REMOVAL: string;\r\n    static RENOVATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTendonAnchorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COUPLER: string;\r\n    static FIXED_END: string;\r\n    static TENSIONING_END: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTendonConduitTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DUCT: string;\r\n    static COUPLER: string;\r\n    static GROUTING_DUCT: string;\r\n    static TRUMPET: string;\r\n    static DIABOLO: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTendonTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BAR: string;\r\n    static COATED: string;\r\n    static STRAND: string;\r\n    static WIRE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTextPath {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LEFT: string;\r\n    static RIGHT: string;\r\n    static UP: string;\r\n    static DOWN: string;\r\n}\r\n declare class IfcTimeSeriesDataTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CONTINUOUS: string;\r\n    static DISCRETE: string;\r\n    static DISCRETEBINARY: string;\r\n    static PIECEWISEBINARY: string;\r\n    static PIECEWISECONSTANT: string;\r\n    static PIECEWISECONTINUOUS: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTransformerTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CURRENT: string;\r\n    static FREQUENCY: string;\r\n    static INVERTER: string;\r\n    static RECTIFIER: string;\r\n    static VOLTAGE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTransitionCode {\r\n    value: string;\r\n    constructor(v: string);\r\n    static DISCONTINUOUS: string;\r\n    static CONTINUOUS: string;\r\n    static CONTSAMEGRADIENT: string;\r\n    static CONTSAMEGRADIENTSAMECURVATURE: string;\r\n}\r\n declare class IfcTransitionCurveType {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BIQUADRATICPARABOLA: string;\r\n    static BLOSSCURVE: string;\r\n    static CLOTHOIDCURVE: string;\r\n    static COSINECURVE: string;\r\n    static CUBICPARABOLA: string;\r\n    static SINECURVE: string;\r\n}\r\n declare class IfcTransportElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ELEVATOR: string;\r\n    static ESCALATOR: string;\r\n    static MOVINGWALKWAY: string;\r\n    static CRANEWAY: string;\r\n    static LIFTINGGEAR: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcTrimmingPreference {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CARTESIAN: string;\r\n    static PARAMETER: string;\r\n    static UNSPECIFIED: string;\r\n}\r\n declare class IfcTubeBundleTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FINNED: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcUnitEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ABSORBEDDOSEUNIT: string;\r\n    static AMOUNTOFSUBSTANCEUNIT: string;\r\n    static AREAUNIT: string;\r\n    static DOSEEQUIVALENTUNIT: string;\r\n    static ELECTRICCAPACITANCEUNIT: string;\r\n    static ELECTRICCHARGEUNIT: string;\r\n    static ELECTRICCONDUCTANCEUNIT: string;\r\n    static ELECTRICCURRENTUNIT: string;\r\n    static ELECTRICRESISTANCEUNIT: string;\r\n    static ELECTRICVOLTAGEUNIT: string;\r\n    static ENERGYUNIT: string;\r\n    static FORCEUNIT: string;\r\n    static FREQUENCYUNIT: string;\r\n    static ILLUMINANCEUNIT: string;\r\n    static INDUCTANCEUNIT: string;\r\n    static LENGTHUNIT: string;\r\n    static LUMINOUSFLUXUNIT: string;\r\n    static LUMINOUSINTENSITYUNIT: string;\r\n    static MAGNETICFLUXDENSITYUNIT: string;\r\n    static MAGNETICFLUXUNIT: string;\r\n    static MASSUNIT: string;\r\n    static PLANEANGLEUNIT: string;\r\n    static POWERUNIT: string;\r\n    static PRESSUREUNIT: string;\r\n    static RADIOACTIVITYUNIT: string;\r\n    static SOLIDANGLEUNIT: string;\r\n    static THERMODYNAMICTEMPERATUREUNIT: string;\r\n    static TIMEUNIT: string;\r\n    static VOLUMEUNIT: string;\r\n    static USERDEFINED: string;\r\n}\r\n declare class IfcUnitaryControlElementTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ALARMPANEL: string;\r\n    static CONTROLPANEL: string;\r\n    static GASDETECTIONPANEL: string;\r\n    static INDICATORPANEL: string;\r\n    static MIMICPANEL: string;\r\n    static HUMIDISTAT: string;\r\n    static THERMOSTAT: string;\r\n    static WEATHERSTATION: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcUnitaryEquipmentTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRHANDLER: string;\r\n    static AIRCONDITIONINGUNIT: string;\r\n    static DEHUMIDIFIER: string;\r\n    static SPLITSYSTEM: string;\r\n    static ROOFTOPUNIT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcValveTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static AIRRELEASE: string;\r\n    static ANTIVACUUM: string;\r\n    static CHANGEOVER: string;\r\n    static CHECK: string;\r\n    static COMMISSIONING: string;\r\n    static DIVERTING: string;\r\n    static DRAWOFFCOCK: string;\r\n    static DOUBLECHECK: string;\r\n    static DOUBLEREGULATING: string;\r\n    static FAUCET: string;\r\n    static FLUSHING: string;\r\n    static GASCOCK: string;\r\n    static GASTAP: string;\r\n    static ISOLATING: string;\r\n    static MIXING: string;\r\n    static PRESSUREREDUCING: string;\r\n    static PRESSURERELIEF: string;\r\n    static REGULATING: string;\r\n    static SAFETYCUTOFF: string;\r\n    static STEAMTRAP: string;\r\n    static STOPCOCK: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcVibrationDamperTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static BENDING_YIELD: string;\r\n    static SHEAR_YIELD: string;\r\n    static AXIAL_YIELD: string;\r\n    static FRICTION: string;\r\n    static VISCOUS: string;\r\n    static RUBBER: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcVibrationIsolatorTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static COMPRESSION: string;\r\n    static SPRING: string;\r\n    static BASE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcVoidingFeatureTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static CUTOUT: string;\r\n    static NOTCH: string;\r\n    static HOLE: string;\r\n    static MITER: string;\r\n    static CHAMFER: string;\r\n    static EDGE: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWallTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static MOVABLE: string;\r\n    static PARAPET: string;\r\n    static PARTITIONING: string;\r\n    static PLUMBINGWALL: string;\r\n    static SHEAR: string;\r\n    static SOLIDWALL: string;\r\n    static STANDARD: string;\r\n    static POLYGONAL: string;\r\n    static ELEMENTEDWALL: string;\r\n    static RETAININGWALL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWasteTerminalTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FLOORTRAP: string;\r\n    static FLOORWASTE: string;\r\n    static GULLYSUMP: string;\r\n    static GULLYTRAP: string;\r\n    static ROOFDRAIN: string;\r\n    static WASTEDISPOSALUNIT: string;\r\n    static WASTETRAP: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowPanelOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SIDEHUNGRIGHTHAND: string;\r\n    static SIDEHUNGLEFTHAND: string;\r\n    static TILTANDTURNRIGHTHAND: string;\r\n    static TILTANDTURNLEFTHAND: string;\r\n    static TOPHUNG: string;\r\n    static BOTTOMHUNG: string;\r\n    static PIVOTHORIZONTAL: string;\r\n    static PIVOTVERTICAL: string;\r\n    static SLIDINGHORIZONTAL: string;\r\n    static SLIDINGVERTICAL: string;\r\n    static REMOVABLECASEMENT: string;\r\n    static FIXEDCASEMENT: string;\r\n    static OTHEROPERATION: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowPanelPositionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static LEFT: string;\r\n    static MIDDLE: string;\r\n    static RIGHT: string;\r\n    static BOTTOM: string;\r\n    static TOP: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowStyleConstructionEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ALUMINIUM: string;\r\n    static HIGH_GRADE_STEEL: string;\r\n    static STEEL: string;\r\n    static WOOD: string;\r\n    static ALUMINIUM_WOOD: string;\r\n    static PLASTIC: string;\r\n    static OTHER_CONSTRUCTION: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowStyleOperationEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SINGLE_PANEL: string;\r\n    static DOUBLE_PANEL_VERTICAL: string;\r\n    static DOUBLE_PANEL_HORIZONTAL: string;\r\n    static TRIPLE_PANEL_VERTICAL: string;\r\n    static TRIPLE_PANEL_BOTTOM: string;\r\n    static TRIPLE_PANEL_TOP: string;\r\n    static TRIPLE_PANEL_LEFT: string;\r\n    static TRIPLE_PANEL_RIGHT: string;\r\n    static TRIPLE_PANEL_HORIZONTAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static WINDOW: string;\r\n    static SKYLIGHT: string;\r\n    static LIGHTDOME: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWindowTypePartitioningEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static SINGLE_PANEL: string;\r\n    static DOUBLE_PANEL_VERTICAL: string;\r\n    static DOUBLE_PANEL_HORIZONTAL: string;\r\n    static TRIPLE_PANEL_VERTICAL: string;\r\n    static TRIPLE_PANEL_BOTTOM: string;\r\n    static TRIPLE_PANEL_TOP: string;\r\n    static TRIPLE_PANEL_LEFT: string;\r\n    static TRIPLE_PANEL_RIGHT: string;\r\n    static TRIPLE_PANEL_HORIZONTAL: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWorkCalendarTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static FIRSTSHIFT: string;\r\n    static SECONDSHIFT: string;\r\n    static THIRDSHIFT: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWorkPlanTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ACTUAL: string;\r\n    static BASELINE: string;\r\n    static PLANNED: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare class IfcWorkScheduleTypeEnum {\r\n    value: string;\r\n    constructor(v: string);\r\n    static ACTUAL: string;\r\n    static BASELINE: string;\r\n    static PLANNED: string;\r\n    static USERDEFINED: string;\r\n    static NOTDEFINED: string;\r\n}\r\n declare type IfcActorSelect = (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization);\r\n declare type IfcAppliedValueSelect = (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcReference> | IfcReference) | IfcValue;\r\n declare type IfcAxis2Placement = (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n declare type IfcBendingParameterSelect = IfcLengthMeasure | IfcPlaneAngleMeasure;\r\n declare type IfcBooleanOperand = (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D) | (Handle<IfcHalfSpaceSolid> | IfcHalfSpaceSolid) | (Handle<IfcSolidModel> | IfcSolidModel) | (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet);\r\n declare type IfcClassificationReferenceSelect = (Handle<IfcClassification> | IfcClassification) | (Handle<IfcClassificationReference> | IfcClassificationReference);\r\n declare type IfcClassificationSelect = (Handle<IfcClassification> | IfcClassification) | (Handle<IfcClassificationReference> | IfcClassificationReference);\r\n declare type IfcColour = (Handle<IfcColourSpecification> | IfcColourSpecification) | (Handle<IfcPreDefinedColour> | IfcPreDefinedColour);\r\n declare type IfcColourOrFactor = (Handle<IfcColourRgb> | IfcColourRgb) | IfcNormalisedRatioMeasure;\r\n declare type IfcCoordinateReferenceSystemSelect = (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem) | (Handle<IfcGeometricRepresentationContext> | IfcGeometricRepresentationContext);\r\n declare type IfcCsgSelect = (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D);\r\n declare type IfcCurveFontOrScaledCurveFontSelect = (Handle<IfcCurveStyleFontAndScaling> | IfcCurveStyleFontAndScaling) | IfcCurveStyleFontSelect;\r\n declare type IfcCurveOnSurface = (Handle<IfcCompositeCurveOnSurface> | IfcCompositeCurveOnSurface) | (Handle<IfcPcurve> | IfcPcurve) | (Handle<IfcSurfaceCurve> | IfcSurfaceCurve);\r\n declare type IfcCurveOrEdgeCurve = (Handle<IfcBoundedCurve> | IfcBoundedCurve) | (Handle<IfcEdgeCurve> | IfcEdgeCurve);\r\n declare type IfcCurveStyleFontSelect = (Handle<IfcCurveStyleFont> | IfcCurveStyleFont) | (Handle<IfcPreDefinedCurveFont> | IfcPreDefinedCurveFont);\r\n declare type IfcDefinitionSelect = (Handle<IfcObjectDefinition> | IfcObjectDefinition) | (Handle<IfcPropertyDefinition> | IfcPropertyDefinition);\r\n declare type IfcDerivedMeasureValue = IfcAbsorbedDoseMeasure | IfcAccelerationMeasure | IfcAngularVelocityMeasure | IfcAreaDensityMeasure | IfcCompoundPlaneAngleMeasure | IfcCurvatureMeasure | IfcDoseEquivalentMeasure | IfcDynamicViscosityMeasure | IfcElectricCapacitanceMeasure | IfcElectricChargeMeasure | IfcElectricConductanceMeasure | IfcElectricResistanceMeasure | IfcElectricVoltageMeasure | IfcEnergyMeasure | IfcForceMeasure | IfcFrequencyMeasure | IfcHeatFluxDensityMeasure | IfcHeatingValueMeasure | IfcIlluminanceMeasure | IfcInductanceMeasure | IfcIntegerCountRateMeasure | IfcIonConcentrationMeasure | IfcIsothermalMoistureCapacityMeasure | IfcKinematicViscosityMeasure | IfcLinearForceMeasure | IfcLinearMomentMeasure | IfcLinearStiffnessMeasure | IfcLinearVelocityMeasure | IfcLuminousFluxMeasure | IfcLuminousIntensityDistributionMeasure | IfcMagneticFluxDensityMeasure | IfcMagneticFluxMeasure | IfcMassDensityMeasure | IfcMassFlowRateMeasure | IfcMassPerLengthMeasure | IfcModulusOfElasticityMeasure | IfcModulusOfLinearSubgradeReactionMeasure | IfcModulusOfRotationalSubgradeReactionMeasure | IfcModulusOfSubgradeReactionMeasure | IfcMoistureDiffusivityMeasure | IfcMolecularWeightMeasure | IfcMomentOfInertiaMeasure | IfcMonetaryMeasure | IfcPHMeasure | IfcPlanarForceMeasure | IfcPowerMeasure | IfcPressureMeasure | IfcRadioActivityMeasure | IfcRotationalFrequencyMeasure | IfcRotationalMassMeasure | IfcRotationalStiffnessMeasure | IfcSectionModulusMeasure | IfcSectionalAreaIntegralMeasure | IfcShearModulusMeasure | IfcSoundPowerLevelMeasure | IfcSoundPowerMeasure | IfcSoundPressureLevelMeasure | IfcSoundPressureMeasure | IfcSpecificHeatCapacityMeasure | IfcTemperatureGradientMeasure | IfcTemperatureRateOfChangeMeasure | IfcThermalAdmittanceMeasure | IfcThermalConductivityMeasure | IfcThermalExpansionCoefficientMeasure | IfcThermalResistanceMeasure | IfcThermalTransmittanceMeasure | IfcTorqueMeasure | IfcVaporPermeabilityMeasure | IfcVolumetricFlowRateMeasure | IfcWarpingConstantMeasure | IfcWarpingMomentMeasure;\r\n declare type IfcDocumentSelect = (Handle<IfcDocumentInformation> | IfcDocumentInformation) | (Handle<IfcDocumentReference> | IfcDocumentReference);\r\n declare type IfcFillStyleSelect = IfcColour | (Handle<IfcExternallyDefinedHatchStyle> | IfcExternallyDefinedHatchStyle) | (Handle<IfcFillAreaStyleHatching> | IfcFillAreaStyleHatching) | (Handle<IfcFillAreaStyleTiles> | IfcFillAreaStyleTiles);\r\n declare type IfcGeometricSetSelect = (Handle<IfcCurve> | IfcCurve) | (Handle<IfcPoint> | IfcPoint) | (Handle<IfcSurface> | IfcSurface);\r\n declare type IfcGridPlacementDirectionSelect = (Handle<IfcDirection> | IfcDirection) | (Handle<IfcVirtualGridIntersection> | IfcVirtualGridIntersection);\r\n declare type IfcHatchLineDistanceSelect = IfcPositiveLengthMeasure | (Handle<IfcVector> | IfcVector);\r\n declare type IfcLayeredItem = (Handle<IfcRepresentation> | IfcRepresentation) | (Handle<IfcRepresentationItem> | IfcRepresentationItem);\r\n declare type IfcLibrarySelect = (Handle<IfcLibraryInformation> | IfcLibraryInformation) | (Handle<IfcLibraryReference> | IfcLibraryReference);\r\n declare type IfcLightDistributionDataSourceSelect = (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcLightIntensityDistribution> | IfcLightIntensityDistribution);\r\n declare type IfcMaterialSelect = (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcMaterialList> | IfcMaterialList) | (Handle<IfcMaterialUsageDefinition> | IfcMaterialUsageDefinition);\r\n declare type IfcMeasureValue = IfcAmountOfSubstanceMeasure | IfcAreaMeasure | IfcComplexNumber | IfcContextDependentMeasure | IfcCountMeasure | IfcDescriptiveMeasure | IfcElectricCurrentMeasure | IfcLengthMeasure | IfcLuminousIntensityMeasure | IfcMassMeasure | IfcNonNegativeLengthMeasure | IfcNormalisedRatioMeasure | IfcNumericMeasure | IfcParameterValue | IfcPlaneAngleMeasure | IfcPositiveLengthMeasure | IfcPositivePlaneAngleMeasure | IfcPositiveRatioMeasure | IfcRatioMeasure | IfcSolidAngleMeasure | IfcThermodynamicTemperatureMeasure | IfcTimeMeasure | IfcVolumeMeasure;\r\n declare type IfcMetricValueSelect = (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcReference> | IfcReference) | (Handle<IfcTable> | IfcTable) | (Handle<IfcTimeSeries> | IfcTimeSeries) | IfcValue;\r\n declare type IfcModulusOfRotationalSubgradeReactionSelect = IfcBoolean | IfcModulusOfRotationalSubgradeReactionMeasure;\r\n declare type IfcModulusOfSubgradeReactionSelect = IfcBoolean | IfcModulusOfSubgradeReactionMeasure;\r\n declare type IfcModulusOfTranslationalSubgradeReactionSelect = IfcBoolean | IfcModulusOfLinearSubgradeReactionMeasure;\r\n declare type IfcObjectReferenceSelect = (Handle<IfcAddress> | IfcAddress) | (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | (Handle<IfcTable> | IfcTable) | (Handle<IfcTimeSeries> | IfcTimeSeries);\r\n declare type IfcPointOrVertexPoint = (Handle<IfcPoint> | IfcPoint) | (Handle<IfcVertexPoint> | IfcVertexPoint);\r\n declare type IfcPresentationStyleSelect = (Handle<IfcCurveStyle> | IfcCurveStyle) | (Handle<IfcFillAreaStyle> | IfcFillAreaStyle) | IfcNullStyle | (Handle<IfcSurfaceStyle> | IfcSurfaceStyle) | (Handle<IfcTextStyle> | IfcTextStyle);\r\n declare type IfcProcessSelect = (Handle<IfcProcess> | IfcProcess) | (Handle<IfcTypeProcess> | IfcTypeProcess);\r\n declare type IfcProductRepresentationSelect = (Handle<IfcProductDefinitionShape> | IfcProductDefinitionShape) | (Handle<IfcRepresentationMap> | IfcRepresentationMap);\r\n declare type IfcProductSelect = (Handle<IfcProduct> | IfcProduct) | (Handle<IfcTypeProduct> | IfcTypeProduct);\r\n declare type IfcPropertySetDefinitionSelect = (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition) | IfcPropertySetDefinitionSet;\r\n declare type IfcResourceObjectSelect = (Handle<IfcActorRole> | IfcActorRole) | (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcApproval> | IfcApproval) | (Handle<IfcConstraint> | IfcConstraint) | (Handle<IfcContextDependentUnit> | IfcContextDependentUnit) | (Handle<IfcConversionBasedUnit> | IfcConversionBasedUnit) | (Handle<IfcExternalInformation> | IfcExternalInformation) | (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | (Handle<IfcProfileDef> | IfcProfileDef) | (Handle<IfcPropertyAbstraction> | IfcPropertyAbstraction) | (Handle<IfcShapeAspect> | IfcShapeAspect) | (Handle<IfcTimeSeries> | IfcTimeSeries);\r\n declare type IfcResourceSelect = (Handle<IfcResource> | IfcResource) | (Handle<IfcTypeResource> | IfcTypeResource);\r\n declare type IfcRotationalStiffnessSelect = IfcBoolean | IfcRotationalStiffnessMeasure;\r\n declare type IfcSegmentIndexSelect = IfcArcIndex | IfcLineIndex;\r\n declare type IfcShell = (Handle<IfcClosedShell> | IfcClosedShell) | (Handle<IfcOpenShell> | IfcOpenShell);\r\n declare type IfcSimpleValue = IfcBinary | IfcBoolean | IfcDate | IfcDateTime | IfcDuration | IfcIdentifier | IfcInteger | IfcLabel | IfcLogical | IfcPositiveInteger | IfcReal | IfcText | IfcTime | IfcTimeStamp;\r\n declare type IfcSizeSelect = IfcDescriptiveMeasure | IfcLengthMeasure | IfcNormalisedRatioMeasure | IfcPositiveLengthMeasure | IfcPositiveRatioMeasure | IfcRatioMeasure;\r\n declare type IfcSolidOrShell = (Handle<IfcClosedShell> | IfcClosedShell) | (Handle<IfcSolidModel> | IfcSolidModel);\r\n declare type IfcSpaceBoundarySelect = (Handle<IfcExternalSpatialElement> | IfcExternalSpatialElement) | (Handle<IfcSpace> | IfcSpace);\r\n declare type IfcSpecularHighlightSelect = IfcSpecularExponent | IfcSpecularRoughness;\r\n declare type IfcStructuralActivityAssignmentSelect = (Handle<IfcElement> | IfcElement) | (Handle<IfcStructuralItem> | IfcStructuralItem);\r\n declare type IfcStyleAssignmentSelect = (Handle<IfcPresentationStyle> | IfcPresentationStyle) | (Handle<IfcPresentationStyleAssignment> | IfcPresentationStyleAssignment);\r\n declare type IfcSurfaceOrFaceSurface = (Handle<IfcFaceBasedSurfaceModel> | IfcFaceBasedSurfaceModel) | (Handle<IfcFaceSurface> | IfcFaceSurface) | (Handle<IfcSurface> | IfcSurface);\r\n declare type IfcSurfaceStyleElementSelect = (Handle<IfcExternallyDefinedSurfaceStyle> | IfcExternallyDefinedSurfaceStyle) | (Handle<IfcSurfaceStyleLighting> | IfcSurfaceStyleLighting) | (Handle<IfcSurfaceStyleRefraction> | IfcSurfaceStyleRefraction) | (Handle<IfcSurfaceStyleShading> | IfcSurfaceStyleShading) | (Handle<IfcSurfaceStyleWithTextures> | IfcSurfaceStyleWithTextures);\r\n declare type IfcTextFontSelect = (Handle<IfcExternallyDefinedTextFont> | IfcExternallyDefinedTextFont) | (Handle<IfcPreDefinedTextFont> | IfcPreDefinedTextFont);\r\n declare type IfcTimeOrRatioSelect = IfcDuration | IfcRatioMeasure;\r\n declare type IfcTranslationalStiffnessSelect = IfcBoolean | IfcLinearStiffnessMeasure;\r\n declare type IfcTrimmingSelect = (Handle<IfcCartesianPoint> | IfcCartesianPoint) | IfcParameterValue;\r\n declare type IfcUnit = (Handle<IfcDerivedUnit> | IfcDerivedUnit) | (Handle<IfcMonetaryUnit> | IfcMonetaryUnit) | (Handle<IfcNamedUnit> | IfcNamedUnit);\r\n declare type IfcValue = IfcDerivedMeasureValue | IfcMeasureValue | IfcSimpleValue;\r\n declare type IfcVectorOrDirection = (Handle<IfcDirection> | IfcDirection) | (Handle<IfcVector> | IfcVector);\r\n declare type IfcWarpingStiffnessSelect = IfcBoolean | IfcWarpingMomentMeasure;\r\n declare class IfcActionRequest {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, PredefinedType: IfcActionRequestTypeEnum | null, Status: IfcLabel | null, LongDescription: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    PredefinedType: IfcActionRequestTypeEnum | null;\r\n    Status: IfcLabel | null;\r\n    LongDescription: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcActionRequest;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcActor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, TheActor: IfcActorSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    TheActor: IfcActorSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcActor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcActorRole {\r\n    constructor(expressID: number, type: number, Role: IfcRoleEnum, UserDefinedRole: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Role: IfcRoleEnum;\r\n    UserDefinedRole: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcActorRole;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcActuator {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcActuatorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcActuatorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcActuator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcActuatorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcActuatorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcActuatorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcActuatorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAddress {\r\n    constructor(expressID: number, type: number, Purpose: IfcAddressTypeEnum | null, Description: IfcText | null, UserDefinedPurpose: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Purpose: IfcAddressTypeEnum | null;\r\n    Description: IfcText | null;\r\n    UserDefinedPurpose: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAddress;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAdvancedBrep {\r\n    constructor(expressID: number, type: number, Outer: (Handle<IfcClosedShell> | IfcClosedShell));\r\n    expressID: number;\r\n    type: number;\r\n    Outer: (Handle<IfcClosedShell> | IfcClosedShell);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedBrep;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAdvancedBrepWithVoids {\r\n    constructor(expressID: number, type: number, Outer: (Handle<IfcClosedShell> | IfcClosedShell), Voids: (Handle<IfcClosedShell> | IfcClosedShell)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Outer: (Handle<IfcClosedShell> | IfcClosedShell);\r\n    Voids: (Handle<IfcClosedShell> | IfcClosedShell)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedBrepWithVoids;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAdvancedFace {\r\n    constructor(expressID: number, type: number, Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[], FaceSurface: (Handle<IfcSurface> | IfcSurface), SameSense: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[];\r\n    FaceSurface: (Handle<IfcSurface> | IfcSurface);\r\n    SameSense: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedFace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcAirTerminalTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcAirTerminalTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirTerminalBox {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcAirTerminalBoxTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcAirTerminalBoxTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalBox;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirTerminalBoxType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcAirTerminalBoxTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcAirTerminalBoxTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalBoxType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcAirTerminalTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcAirTerminalTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirToAirHeatRecovery {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcAirToAirHeatRecoveryTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcAirToAirHeatRecoveryTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirToAirHeatRecovery;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAirToAirHeatRecoveryType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcAirToAirHeatRecoveryTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcAirToAirHeatRecoveryTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAirToAirHeatRecoveryType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlarm {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcAlarmTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcAlarmTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlarm;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlarmType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcAlarmTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcAlarmTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlarmType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Axis: (Handle<IfcCurve> | IfcCurve), PredefinedType: IfcAlignmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Axis: (Handle<IfcCurve> | IfcCurve);\r\n    PredefinedType: IfcAlignmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DHorizontal {\r\n    constructor(expressID: number, type: number, StartDistAlong: IfcLengthMeasure | null, Segments: (Handle<IfcAlignment2DHorizontalSegment> | IfcAlignment2DHorizontalSegment)[]);\r\n    expressID: number;\r\n    type: number;\r\n    StartDistAlong: IfcLengthMeasure | null;\r\n    Segments: (Handle<IfcAlignment2DHorizontalSegment> | IfcAlignment2DHorizontalSegment)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DHorizontal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DHorizontalSegment {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null, CurveGeometry: (Handle<IfcCurveSegment2D> | IfcCurveSegment2D));\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    CurveGeometry: (Handle<IfcCurveSegment2D> | IfcCurveSegment2D);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DHorizontalSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DSegment {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DVerSegCircularArc {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null, StartDistAlong: IfcLengthMeasure, HorizontalLength: IfcPositiveLengthMeasure, StartHeight: IfcLengthMeasure, StartGradient: IfcRatioMeasure, Radius: IfcPositiveLengthMeasure, IsConvex: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    StartDistAlong: IfcLengthMeasure;\r\n    HorizontalLength: IfcPositiveLengthMeasure;\r\n    StartHeight: IfcLengthMeasure;\r\n    StartGradient: IfcRatioMeasure;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    IsConvex: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DVerSegCircularArc;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DVerSegLine {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null, StartDistAlong: IfcLengthMeasure, HorizontalLength: IfcPositiveLengthMeasure, StartHeight: IfcLengthMeasure, StartGradient: IfcRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    StartDistAlong: IfcLengthMeasure;\r\n    HorizontalLength: IfcPositiveLengthMeasure;\r\n    StartHeight: IfcLengthMeasure;\r\n    StartGradient: IfcRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DVerSegLine;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DVerSegParabolicArc {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null, StartDistAlong: IfcLengthMeasure, HorizontalLength: IfcPositiveLengthMeasure, StartHeight: IfcLengthMeasure, StartGradient: IfcRatioMeasure, ParabolaConstant: IfcPositiveLengthMeasure, IsConvex: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    StartDistAlong: IfcLengthMeasure;\r\n    HorizontalLength: IfcPositiveLengthMeasure;\r\n    StartHeight: IfcLengthMeasure;\r\n    StartGradient: IfcRatioMeasure;\r\n    ParabolaConstant: IfcPositiveLengthMeasure;\r\n    IsConvex: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DVerSegParabolicArc;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DVertical {\r\n    constructor(expressID: number, type: number, Segments: (Handle<IfcAlignment2DVerticalSegment> | IfcAlignment2DVerticalSegment)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Segments: (Handle<IfcAlignment2DVerticalSegment> | IfcAlignment2DVerticalSegment)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DVertical;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignment2DVerticalSegment {\r\n    constructor(expressID: number, type: number, TangentialContinuity: IfcBoolean | null, StartTag: IfcLabel | null, EndTag: IfcLabel | null, StartDistAlong: IfcLengthMeasure, HorizontalLength: IfcPositiveLengthMeasure, StartHeight: IfcLengthMeasure, StartGradient: IfcRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    TangentialContinuity: IfcBoolean | null;\r\n    StartTag: IfcLabel | null;\r\n    EndTag: IfcLabel | null;\r\n    StartDistAlong: IfcLengthMeasure;\r\n    HorizontalLength: IfcPositiveLengthMeasure;\r\n    StartHeight: IfcLengthMeasure;\r\n    StartGradient: IfcRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignment2DVerticalSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAlignmentCurve {\r\n    constructor(expressID: number, type: number, Horizontal: (Handle<IfcAlignment2DHorizontal> | IfcAlignment2DHorizontal), Vertical: (Handle<IfcAlignment2DVertical> | IfcAlignment2DVertical) | null, Tag: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Horizontal: (Handle<IfcAlignment2DHorizontal> | IfcAlignment2DHorizontal);\r\n    Vertical: (Handle<IfcAlignment2DVertical> | IfcAlignment2DVertical) | null;\r\n    Tag: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAlignmentCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAnnotation {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAnnotationFillArea {\r\n    constructor(expressID: number, type: number, OuterBoundary: (Handle<IfcCurve> | IfcCurve), InnerBoundaries: (Handle<IfcCurve> | IfcCurve)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    OuterBoundary: (Handle<IfcCurve> | IfcCurve);\r\n    InnerBoundaries: (Handle<IfcCurve> | IfcCurve)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationFillArea;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcApplication {\r\n    constructor(expressID: number, type: number, ApplicationDeveloper: (Handle<IfcOrganization> | IfcOrganization), Version: IfcLabel, ApplicationFullName: IfcLabel, ApplicationIdentifier: IfcIdentifier);\r\n    expressID: number;\r\n    type: number;\r\n    ApplicationDeveloper: (Handle<IfcOrganization> | IfcOrganization);\r\n    Version: IfcLabel;\r\n    ApplicationFullName: IfcLabel;\r\n    ApplicationIdentifier: IfcIdentifier;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcApplication;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAppliedValue {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, AppliedValue: IfcAppliedValueSelect | null, UnitBasis: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null, ApplicableDate: IfcDate | null, FixedUntilDate: IfcDate | null, Category: IfcLabel | null, Condition: IfcLabel | null, ArithmeticOperator: IfcArithmeticOperatorEnum | null, Components: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    AppliedValue: IfcAppliedValueSelect | null;\r\n    UnitBasis: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null;\r\n    ApplicableDate: IfcDate | null;\r\n    FixedUntilDate: IfcDate | null;\r\n    Category: IfcLabel | null;\r\n    Condition: IfcLabel | null;\r\n    ArithmeticOperator: IfcArithmeticOperatorEnum | null;\r\n    Components: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAppliedValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcApproval {\r\n    constructor(expressID: number, type: number, Identifier: IfcIdentifier | null, Name: IfcLabel | null, Description: IfcText | null, TimeOfApproval: IfcDateTime | null, Status: IfcLabel | null, Level: IfcLabel | null, Qualifier: IfcText | null, RequestingApproval: IfcActorSelect | null, GivingApproval: IfcActorSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Identifier: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    TimeOfApproval: IfcDateTime | null;\r\n    Status: IfcLabel | null;\r\n    Level: IfcLabel | null;\r\n    Qualifier: IfcText | null;\r\n    RequestingApproval: IfcActorSelect | null;\r\n    GivingApproval: IfcActorSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcApproval;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcApprovalRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingApproval: (Handle<IfcApproval> | IfcApproval), RelatedApprovals: (Handle<IfcApproval> | IfcApproval)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingApproval: (Handle<IfcApproval> | IfcApproval);\r\n    RelatedApprovals: (Handle<IfcApproval> | IfcApproval)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcApprovalRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcArbitraryClosedProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, OuterCurve: (Handle<IfcCurve> | IfcCurve));\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    OuterCurve: (Handle<IfcCurve> | IfcCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryClosedProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcArbitraryOpenProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Curve: (Handle<IfcBoundedCurve> | IfcBoundedCurve));\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Curve: (Handle<IfcBoundedCurve> | IfcBoundedCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryOpenProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcArbitraryProfileDefWithVoids {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, OuterCurve: (Handle<IfcCurve> | IfcCurve), InnerCurves: (Handle<IfcCurve> | IfcCurve)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    OuterCurve: (Handle<IfcCurve> | IfcCurve);\r\n    InnerCurves: (Handle<IfcCurve> | IfcCurve)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryProfileDefWithVoids;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAsset {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, OriginalValue: (Handle<IfcCostValue> | IfcCostValue) | null, CurrentValue: (Handle<IfcCostValue> | IfcCostValue) | null, TotalReplacementCost: (Handle<IfcCostValue> | IfcCostValue) | null, Owner: IfcActorSelect | null, User: IfcActorSelect | null, ResponsiblePerson: (Handle<IfcPerson> | IfcPerson) | null, IncorporationDate: IfcDate | null, DepreciatedValue: (Handle<IfcCostValue> | IfcCostValue) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    OriginalValue: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    CurrentValue: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    TotalReplacementCost: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    Owner: IfcActorSelect | null;\r\n    User: IfcActorSelect | null;\r\n    ResponsiblePerson: (Handle<IfcPerson> | IfcPerson) | null;\r\n    IncorporationDate: IfcDate | null;\r\n    DepreciatedValue: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAsset;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAsymmetricIShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, BottomFlangeWidth: IfcPositiveLengthMeasure, OverallDepth: IfcPositiveLengthMeasure, WebThickness: IfcPositiveLengthMeasure, BottomFlangeThickness: IfcPositiveLengthMeasure, BottomFlangeFilletRadius: IfcNonNegativeLengthMeasure | null, TopFlangeWidth: IfcPositiveLengthMeasure, TopFlangeThickness: IfcPositiveLengthMeasure | null, TopFlangeFilletRadius: IfcNonNegativeLengthMeasure | null, BottomFlangeEdgeRadius: IfcNonNegativeLengthMeasure | null, BottomFlangeSlope: IfcPlaneAngleMeasure | null, TopFlangeEdgeRadius: IfcNonNegativeLengthMeasure | null, TopFlangeSlope: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    BottomFlangeWidth: IfcPositiveLengthMeasure;\r\n    OverallDepth: IfcPositiveLengthMeasure;\r\n    WebThickness: IfcPositiveLengthMeasure;\r\n    BottomFlangeThickness: IfcPositiveLengthMeasure;\r\n    BottomFlangeFilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    TopFlangeWidth: IfcPositiveLengthMeasure;\r\n    TopFlangeThickness: IfcPositiveLengthMeasure | null;\r\n    TopFlangeFilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    BottomFlangeEdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    BottomFlangeSlope: IfcPlaneAngleMeasure | null;\r\n    TopFlangeEdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    TopFlangeSlope: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAsymmetricIShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAudioVisualAppliance {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcAudioVisualApplianceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcAudioVisualApplianceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAudioVisualAppliance;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAudioVisualApplianceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcAudioVisualApplianceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcAudioVisualApplianceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAudioVisualApplianceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAxis1Placement {\r\n    constructor(expressID: number, type: number, Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Axis: (Handle<IfcDirection> | IfcDirection) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Axis: (Handle<IfcDirection> | IfcDirection) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAxis1Placement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAxis2Placement2D {\r\n    constructor(expressID: number, type: number, Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint), RefDirection: (Handle<IfcDirection> | IfcDirection) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    RefDirection: (Handle<IfcDirection> | IfcDirection) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcAxis2Placement3D {\r\n    constructor(expressID: number, type: number, Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Axis: (Handle<IfcDirection> | IfcDirection) | null, RefDirection: (Handle<IfcDirection> | IfcDirection) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Axis: (Handle<IfcDirection> | IfcDirection) | null;\r\n    RefDirection: (Handle<IfcDirection> | IfcDirection) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement3D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBSplineCurve {\r\n    constructor(expressID: number, type: number, Degree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], CurveForm: IfcBSplineCurveForm, ClosedCurve: IfcLogical, SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    Degree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    CurveForm: IfcBSplineCurveForm;\r\n    ClosedCurve: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBSplineCurveWithKnots {\r\n    constructor(expressID: number, type: number, Degree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], CurveForm: IfcBSplineCurveForm, ClosedCurve: IfcLogical, SelfIntersect: IfcLogical, KnotMultiplicities: IfcInteger[], Knots: IfcParameterValue[], KnotSpec: IfcKnotType);\r\n    expressID: number;\r\n    type: number;\r\n    Degree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    CurveForm: IfcBSplineCurveForm;\r\n    ClosedCurve: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    KnotMultiplicities: IfcInteger[];\r\n    Knots: IfcParameterValue[];\r\n    KnotSpec: IfcKnotType;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineCurveWithKnots;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBSplineSurface {\r\n    constructor(expressID: number, type: number, UDegree: IfcInteger, VDegree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], SurfaceForm: IfcBSplineSurfaceForm, UClosed: IfcLogical, VClosed: IfcLogical, SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    UDegree: IfcInteger;\r\n    VDegree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    SurfaceForm: IfcBSplineSurfaceForm;\r\n    UClosed: IfcLogical;\r\n    VClosed: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBSplineSurfaceWithKnots {\r\n    constructor(expressID: number, type: number, UDegree: IfcInteger, VDegree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], SurfaceForm: IfcBSplineSurfaceForm, UClosed: IfcLogical, VClosed: IfcLogical, SelfIntersect: IfcLogical, UMultiplicities: IfcInteger[], VMultiplicities: IfcInteger[], UKnots: IfcParameterValue[], VKnots: IfcParameterValue[], KnotSpec: IfcKnotType);\r\n    expressID: number;\r\n    type: number;\r\n    UDegree: IfcInteger;\r\n    VDegree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    SurfaceForm: IfcBSplineSurfaceForm;\r\n    UClosed: IfcLogical;\r\n    VClosed: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    UMultiplicities: IfcInteger[];\r\n    VMultiplicities: IfcInteger[];\r\n    UKnots: IfcParameterValue[];\r\n    VKnots: IfcParameterValue[];\r\n    KnotSpec: IfcKnotType;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineSurfaceWithKnots;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBeam {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBeamTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBeamTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBeam;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBeamStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBeamTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBeamTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBeamStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBeamType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBeamTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBeamTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBeamType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBearing {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBearingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBearingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBearing;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBearingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBearingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBearingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBearingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBlobTexture {\r\n    constructor(expressID: number, type: number, RepeatS: IfcBoolean, RepeatT: IfcBoolean, Mode: IfcIdentifier | null, TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null, Parameter: IfcIdentifier[] | null, RasterFormat: IfcIdentifier, RasterCode: IfcBinary);\r\n    expressID: number;\r\n    type: number;\r\n    RepeatS: IfcBoolean;\r\n    RepeatT: IfcBoolean;\r\n    Mode: IfcIdentifier | null;\r\n    TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null;\r\n    Parameter: IfcIdentifier[] | null;\r\n    RasterFormat: IfcIdentifier;\r\n    RasterCode: IfcBinary;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBlobTexture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBlock {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), XLength: IfcPositiveLengthMeasure, YLength: IfcPositiveLengthMeasure, ZLength: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    XLength: IfcPositiveLengthMeasure;\r\n    YLength: IfcPositiveLengthMeasure;\r\n    ZLength: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBlock;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoiler {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBoilerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBoilerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoiler;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoilerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBoilerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBoilerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoilerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBooleanClippingResult {\r\n    constructor(expressID: number, type: number, Operator: IfcBooleanOperator, FirstOperand: IfcBooleanOperand, SecondOperand: IfcBooleanOperand);\r\n    expressID: number;\r\n    type: number;\r\n    Operator: IfcBooleanOperator;\r\n    FirstOperand: IfcBooleanOperand;\r\n    SecondOperand: IfcBooleanOperand;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanClippingResult;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBooleanResult {\r\n    constructor(expressID: number, type: number, Operator: IfcBooleanOperator, FirstOperand: IfcBooleanOperand, SecondOperand: IfcBooleanOperand);\r\n    expressID: number;\r\n    type: number;\r\n    Operator: IfcBooleanOperator;\r\n    FirstOperand: IfcBooleanOperand;\r\n    SecondOperand: IfcBooleanOperand;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanResult;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryCurve {\r\n    constructor(expressID: number, type: number, Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[], SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[];\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryEdgeCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TranslationalStiffnessByLengthX: IfcModulusOfTranslationalSubgradeReactionSelect | null, TranslationalStiffnessByLengthY: IfcModulusOfTranslationalSubgradeReactionSelect | null, TranslationalStiffnessByLengthZ: IfcModulusOfTranslationalSubgradeReactionSelect | null, RotationalStiffnessByLengthX: IfcModulusOfRotationalSubgradeReactionSelect | null, RotationalStiffnessByLengthY: IfcModulusOfRotationalSubgradeReactionSelect | null, RotationalStiffnessByLengthZ: IfcModulusOfRotationalSubgradeReactionSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TranslationalStiffnessByLengthX: IfcModulusOfTranslationalSubgradeReactionSelect | null;\r\n    TranslationalStiffnessByLengthY: IfcModulusOfTranslationalSubgradeReactionSelect | null;\r\n    TranslationalStiffnessByLengthZ: IfcModulusOfTranslationalSubgradeReactionSelect | null;\r\n    RotationalStiffnessByLengthX: IfcModulusOfRotationalSubgradeReactionSelect | null;\r\n    RotationalStiffnessByLengthY: IfcModulusOfRotationalSubgradeReactionSelect | null;\r\n    RotationalStiffnessByLengthZ: IfcModulusOfRotationalSubgradeReactionSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryEdgeCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryFaceCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TranslationalStiffnessByAreaX: IfcModulusOfSubgradeReactionSelect | null, TranslationalStiffnessByAreaY: IfcModulusOfSubgradeReactionSelect | null, TranslationalStiffnessByAreaZ: IfcModulusOfSubgradeReactionSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TranslationalStiffnessByAreaX: IfcModulusOfSubgradeReactionSelect | null;\r\n    TranslationalStiffnessByAreaY: IfcModulusOfSubgradeReactionSelect | null;\r\n    TranslationalStiffnessByAreaZ: IfcModulusOfSubgradeReactionSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryFaceCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryNodeCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TranslationalStiffnessX: IfcTranslationalStiffnessSelect | null, TranslationalStiffnessY: IfcTranslationalStiffnessSelect | null, TranslationalStiffnessZ: IfcTranslationalStiffnessSelect | null, RotationalStiffnessX: IfcRotationalStiffnessSelect | null, RotationalStiffnessY: IfcRotationalStiffnessSelect | null, RotationalStiffnessZ: IfcRotationalStiffnessSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TranslationalStiffnessX: IfcTranslationalStiffnessSelect | null;\r\n    TranslationalStiffnessY: IfcTranslationalStiffnessSelect | null;\r\n    TranslationalStiffnessZ: IfcTranslationalStiffnessSelect | null;\r\n    RotationalStiffnessX: IfcRotationalStiffnessSelect | null;\r\n    RotationalStiffnessY: IfcRotationalStiffnessSelect | null;\r\n    RotationalStiffnessZ: IfcRotationalStiffnessSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundaryNodeConditionWarping {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TranslationalStiffnessX: IfcTranslationalStiffnessSelect | null, TranslationalStiffnessY: IfcTranslationalStiffnessSelect | null, TranslationalStiffnessZ: IfcTranslationalStiffnessSelect | null, RotationalStiffnessX: IfcRotationalStiffnessSelect | null, RotationalStiffnessY: IfcRotationalStiffnessSelect | null, RotationalStiffnessZ: IfcRotationalStiffnessSelect | null, WarpingStiffness: IfcWarpingStiffnessSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TranslationalStiffnessX: IfcTranslationalStiffnessSelect | null;\r\n    TranslationalStiffnessY: IfcTranslationalStiffnessSelect | null;\r\n    TranslationalStiffnessZ: IfcTranslationalStiffnessSelect | null;\r\n    RotationalStiffnessX: IfcRotationalStiffnessSelect | null;\r\n    RotationalStiffnessY: IfcRotationalStiffnessSelect | null;\r\n    RotationalStiffnessZ: IfcRotationalStiffnessSelect | null;\r\n    WarpingStiffness: IfcWarpingStiffnessSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeConditionWarping;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundedCurve {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundedSurface {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoundingBox {\r\n    constructor(expressID: number, type: number, Corner: (Handle<IfcCartesianPoint> | IfcCartesianPoint), XDim: IfcPositiveLengthMeasure, YDim: IfcPositiveLengthMeasure, ZDim: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Corner: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    XDim: IfcPositiveLengthMeasure;\r\n    YDim: IfcPositiveLengthMeasure;\r\n    ZDim: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoundingBox;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBoxedHalfSpace {\r\n    constructor(expressID: number, type: number, BaseSurface: (Handle<IfcSurface> | IfcSurface), AgreementFlag: IfcBoolean, Enclosure: (Handle<IfcBoundingBox> | IfcBoundingBox));\r\n    expressID: number;\r\n    type: number;\r\n    BaseSurface: (Handle<IfcSurface> | IfcSurface);\r\n    AgreementFlag: IfcBoolean;\r\n    Enclosure: (Handle<IfcBoundingBox> | IfcBoundingBox);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBoxedHalfSpace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBridge {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, PredefinedType: IfcBridgeTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    PredefinedType: IfcBridgeTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBridge;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBridgePart {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, PredefinedType: IfcBridgePartTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    PredefinedType: IfcBridgePartTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBridgePart;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuilding {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, ElevationOfRefHeight: IfcLengthMeasure | null, ElevationOfTerrain: IfcLengthMeasure | null, BuildingAddress: (Handle<IfcPostalAddress> | IfcPostalAddress) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    ElevationOfRefHeight: IfcLengthMeasure | null;\r\n    ElevationOfTerrain: IfcLengthMeasure | null;\r\n    BuildingAddress: (Handle<IfcPostalAddress> | IfcPostalAddress) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuilding;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElementPart {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBuildingElementPartTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBuildingElementPartTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementPart;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElementPartType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBuildingElementPartTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBuildingElementPartTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementPartType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElementProxy {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBuildingElementProxyTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBuildingElementProxyTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxy;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElementProxyType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBuildingElementProxyTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBuildingElementProxyTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxyType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingStorey {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, Elevation: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    Elevation: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingStorey;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBuildingSystem {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, PredefinedType: IfcBuildingSystemTypeEnum | null, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    PredefinedType: IfcBuildingSystemTypeEnum | null;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingSystem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBurner {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcBurnerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcBurnerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBurner;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcBurnerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcBurnerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcBurnerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcBurnerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Depth: IfcPositiveLengthMeasure, Width: IfcPositiveLengthMeasure, WallThickness: IfcPositiveLengthMeasure, Girth: IfcPositiveLengthMeasure, InternalFilletRadius: IfcNonNegativeLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Depth: IfcPositiveLengthMeasure;\r\n    Width: IfcPositiveLengthMeasure;\r\n    WallThickness: IfcPositiveLengthMeasure;\r\n    Girth: IfcPositiveLengthMeasure;\r\n    InternalFilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableCarrierFitting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCableCarrierFittingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCableCarrierFittingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierFitting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableCarrierFittingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCableCarrierFittingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCableCarrierFittingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierFittingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableCarrierSegment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCableCarrierSegmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCableCarrierSegmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableCarrierSegmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCableCarrierSegmentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCableCarrierSegmentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierSegmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableFitting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCableFittingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCableFittingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableFitting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableFittingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCableFittingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCableFittingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableFittingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableSegment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCableSegmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCableSegmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCableSegmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCableSegmentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCableSegmentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCableSegmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCaissonFoundation {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCaissonFoundationTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCaissonFoundationTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCaissonFoundation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCaissonFoundationType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCaissonFoundationTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCaissonFoundationTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCaissonFoundationType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianPoint {\r\n    constructor(expressID: number, type: number, Coordinates: IfcLengthMeasure[]);\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: IfcLengthMeasure[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPoint;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianPointList {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianPointList2D {\r\n    constructor(expressID: number, type: number, CoordList: IfcLengthMeasure[], TagList: IfcLabel[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    CoordList: IfcLengthMeasure[];\r\n    TagList: IfcLabel[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianPointList3D {\r\n    constructor(expressID: number, type: number, CoordList: IfcLengthMeasure[], TagList: IfcLabel[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    CoordList: IfcLengthMeasure[];\r\n    TagList: IfcLabel[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList3D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianTransformationOperator {\r\n    constructor(expressID: number, type: number, Axis1: (Handle<IfcDirection> | IfcDirection) | null, Axis2: (Handle<IfcDirection> | IfcDirection) | null, LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Scale: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    Axis1: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Axis2: (Handle<IfcDirection> | IfcDirection) | null;\r\n    LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Scale: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianTransformationOperator2D {\r\n    constructor(expressID: number, type: number, Axis1: (Handle<IfcDirection> | IfcDirection) | null, Axis2: (Handle<IfcDirection> | IfcDirection) | null, LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Scale: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    Axis1: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Axis2: (Handle<IfcDirection> | IfcDirection) | null;\r\n    LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Scale: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianTransformationOperator2DnonUniform {\r\n    constructor(expressID: number, type: number, Axis1: (Handle<IfcDirection> | IfcDirection) | null, Axis2: (Handle<IfcDirection> | IfcDirection) | null, LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Scale: IfcReal | null, Scale2: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    Axis1: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Axis2: (Handle<IfcDirection> | IfcDirection) | null;\r\n    LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Scale: IfcReal | null;\r\n    Scale2: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2DnonUniform;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianTransformationOperator3D {\r\n    constructor(expressID: number, type: number, Axis1: (Handle<IfcDirection> | IfcDirection) | null, Axis2: (Handle<IfcDirection> | IfcDirection) | null, LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Scale: IfcReal | null, Axis3: (Handle<IfcDirection> | IfcDirection) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Axis1: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Axis2: (Handle<IfcDirection> | IfcDirection) | null;\r\n    LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Scale: IfcReal | null;\r\n    Axis3: (Handle<IfcDirection> | IfcDirection) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCartesianTransformationOperator3DnonUniform {\r\n    constructor(expressID: number, type: number, Axis1: (Handle<IfcDirection> | IfcDirection) | null, Axis2: (Handle<IfcDirection> | IfcDirection) | null, LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Scale: IfcReal | null, Axis3: (Handle<IfcDirection> | IfcDirection) | null, Scale2: IfcReal | null, Scale3: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    Axis1: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Axis2: (Handle<IfcDirection> | IfcDirection) | null;\r\n    LocalOrigin: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Scale: IfcReal | null;\r\n    Axis3: (Handle<IfcDirection> | IfcDirection) | null;\r\n    Scale2: IfcReal | null;\r\n    Scale3: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3DnonUniform;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCenterLineProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Curve: (Handle<IfcBoundedCurve> | IfcBoundedCurve), Thickness: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Curve: (Handle<IfcBoundedCurve> | IfcBoundedCurve);\r\n    Thickness: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCenterLineProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcChiller {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcChillerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcChillerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcChiller;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcChillerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcChillerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcChillerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcChillerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcChimney {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcChimneyTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcChimneyTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcChimney;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcChimneyType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcChimneyTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcChimneyTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcChimneyType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCircle {\r\n    constructor(expressID: number, type: number, Position: IfcAxis2Placement, Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: IfcAxis2Placement;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCircle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCircleHollowProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Radius: IfcPositiveLengthMeasure, WallThickness: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    WallThickness: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCircleHollowProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCircleProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCircleProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCircularArcSegment2D {\r\n    constructor(expressID: number, type: number, StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint), StartDirection: IfcPlaneAngleMeasure, SegmentLength: IfcPositiveLengthMeasure, Radius: IfcPositiveLengthMeasure, IsCCW: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    StartDirection: IfcPlaneAngleMeasure;\r\n    SegmentLength: IfcPositiveLengthMeasure;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    IsCCW: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCircularArcSegment2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCivilElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCivilElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCivilElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCivilElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcClassification {\r\n    constructor(expressID: number, type: number, Source: IfcLabel | null, Edition: IfcLabel | null, EditionDate: IfcDate | null, Name: IfcLabel, Description: IfcText | null, Location: IfcURIReference | null, ReferenceTokens: IfcIdentifier[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Source: IfcLabel | null;\r\n    Edition: IfcLabel | null;\r\n    EditionDate: IfcDate | null;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Location: IfcURIReference | null;\r\n    ReferenceTokens: IfcIdentifier[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcClassification;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcClassificationReference {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null, ReferencedSource: IfcClassificationReferenceSelect | null, Description: IfcText | null, Sort: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    ReferencedSource: IfcClassificationReferenceSelect | null;\r\n    Description: IfcText | null;\r\n    Sort: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationReference;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcClosedShell {\r\n    constructor(expressID: number, type: number, CfsFaces: (Handle<IfcFace> | IfcFace)[]);\r\n    expressID: number;\r\n    type: number;\r\n    CfsFaces: (Handle<IfcFace> | IfcFace)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcClosedShell;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoil {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCoilTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCoilTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoil;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoilType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCoilTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCoilTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoilType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColourRgb {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Red: IfcNormalisedRatioMeasure, Green: IfcNormalisedRatioMeasure, Blue: IfcNormalisedRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Red: IfcNormalisedRatioMeasure;\r\n    Green: IfcNormalisedRatioMeasure;\r\n    Blue: IfcNormalisedRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColourRgb;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColourRgbList {\r\n    constructor(expressID: number, type: number, ColourList: IfcNormalisedRatioMeasure[]);\r\n    expressID: number;\r\n    type: number;\r\n    ColourList: IfcNormalisedRatioMeasure[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColourRgbList;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColourSpecification {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColourSpecification;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColumn {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcColumnTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcColumnTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColumn;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColumnStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcColumnTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcColumnTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColumnStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcColumnType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcColumnTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcColumnTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcColumnType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCommunicationsAppliance {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCommunicationsApplianceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCommunicationsApplianceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCommunicationsAppliance;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCommunicationsApplianceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCommunicationsApplianceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCommunicationsApplianceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCommunicationsApplianceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcComplexProperty {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, UsageName: IfcIdentifier, HasProperties: (Handle<IfcProperty> | IfcProperty)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    UsageName: IfcIdentifier;\r\n    HasProperties: (Handle<IfcProperty> | IfcProperty)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcComplexProperty;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcComplexPropertyTemplate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, UsageName: IfcLabel | null, TemplateType: IfcComplexPropertyTemplateTypeEnum | null, HasPropertyTemplates: (Handle<IfcPropertyTemplate> | IfcPropertyTemplate)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    UsageName: IfcLabel | null;\r\n    TemplateType: IfcComplexPropertyTemplateTypeEnum | null;\r\n    HasPropertyTemplates: (Handle<IfcPropertyTemplate> | IfcPropertyTemplate)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcComplexPropertyTemplate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompositeCurve {\r\n    constructor(expressID: number, type: number, Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[], SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[];\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompositeCurveOnSurface {\r\n    constructor(expressID: number, type: number, Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[], SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[];\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurveOnSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompositeCurveSegment {\r\n    constructor(expressID: number, type: number, Transition: IfcTransitionCode, SameSense: IfcBoolean, ParentCurve: (Handle<IfcCurve> | IfcCurve));\r\n    expressID: number;\r\n    type: number;\r\n    Transition: IfcTransitionCode;\r\n    SameSense: IfcBoolean;\r\n    ParentCurve: (Handle<IfcCurve> | IfcCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurveSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompositeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Profiles: (Handle<IfcProfileDef> | IfcProfileDef)[], Label: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Profiles: (Handle<IfcProfileDef> | IfcProfileDef)[];\r\n    Label: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompressor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCompressorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCompressorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompressor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCompressorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCompressorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCompressorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCompressorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCondenser {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCondenserTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCondenserTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCondenser;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCondenserType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCondenserTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCondenserTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCondenserType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConic {\r\n    constructor(expressID: number, type: number, Position: IfcAxis2Placement);\r\n    expressID: number;\r\n    type: number;\r\n    Position: IfcAxis2Placement;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConic;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectedFaceSet {\r\n    constructor(expressID: number, type: number, CfsFaces: (Handle<IfcFace> | IfcFace)[]);\r\n    expressID: number;\r\n    type: number;\r\n    CfsFaces: (Handle<IfcFace> | IfcFace)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectedFaceSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionCurveGeometry {\r\n    constructor(expressID: number, type: number, CurveOnRelatingElement: IfcCurveOrEdgeCurve, CurveOnRelatedElement: IfcCurveOrEdgeCurve | null);\r\n    expressID: number;\r\n    type: number;\r\n    CurveOnRelatingElement: IfcCurveOrEdgeCurve;\r\n    CurveOnRelatedElement: IfcCurveOrEdgeCurve | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionCurveGeometry;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionGeometry {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionGeometry;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionPointEccentricity {\r\n    constructor(expressID: number, type: number, PointOnRelatingElement: IfcPointOrVertexPoint, PointOnRelatedElement: IfcPointOrVertexPoint | null, EccentricityInX: IfcLengthMeasure | null, EccentricityInY: IfcLengthMeasure | null, EccentricityInZ: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    PointOnRelatingElement: IfcPointOrVertexPoint;\r\n    PointOnRelatedElement: IfcPointOrVertexPoint | null;\r\n    EccentricityInX: IfcLengthMeasure | null;\r\n    EccentricityInY: IfcLengthMeasure | null;\r\n    EccentricityInZ: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointEccentricity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionPointGeometry {\r\n    constructor(expressID: number, type: number, PointOnRelatingElement: IfcPointOrVertexPoint, PointOnRelatedElement: IfcPointOrVertexPoint | null);\r\n    expressID: number;\r\n    type: number;\r\n    PointOnRelatingElement: IfcPointOrVertexPoint;\r\n    PointOnRelatedElement: IfcPointOrVertexPoint | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointGeometry;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionSurfaceGeometry {\r\n    constructor(expressID: number, type: number, SurfaceOnRelatingElement: IfcSurfaceOrFaceSurface, SurfaceOnRelatedElement: IfcSurfaceOrFaceSurface | null);\r\n    expressID: number;\r\n    type: number;\r\n    SurfaceOnRelatingElement: IfcSurfaceOrFaceSurface;\r\n    SurfaceOnRelatedElement: IfcSurfaceOrFaceSurface | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionSurfaceGeometry;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConnectionVolumeGeometry {\r\n    constructor(expressID: number, type: number, VolumeOnRelatingElement: IfcSolidOrShell, VolumeOnRelatedElement: IfcSolidOrShell | null);\r\n    expressID: number;\r\n    type: number;\r\n    VolumeOnRelatingElement: IfcSolidOrShell;\r\n    VolumeOnRelatedElement: IfcSolidOrShell | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionVolumeGeometry;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstraint {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, ConstraintGrade: IfcConstraintEnum, ConstraintSource: IfcLabel | null, CreatingActor: IfcActorSelect | null, CreationTime: IfcDateTime | null, UserDefinedGrade: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    ConstraintGrade: IfcConstraintEnum;\r\n    ConstraintSource: IfcLabel | null;\r\n    CreatingActor: IfcActorSelect | null;\r\n    CreationTime: IfcDateTime | null;\r\n    UserDefinedGrade: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstraint;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionEquipmentResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionEquipmentResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionEquipmentResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionEquipmentResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionEquipmentResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionEquipmentResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionEquipmentResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionEquipmentResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionMaterialResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionMaterialResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionMaterialResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionMaterialResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionMaterialResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionMaterialResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionMaterialResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionMaterialResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionProductResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionProductResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionProductResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionProductResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionProductResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcConstructionProductResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcConstructionProductResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionProductResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConstructionResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcContext {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null, Phase: IfcLabel | null, RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    Phase: IfcLabel | null;\r\n    RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null;\r\n    UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcContext;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcContextDependentUnit {\r\n    constructor(expressID: number, type: number, Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents), UnitType: IfcUnitEnum, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents);\r\n    UnitType: IfcUnitEnum;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcContextDependentUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcControl {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcControl;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcController {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcControllerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcControllerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcController;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcControllerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcControllerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcControllerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcControllerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConversionBasedUnit {\r\n    constructor(expressID: number, type: number, Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents), UnitType: IfcUnitEnum, Name: IfcLabel, ConversionFactor: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit));\r\n    expressID: number;\r\n    type: number;\r\n    Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents);\r\n    UnitType: IfcUnitEnum;\r\n    Name: IfcLabel;\r\n    ConversionFactor: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConversionBasedUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcConversionBasedUnitWithOffset {\r\n    constructor(expressID: number, type: number, Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents), UnitType: IfcUnitEnum, Name: IfcLabel, ConversionFactor: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit), ConversionOffset: IfcReal);\r\n    expressID: number;\r\n    type: number;\r\n    Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents);\r\n    UnitType: IfcUnitEnum;\r\n    Name: IfcLabel;\r\n    ConversionFactor: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit);\r\n    ConversionOffset: IfcReal;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcConversionBasedUnitWithOffset;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCooledBeam {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCooledBeamTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCooledBeamTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCooledBeam;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCooledBeamType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCooledBeamTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCooledBeamTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCooledBeamType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoolingTower {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCoolingTowerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCoolingTowerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoolingTower;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoolingTowerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCoolingTowerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCoolingTowerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoolingTowerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoordinateOperation {\r\n    constructor(expressID: number, type: number, SourceCRS: IfcCoordinateReferenceSystemSelect, TargetCRS: (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem));\r\n    expressID: number;\r\n    type: number;\r\n    SourceCRS: IfcCoordinateReferenceSystemSelect;\r\n    TargetCRS: (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoordinateOperation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoordinateReferenceSystem {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, GeodeticDatum: IfcIdentifier | null, VerticalDatum: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    GeodeticDatum: IfcIdentifier | null;\r\n    VerticalDatum: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoordinateReferenceSystem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCostItem {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, PredefinedType: IfcCostItemTypeEnum | null, CostValues: (Handle<IfcCostValue> | IfcCostValue)[] | null, CostQuantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    PredefinedType: IfcCostItemTypeEnum | null;\r\n    CostValues: (Handle<IfcCostValue> | IfcCostValue)[] | null;\r\n    CostQuantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCostItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCostSchedule {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, PredefinedType: IfcCostScheduleTypeEnum | null, Status: IfcLabel | null, SubmittedOn: IfcDateTime | null, UpdateDate: IfcDateTime | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    PredefinedType: IfcCostScheduleTypeEnum | null;\r\n    Status: IfcLabel | null;\r\n    SubmittedOn: IfcDateTime | null;\r\n    UpdateDate: IfcDateTime | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCostSchedule;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCostValue {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, AppliedValue: IfcAppliedValueSelect | null, UnitBasis: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null, ApplicableDate: IfcDate | null, FixedUntilDate: IfcDate | null, Category: IfcLabel | null, Condition: IfcLabel | null, ArithmeticOperator: IfcArithmeticOperatorEnum | null, Components: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    AppliedValue: IfcAppliedValueSelect | null;\r\n    UnitBasis: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null;\r\n    ApplicableDate: IfcDate | null;\r\n    FixedUntilDate: IfcDate | null;\r\n    Category: IfcLabel | null;\r\n    Condition: IfcLabel | null;\r\n    ArithmeticOperator: IfcArithmeticOperatorEnum | null;\r\n    Components: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCostValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCovering {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCoveringTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCoveringTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCovering;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCoveringType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCoveringTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCoveringTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCoveringType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCrewResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcCrewResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcCrewResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCrewResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCrewResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcCrewResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcCrewResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCrewResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCsgPrimitive3D {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D));\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCsgPrimitive3D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCsgSolid {\r\n    constructor(expressID: number, type: number, TreeRootExpression: IfcCsgSelect);\r\n    expressID: number;\r\n    type: number;\r\n    TreeRootExpression: IfcCsgSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCsgSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurrencyRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingMonetaryUnit: (Handle<IfcMonetaryUnit> | IfcMonetaryUnit), RelatedMonetaryUnit: (Handle<IfcMonetaryUnit> | IfcMonetaryUnit), ExchangeRate: IfcPositiveRatioMeasure, RateDateTime: IfcDateTime | null, RateSource: (Handle<IfcLibraryInformation> | IfcLibraryInformation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingMonetaryUnit: (Handle<IfcMonetaryUnit> | IfcMonetaryUnit);\r\n    RelatedMonetaryUnit: (Handle<IfcMonetaryUnit> | IfcMonetaryUnit);\r\n    ExchangeRate: IfcPositiveRatioMeasure;\r\n    RateDateTime: IfcDateTime | null;\r\n    RateSource: (Handle<IfcLibraryInformation> | IfcLibraryInformation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurrencyRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurtainWall {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcCurtainWallTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcCurtainWallTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWall;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurtainWallType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcCurtainWallTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcCurtainWallTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWallType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurve {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveBoundedPlane {\r\n    constructor(expressID: number, type: number, BasisSurface: (Handle<IfcPlane> | IfcPlane), OuterBoundary: (Handle<IfcCurve> | IfcCurve), InnerBoundaries: (Handle<IfcCurve> | IfcCurve)[]);\r\n    expressID: number;\r\n    type: number;\r\n    BasisSurface: (Handle<IfcPlane> | IfcPlane);\r\n    OuterBoundary: (Handle<IfcCurve> | IfcCurve);\r\n    InnerBoundaries: (Handle<IfcCurve> | IfcCurve)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveBoundedPlane;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveBoundedSurface {\r\n    constructor(expressID: number, type: number, BasisSurface: (Handle<IfcSurface> | IfcSurface), Boundaries: (Handle<IfcBoundaryCurve> | IfcBoundaryCurve)[], ImplicitOuter: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    BasisSurface: (Handle<IfcSurface> | IfcSurface);\r\n    Boundaries: (Handle<IfcBoundaryCurve> | IfcBoundaryCurve)[];\r\n    ImplicitOuter: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveBoundedSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveSegment2D {\r\n    constructor(expressID: number, type: number, StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint), StartDirection: IfcPlaneAngleMeasure, SegmentLength: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    StartDirection: IfcPlaneAngleMeasure;\r\n    SegmentLength: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveSegment2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, CurveFont: IfcCurveFontOrScaledCurveFontSelect | null, CurveWidth: IfcSizeSelect | null, CurveColour: IfcColour | null, ModelOrDraughting: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    CurveFont: IfcCurveFontOrScaledCurveFontSelect | null;\r\n    CurveWidth: IfcSizeSelect | null;\r\n    CurveColour: IfcColour | null;\r\n    ModelOrDraughting: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveStyleFont {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, PatternList: (Handle<IfcCurveStyleFontPattern> | IfcCurveStyleFontPattern)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    PatternList: (Handle<IfcCurveStyleFontPattern> | IfcCurveStyleFontPattern)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveStyleFontAndScaling {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, CurveFont: IfcCurveStyleFontSelect, CurveFontScaling: IfcPositiveRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    CurveFont: IfcCurveStyleFontSelect;\r\n    CurveFontScaling: IfcPositiveRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontAndScaling;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCurveStyleFontPattern {\r\n    constructor(expressID: number, type: number, VisibleSegmentLength: IfcLengthMeasure, InvisibleSegmentLength: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    VisibleSegmentLength: IfcLengthMeasure;\r\n    InvisibleSegmentLength: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontPattern;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcCylindricalSurface {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcCylindricalSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDamper {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDamperTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDamperTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDamper;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDamperType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDamperTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDamperTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDamperType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDeepFoundation {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDeepFoundation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDeepFoundationType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDeepFoundationType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDerivedProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, ParentProfile: (Handle<IfcProfileDef> | IfcProfileDef), Operator: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D), Label: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    ParentProfile: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Operator: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D);\r\n    Label: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDerivedUnit {\r\n    constructor(expressID: number, type: number, Elements: (Handle<IfcDerivedUnitElement> | IfcDerivedUnitElement)[], UnitType: IfcDerivedUnitEnum, UserDefinedType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Elements: (Handle<IfcDerivedUnitElement> | IfcDerivedUnitElement)[];\r\n    UnitType: IfcDerivedUnitEnum;\r\n    UserDefinedType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDerivedUnitElement {\r\n    constructor(expressID: number, type: number, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit), Exponent: number);\r\n    expressID: number;\r\n    type: number;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit);\r\n    Exponent: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnitElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDimensionalExponents {\r\n    constructor(expressID: number, type: number, LengthExponent: number, MassExponent: number, TimeExponent: number, ElectricCurrentExponent: number, ThermodynamicTemperatureExponent: number, AmountOfSubstanceExponent: number, LuminousIntensityExponent: number);\r\n    expressID: number;\r\n    type: number;\r\n    LengthExponent: number;\r\n    MassExponent: number;\r\n    TimeExponent: number;\r\n    ElectricCurrentExponent: number;\r\n    ThermodynamicTemperatureExponent: number;\r\n    AmountOfSubstanceExponent: number;\r\n    LuminousIntensityExponent: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionalExponents;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDirection {\r\n    constructor(expressID: number, type: number, DirectionRatios: IfcReal[]);\r\n    expressID: number;\r\n    type: number;\r\n    DirectionRatios: IfcReal[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDirection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDiscreteAccessory {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDiscreteAccessoryTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDiscreteAccessoryTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessory;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDiscreteAccessoryType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDiscreteAccessoryTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDiscreteAccessoryTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessoryType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistanceExpression {\r\n    constructor(expressID: number, type: number, DistanceAlong: IfcLengthMeasure, OffsetLateral: IfcLengthMeasure | null, OffsetVertical: IfcLengthMeasure | null, OffsetLongitudinal: IfcLengthMeasure | null, AlongHorizontal: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    DistanceAlong: IfcLengthMeasure;\r\n    OffsetLateral: IfcLengthMeasure | null;\r\n    OffsetVertical: IfcLengthMeasure | null;\r\n    OffsetLongitudinal: IfcLengthMeasure | null;\r\n    AlongHorizontal: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistanceExpression;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionChamberElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDistributionChamberElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDistributionChamberElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionChamberElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDistributionChamberElementTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDistributionChamberElementTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionCircuit {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null, PredefinedType: IfcDistributionSystemEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    PredefinedType: IfcDistributionSystemEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionCircuit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionControlElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionControlElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionFlowElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionFlowElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionPort {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, FlowDirection: IfcFlowDirectionEnum | null, PredefinedType: IfcDistributionPortTypeEnum | null, SystemType: IfcDistributionSystemEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    FlowDirection: IfcFlowDirectionEnum | null;\r\n    PredefinedType: IfcDistributionPortTypeEnum | null;\r\n    SystemType: IfcDistributionSystemEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionPort;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDistributionSystem {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null, PredefinedType: IfcDistributionSystemEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    PredefinedType: IfcDistributionSystemEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionSystem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDocumentInformation {\r\n    constructor(expressID: number, type: number, Identification: IfcIdentifier, Name: IfcLabel, Description: IfcText | null, Location: IfcURIReference | null, Purpose: IfcText | null, IntendedUse: IfcText | null, Scope: IfcText | null, Revision: IfcLabel | null, DocumentOwner: IfcActorSelect | null, Editors: IfcActorSelect[] | null, CreationTime: IfcDateTime | null, LastRevisionTime: IfcDateTime | null, ElectronicFormat: IfcIdentifier | null, ValidFrom: IfcDate | null, ValidUntil: IfcDate | null, Confidentiality: IfcDocumentConfidentialityEnum | null, Status: IfcDocumentStatusEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    Identification: IfcIdentifier;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Location: IfcURIReference | null;\r\n    Purpose: IfcText | null;\r\n    IntendedUse: IfcText | null;\r\n    Scope: IfcText | null;\r\n    Revision: IfcLabel | null;\r\n    DocumentOwner: IfcActorSelect | null;\r\n    Editors: IfcActorSelect[] | null;\r\n    CreationTime: IfcDateTime | null;\r\n    LastRevisionTime: IfcDateTime | null;\r\n    ElectronicFormat: IfcIdentifier | null;\r\n    ValidFrom: IfcDate | null;\r\n    ValidUntil: IfcDate | null;\r\n    Confidentiality: IfcDocumentConfidentialityEnum | null;\r\n    Status: IfcDocumentStatusEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDocumentInformationRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingDocument: (Handle<IfcDocumentInformation> | IfcDocumentInformation), RelatedDocuments: (Handle<IfcDocumentInformation> | IfcDocumentInformation)[], RelationshipType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingDocument: (Handle<IfcDocumentInformation> | IfcDocumentInformation);\r\n    RelatedDocuments: (Handle<IfcDocumentInformation> | IfcDocumentInformation)[];\r\n    RelationshipType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformationRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDocumentReference {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null, Description: IfcText | null, ReferencedDocument: (Handle<IfcDocumentInformation> | IfcDocumentInformation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ReferencedDocument: (Handle<IfcDocumentInformation> | IfcDocumentInformation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentReference;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, OverallHeight: IfcPositiveLengthMeasure | null, OverallWidth: IfcPositiveLengthMeasure | null, PredefinedType: IfcDoorTypeEnum | null, OperationType: IfcDoorTypeOperationEnum | null, UserDefinedOperationType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    OverallHeight: IfcPositiveLengthMeasure | null;\r\n    OverallWidth: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcDoorTypeEnum | null;\r\n    OperationType: IfcDoorTypeOperationEnum | null;\r\n    UserDefinedOperationType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoorLiningProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, LiningDepth: IfcPositiveLengthMeasure | null, LiningThickness: IfcNonNegativeLengthMeasure | null, ThresholdDepth: IfcPositiveLengthMeasure | null, ThresholdThickness: IfcNonNegativeLengthMeasure | null, TransomThickness: IfcNonNegativeLengthMeasure | null, TransomOffset: IfcLengthMeasure | null, LiningOffset: IfcLengthMeasure | null, ThresholdOffset: IfcLengthMeasure | null, CasingThickness: IfcPositiveLengthMeasure | null, CasingDepth: IfcPositiveLengthMeasure | null, ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null, LiningToPanelOffsetX: IfcLengthMeasure | null, LiningToPanelOffsetY: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    LiningDepth: IfcPositiveLengthMeasure | null;\r\n    LiningThickness: IfcNonNegativeLengthMeasure | null;\r\n    ThresholdDepth: IfcPositiveLengthMeasure | null;\r\n    ThresholdThickness: IfcNonNegativeLengthMeasure | null;\r\n    TransomThickness: IfcNonNegativeLengthMeasure | null;\r\n    TransomOffset: IfcLengthMeasure | null;\r\n    LiningOffset: IfcLengthMeasure | null;\r\n    ThresholdOffset: IfcLengthMeasure | null;\r\n    CasingThickness: IfcPositiveLengthMeasure | null;\r\n    CasingDepth: IfcPositiveLengthMeasure | null;\r\n    ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null;\r\n    LiningToPanelOffsetX: IfcLengthMeasure | null;\r\n    LiningToPanelOffsetY: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoorLiningProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoorPanelProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, PanelDepth: IfcPositiveLengthMeasure | null, PanelOperation: IfcDoorPanelOperationEnum, PanelWidth: IfcNormalisedRatioMeasure | null, PanelPosition: IfcDoorPanelPositionEnum, ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    PanelDepth: IfcPositiveLengthMeasure | null;\r\n    PanelOperation: IfcDoorPanelOperationEnum;\r\n    PanelWidth: IfcNormalisedRatioMeasure | null;\r\n    PanelPosition: IfcDoorPanelPositionEnum;\r\n    ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoorPanelProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoorStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, OverallHeight: IfcPositiveLengthMeasure | null, OverallWidth: IfcPositiveLengthMeasure | null, PredefinedType: IfcDoorTypeEnum | null, OperationType: IfcDoorTypeOperationEnum | null, UserDefinedOperationType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    OverallHeight: IfcPositiveLengthMeasure | null;\r\n    OverallWidth: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcDoorTypeEnum | null;\r\n    OperationType: IfcDoorTypeOperationEnum | null;\r\n    UserDefinedOperationType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoorStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoorStyle {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, OperationType: IfcDoorStyleOperationEnum, ConstructionType: IfcDoorStyleConstructionEnum, ParameterTakesPrecedence: IfcBoolean, Sizeable: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    OperationType: IfcDoorStyleOperationEnum;\r\n    ConstructionType: IfcDoorStyleConstructionEnum;\r\n    ParameterTakesPrecedence: IfcBoolean;\r\n    Sizeable: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoorStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDoorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDoorTypeEnum, OperationType: IfcDoorTypeOperationEnum, ParameterTakesPrecedence: IfcBoolean | null, UserDefinedOperationType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDoorTypeEnum;\r\n    OperationType: IfcDoorTypeOperationEnum;\r\n    ParameterTakesPrecedence: IfcBoolean | null;\r\n    UserDefinedOperationType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDoorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDraughtingPreDefinedColour {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedColour;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDraughtingPreDefinedCurveFont {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedCurveFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctFitting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDuctFittingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDuctFittingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctFitting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctFittingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDuctFittingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDuctFittingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctFittingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctSegment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDuctSegmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDuctSegmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctSegmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDuctSegmentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDuctSegmentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSegmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctSilencer {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcDuctSilencerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcDuctSilencerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSilencer;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcDuctSilencerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcDuctSilencerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcDuctSilencerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSilencerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEdge {\r\n    constructor(expressID: number, type: number, EdgeStart: (Handle<IfcVertex> | IfcVertex), EdgeEnd: (Handle<IfcVertex> | IfcVertex));\r\n    expressID: number;\r\n    type: number;\r\n    EdgeStart: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeEnd: (Handle<IfcVertex> | IfcVertex);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEdge;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEdgeCurve {\r\n    constructor(expressID: number, type: number, EdgeStart: (Handle<IfcVertex> | IfcVertex), EdgeEnd: (Handle<IfcVertex> | IfcVertex), EdgeGeometry: (Handle<IfcCurve> | IfcCurve), SameSense: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    EdgeStart: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeEnd: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeGeometry: (Handle<IfcCurve> | IfcCurve);\r\n    SameSense: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEdgeLoop {\r\n    constructor(expressID: number, type: number, EdgeList: (Handle<IfcOrientedEdge> | IfcOrientedEdge)[]);\r\n    expressID: number;\r\n    type: number;\r\n    EdgeList: (Handle<IfcOrientedEdge> | IfcOrientedEdge)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeLoop;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricAppliance {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricApplianceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricApplianceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricAppliance;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricApplianceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricApplianceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricApplianceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricApplianceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricDistributionBoard {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricDistributionBoardTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricDistributionBoardTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricDistributionBoard;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricDistributionBoardType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricDistributionBoardTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricDistributionBoardTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricDistributionBoardType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricFlowStorageDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricFlowStorageDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricFlowStorageDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricFlowStorageDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricFlowStorageDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricFlowStorageDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricFlowStorageDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricFlowStorageDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricGenerator {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricGeneratorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricGeneratorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricGenerator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricGeneratorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricGeneratorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricGeneratorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricGeneratorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricMotor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricMotorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricMotorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricMotor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricMotorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricMotorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricMotorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricMotorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricTimeControl {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcElectricTimeControlTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcElectricTimeControlTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricTimeControl;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElectricTimeControlType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElectricTimeControlTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElectricTimeControlTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElectricTimeControlType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementAssembly {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, AssemblyPlace: IfcAssemblyPlaceEnum | null, PredefinedType: IfcElementAssemblyTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    AssemblyPlace: IfcAssemblyPlaceEnum | null;\r\n    PredefinedType: IfcElementAssemblyTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementAssembly;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementAssemblyType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcElementAssemblyTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcElementAssemblyTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementAssemblyType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementComponent {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementComponentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementQuantity {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, MethodOfMeasurement: IfcLabel | null, Quantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    MethodOfMeasurement: IfcLabel | null;\r\n    Quantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementQuantity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcElementarySurface {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D));\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcElementarySurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEllipse {\r\n    constructor(expressID: number, type: number, Position: IfcAxis2Placement, SemiAxis1: IfcPositiveLengthMeasure, SemiAxis2: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: IfcAxis2Placement;\r\n    SemiAxis1: IfcPositiveLengthMeasure;\r\n    SemiAxis2: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEllipse;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEllipseProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, SemiAxis1: IfcPositiveLengthMeasure, SemiAxis2: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    SemiAxis1: IfcPositiveLengthMeasure;\r\n    SemiAxis2: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEllipseProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEnergyConversionDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEnergyConversionDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEngine {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcEngineTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcEngineTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEngine;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEngineType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcEngineTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcEngineTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEngineType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEvaporativeCooler {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcEvaporativeCoolerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcEvaporativeCoolerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporativeCooler;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEvaporativeCoolerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcEvaporativeCoolerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcEvaporativeCoolerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporativeCoolerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEvaporator {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcEvaporatorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcEvaporatorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEvaporatorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcEvaporatorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcEvaporatorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporatorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEvent {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, PredefinedType: IfcEventTypeEnum | null, EventTriggerType: IfcEventTriggerTypeEnum | null, UserDefinedEventTriggerType: IfcLabel | null, EventOccurenceTime: (Handle<IfcEventTime> | IfcEventTime) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    PredefinedType: IfcEventTypeEnum | null;\r\n    EventTriggerType: IfcEventTriggerTypeEnum | null;\r\n    UserDefinedEventTriggerType: IfcLabel | null;\r\n    EventOccurenceTime: (Handle<IfcEventTime> | IfcEventTime) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEvent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEventTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, ActualDate: IfcDateTime | null, EarlyDate: IfcDateTime | null, LateDate: IfcDateTime | null, ScheduleDate: IfcDateTime | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    ActualDate: IfcDateTime | null;\r\n    EarlyDate: IfcDateTime | null;\r\n    LateDate: IfcDateTime | null;\r\n    ScheduleDate: IfcDateTime | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEventTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcEventType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ProcessType: IfcLabel | null, PredefinedType: IfcEventTypeEnum, EventTriggerType: IfcEventTriggerTypeEnum, UserDefinedEventTriggerType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ProcessType: IfcLabel | null;\r\n    PredefinedType: IfcEventTypeEnum;\r\n    EventTriggerType: IfcEventTriggerTypeEnum;\r\n    UserDefinedEventTriggerType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcEventType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExtendedProperties {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier | null, Description: IfcText | null, Properties: (Handle<IfcProperty> | IfcProperty)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier | null;\r\n    Description: IfcText | null;\r\n    Properties: (Handle<IfcProperty> | IfcProperty)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExtendedProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternalInformation {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternalInformation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternalReference {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternalReference;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternalReferenceRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingReference: (Handle<IfcExternalReference> | IfcExternalReference), RelatedResourceObjects: IfcResourceObjectSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingReference: (Handle<IfcExternalReference> | IfcExternalReference);\r\n    RelatedResourceObjects: IfcResourceObjectSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternalReferenceRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternalSpatialElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, PredefinedType: IfcExternalSpatialElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    PredefinedType: IfcExternalSpatialElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternalSpatialElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternalSpatialStructureElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternalSpatialStructureElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternallyDefinedHatchStyle {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedHatchStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternallyDefinedSurfaceStyle {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedSurfaceStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExternallyDefinedTextFont {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedTextFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExtrudedAreaSolid {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IfcDirection> | IfcDirection), Depth: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    ExtrudedDirection: (Handle<IfcDirection> | IfcDirection);\r\n    Depth: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExtrudedAreaSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcExtrudedAreaSolidTapered {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IfcDirection> | IfcDirection), Depth: IfcPositiveLengthMeasure, EndSweptArea: (Handle<IfcProfileDef> | IfcProfileDef));\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    ExtrudedDirection: (Handle<IfcDirection> | IfcDirection);\r\n    Depth: IfcPositiveLengthMeasure;\r\n    EndSweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcExtrudedAreaSolidTapered;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFace {\r\n    constructor(expressID: number, type: number, Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFaceBasedSurfaceModel {\r\n    constructor(expressID: number, type: number, FbsmFaces: (Handle<IfcConnectedFaceSet> | IfcConnectedFaceSet)[]);\r\n    expressID: number;\r\n    type: number;\r\n    FbsmFaces: (Handle<IfcConnectedFaceSet> | IfcConnectedFaceSet)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBasedSurfaceModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFaceBound {\r\n    constructor(expressID: number, type: number, Bound: (Handle<IfcLoop> | IfcLoop), Orientation: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    Bound: (Handle<IfcLoop> | IfcLoop);\r\n    Orientation: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBound;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFaceOuterBound {\r\n    constructor(expressID: number, type: number, Bound: (Handle<IfcLoop> | IfcLoop), Orientation: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    Bound: (Handle<IfcLoop> | IfcLoop);\r\n    Orientation: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFaceOuterBound;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFaceSurface {\r\n    constructor(expressID: number, type: number, Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[], FaceSurface: (Handle<IfcSurface> | IfcSurface), SameSense: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    Bounds: (Handle<IfcFaceBound> | IfcFaceBound)[];\r\n    FaceSurface: (Handle<IfcSurface> | IfcSurface);\r\n    SameSense: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFaceSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFacetedBrep {\r\n    constructor(expressID: number, type: number, Outer: (Handle<IfcClosedShell> | IfcClosedShell));\r\n    expressID: number;\r\n    type: number;\r\n    Outer: (Handle<IfcClosedShell> | IfcClosedShell);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrep;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFacetedBrepWithVoids {\r\n    constructor(expressID: number, type: number, Outer: (Handle<IfcClosedShell> | IfcClosedShell), Voids: (Handle<IfcClosedShell> | IfcClosedShell)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Outer: (Handle<IfcClosedShell> | IfcClosedShell);\r\n    Voids: (Handle<IfcClosedShell> | IfcClosedShell)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrepWithVoids;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFacility {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFacility;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFacilityPart {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFacilityPart;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFailureConnectionCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TensionFailureX: IfcForceMeasure | null, TensionFailureY: IfcForceMeasure | null, TensionFailureZ: IfcForceMeasure | null, CompressionFailureX: IfcForceMeasure | null, CompressionFailureY: IfcForceMeasure | null, CompressionFailureZ: IfcForceMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TensionFailureX: IfcForceMeasure | null;\r\n    TensionFailureY: IfcForceMeasure | null;\r\n    TensionFailureZ: IfcForceMeasure | null;\r\n    CompressionFailureX: IfcForceMeasure | null;\r\n    CompressionFailureY: IfcForceMeasure | null;\r\n    CompressionFailureZ: IfcForceMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFailureConnectionCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFan {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFanTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFanTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFan;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFanType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFanTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFanTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFanType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFastener {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFastenerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFastenerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFastener;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFastenerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFastenerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFastenerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFastenerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFeatureElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFeatureElementAddition {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementAddition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFeatureElementSubtraction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementSubtraction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFillAreaStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, FillStyles: IfcFillStyleSelect[], ModelorDraughting: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    FillStyles: IfcFillStyleSelect[];\r\n    ModelorDraughting: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFillAreaStyleHatching {\r\n    constructor(expressID: number, type: number, HatchLineAppearance: (Handle<IfcCurveStyle> | IfcCurveStyle), StartOfNextHatchLine: IfcHatchLineDistanceSelect, PointOfReferenceHatchLine: (Handle<IfcCartesianPoint> | IfcCartesianPoint) | null, PatternStart: (Handle<IfcCartesianPoint> | IfcCartesianPoint) | null, HatchLineAngle: IfcPlaneAngleMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    HatchLineAppearance: (Handle<IfcCurveStyle> | IfcCurveStyle);\r\n    StartOfNextHatchLine: IfcHatchLineDistanceSelect;\r\n    PointOfReferenceHatchLine: (Handle<IfcCartesianPoint> | IfcCartesianPoint) | null;\r\n    PatternStart: (Handle<IfcCartesianPoint> | IfcCartesianPoint) | null;\r\n    HatchLineAngle: IfcPlaneAngleMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleHatching;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFillAreaStyleTiles {\r\n    constructor(expressID: number, type: number, TilingPattern: (Handle<IfcVector> | IfcVector)[], Tiles: (Handle<IfcStyledItem> | IfcStyledItem)[], TilingScale: IfcPositiveRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    TilingPattern: (Handle<IfcVector> | IfcVector)[];\r\n    Tiles: (Handle<IfcStyledItem> | IfcStyledItem)[];\r\n    TilingScale: IfcPositiveRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleTiles;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFilter {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFilterTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFilterTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFilter;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFilterType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFilterTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFilterTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFilterType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFireSuppressionTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFireSuppressionTerminalTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFireSuppressionTerminalTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFireSuppressionTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFireSuppressionTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFireSuppressionTerminalTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFireSuppressionTerminalTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFireSuppressionTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFixedReferenceSweptAreaSolid {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, Directrix: (Handle<IfcCurve> | IfcCurve), StartParam: IfcParameterValue | null, EndParam: IfcParameterValue | null, FixedReference: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    StartParam: IfcParameterValue | null;\r\n    EndParam: IfcParameterValue | null;\r\n    FixedReference: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFixedReferenceSweptAreaSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowController {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowController;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowControllerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowControllerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowFitting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFitting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowFittingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFittingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowInstrument {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFlowInstrumentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFlowInstrumentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowInstrument;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowInstrumentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFlowInstrumentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFlowInstrumentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowInstrumentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowMeter {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFlowMeterTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFlowMeterTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMeter;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowMeterType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFlowMeterTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFlowMeterTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMeterType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowMovingDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowMovingDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowSegment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowSegmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowStorageDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowStorageDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowTreatmentDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFlowTreatmentDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFooting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFootingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFootingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFooting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFootingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcFootingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcFootingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFootingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFurnishingElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFurnishingElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFurniture {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcFurnitureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcFurnitureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFurniture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcFurnitureType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, AssemblyPlace: IfcAssemblyPlaceEnum, PredefinedType: IfcFurnitureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    AssemblyPlace: IfcAssemblyPlaceEnum;\r\n    PredefinedType: IfcFurnitureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcFurnitureType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeographicElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcGeographicElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcGeographicElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeographicElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeographicElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcGeographicElementTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcGeographicElementTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeographicElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeometricCurveSet {\r\n    constructor(expressID: number, type: number, Elements: IfcGeometricSetSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Elements: IfcGeometricSetSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricCurveSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeometricRepresentationContext {\r\n    constructor(expressID: number, type: number, ContextIdentifier: IfcLabel | null, ContextType: IfcLabel | null, CoordinateSpaceDimension: IfcDimensionCount, Precision: IfcReal | null, WorldCoordinateSystem: IfcAxis2Placement, TrueNorth: (Handle<IfcDirection> | IfcDirection) | null);\r\n    expressID: number;\r\n    type: number;\r\n    ContextIdentifier: IfcLabel | null;\r\n    ContextType: IfcLabel | null;\r\n    CoordinateSpaceDimension: IfcDimensionCount;\r\n    Precision: IfcReal | null;\r\n    WorldCoordinateSystem: IfcAxis2Placement;\r\n    TrueNorth: (Handle<IfcDirection> | IfcDirection) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationContext;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeometricRepresentationItem {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeometricRepresentationSubContext {\r\n    constructor(expressID: number, type: number, ContextIdentifier: IfcLabel | null, ContextType: IfcLabel | null, CoordinateSpaceDimension: IfcDimensionCount, Precision: IfcReal | null, WorldCoordinateSystem: IfcAxis2Placement, TrueNorth: (Handle<IfcDirection> | IfcDirection) | null, ParentContext: (Handle<IfcGeometricRepresentationContext> | IfcGeometricRepresentationContext), TargetScale: IfcPositiveRatioMeasure | null, TargetView: IfcGeometricProjectionEnum, UserDefinedTargetView: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ContextIdentifier: IfcLabel | null;\r\n    ContextType: IfcLabel | null;\r\n    CoordinateSpaceDimension: IfcDimensionCount;\r\n    Precision: IfcReal | null;\r\n    WorldCoordinateSystem: IfcAxis2Placement;\r\n    TrueNorth: (Handle<IfcDirection> | IfcDirection) | null;\r\n    ParentContext: (Handle<IfcGeometricRepresentationContext> | IfcGeometricRepresentationContext);\r\n    TargetScale: IfcPositiveRatioMeasure | null;\r\n    TargetView: IfcGeometricProjectionEnum;\r\n    UserDefinedTargetView: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationSubContext;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGeometricSet {\r\n    constructor(expressID: number, type: number, Elements: IfcGeometricSetSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Elements: IfcGeometricSetSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGrid {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, UAxes: (Handle<IfcGridAxis> | IfcGridAxis)[], VAxes: (Handle<IfcGridAxis> | IfcGridAxis)[], WAxes: (Handle<IfcGridAxis> | IfcGridAxis)[] | null, PredefinedType: IfcGridTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    UAxes: (Handle<IfcGridAxis> | IfcGridAxis)[];\r\n    VAxes: (Handle<IfcGridAxis> | IfcGridAxis)[];\r\n    WAxes: (Handle<IfcGridAxis> | IfcGridAxis)[] | null;\r\n    PredefinedType: IfcGridTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGrid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGridAxis {\r\n    constructor(expressID: number, type: number, AxisTag: IfcLabel | null, AxisCurve: (Handle<IfcCurve> | IfcCurve), SameSense: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    AxisTag: IfcLabel | null;\r\n    AxisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    SameSense: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGridAxis;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGridPlacement {\r\n    constructor(expressID: number, type: number, PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, PlacementLocation: (Handle<IfcVirtualGridIntersection> | IfcVirtualGridIntersection), PlacementRefDirection: IfcGridPlacementDirectionSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    PlacementLocation: (Handle<IfcVirtualGridIntersection> | IfcVirtualGridIntersection);\r\n    PlacementRefDirection: IfcGridPlacementDirectionSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGridPlacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcGroup {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcGroup;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcHalfSpaceSolid {\r\n    constructor(expressID: number, type: number, BaseSurface: (Handle<IfcSurface> | IfcSurface), AgreementFlag: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    BaseSurface: (Handle<IfcSurface> | IfcSurface);\r\n    AgreementFlag: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcHalfSpaceSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcHeatExchanger {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcHeatExchangerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcHeatExchangerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcHeatExchanger;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcHeatExchangerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcHeatExchangerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcHeatExchangerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcHeatExchangerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcHumidifier {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcHumidifierTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcHumidifierTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcHumidifier;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcHumidifierType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcHumidifierTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcHumidifierTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcHumidifierType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, OverallWidth: IfcPositiveLengthMeasure, OverallDepth: IfcPositiveLengthMeasure, WebThickness: IfcPositiveLengthMeasure, FlangeThickness: IfcPositiveLengthMeasure, FilletRadius: IfcNonNegativeLengthMeasure | null, FlangeEdgeRadius: IfcNonNegativeLengthMeasure | null, FlangeSlope: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    OverallWidth: IfcPositiveLengthMeasure;\r\n    OverallDepth: IfcPositiveLengthMeasure;\r\n    WebThickness: IfcPositiveLengthMeasure;\r\n    FlangeThickness: IfcPositiveLengthMeasure;\r\n    FilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    FlangeEdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    FlangeSlope: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcImageTexture {\r\n    constructor(expressID: number, type: number, RepeatS: IfcBoolean, RepeatT: IfcBoolean, Mode: IfcIdentifier | null, TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null, Parameter: IfcIdentifier[] | null, URLReference: IfcURIReference);\r\n    expressID: number;\r\n    type: number;\r\n    RepeatS: IfcBoolean;\r\n    RepeatT: IfcBoolean;\r\n    Mode: IfcIdentifier | null;\r\n    TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null;\r\n    Parameter: IfcIdentifier[] | null;\r\n    URLReference: IfcURIReference;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcImageTexture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedColourMap {\r\n    constructor(expressID: number, type: number, MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet), Opacity: IfcNormalisedRatioMeasure | null, Colours: (Handle<IfcColourRgbList> | IfcColourRgbList), ColourIndex: IfcPositiveInteger[]);\r\n    expressID: number;\r\n    type: number;\r\n    MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet);\r\n    Opacity: IfcNormalisedRatioMeasure | null;\r\n    Colours: (Handle<IfcColourRgbList> | IfcColourRgbList);\r\n    ColourIndex: IfcPositiveInteger[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedColourMap;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedPolyCurve {\r\n    constructor(expressID: number, type: number, Points: (Handle<IfcCartesianPointList> | IfcCartesianPointList), Segments: IfcSegmentIndexSelect[] | null, SelfIntersect: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    Points: (Handle<IfcCartesianPointList> | IfcCartesianPointList);\r\n    Segments: IfcSegmentIndexSelect[] | null;\r\n    SelfIntersect: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolyCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedPolygonalFace {\r\n    constructor(expressID: number, type: number, CoordIndex: IfcPositiveInteger[]);\r\n    expressID: number;\r\n    type: number;\r\n    CoordIndex: IfcPositiveInteger[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolygonalFace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedPolygonalFaceWithVoids {\r\n    constructor(expressID: number, type: number, CoordIndex: IfcPositiveInteger[], InnerCoordIndices: IfcPositiveInteger[]);\r\n    expressID: number;\r\n    type: number;\r\n    CoordIndex: IfcPositiveInteger[];\r\n    InnerCoordIndices: IfcPositiveInteger[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolygonalFaceWithVoids;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedTextureMap {\r\n    constructor(expressID: number, type: number, Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[], MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet), TexCoords: (Handle<IfcTextureVertexList> | IfcTextureVertexList));\r\n    expressID: number;\r\n    type: number;\r\n    Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet);\r\n    TexCoords: (Handle<IfcTextureVertexList> | IfcTextureVertexList);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedTextureMap;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIndexedTriangleTextureMap {\r\n    constructor(expressID: number, type: number, Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[], MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet), TexCoords: (Handle<IfcTextureVertexList> | IfcTextureVertexList), TexCoordIndex: IfcPositiveInteger[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    MappedTo: (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet);\r\n    TexCoords: (Handle<IfcTextureVertexList> | IfcTextureVertexList);\r\n    TexCoordIndex: IfcPositiveInteger[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedTriangleTextureMap;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcInterceptor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcInterceptorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcInterceptorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcInterceptor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcInterceptorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcInterceptorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcInterceptorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcInterceptorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIntersectionCurve {\r\n    constructor(expressID: number, type: number, Curve3D: (Handle<IfcCurve> | IfcCurve), AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[], MasterRepresentation: IfcPreferredSurfaceCurveRepresentation);\r\n    expressID: number;\r\n    type: number;\r\n    Curve3D: (Handle<IfcCurve> | IfcCurve);\r\n    AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[];\r\n    MasterRepresentation: IfcPreferredSurfaceCurveRepresentation;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIntersectionCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcInventory {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, PredefinedType: IfcInventoryTypeEnum | null, Jurisdiction: IfcActorSelect | null, ResponsiblePersons: (Handle<IfcPerson> | IfcPerson)[] | null, LastUpdateDate: IfcDate | null, CurrentValue: (Handle<IfcCostValue> | IfcCostValue) | null, OriginalValue: (Handle<IfcCostValue> | IfcCostValue) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    PredefinedType: IfcInventoryTypeEnum | null;\r\n    Jurisdiction: IfcActorSelect | null;\r\n    ResponsiblePersons: (Handle<IfcPerson> | IfcPerson)[] | null;\r\n    LastUpdateDate: IfcDate | null;\r\n    CurrentValue: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    OriginalValue: (Handle<IfcCostValue> | IfcCostValue) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcInventory;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIrregularTimeSeries {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, StartTime: IfcDateTime, EndTime: IfcDateTime, TimeSeriesDataType: IfcTimeSeriesDataTypeEnum, DataOrigin: IfcDataOriginEnum, UserDefinedDataOrigin: IfcLabel | null, Unit: IfcUnit | null, Values: (Handle<IfcIrregularTimeSeriesValue> | IfcIrregularTimeSeriesValue)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    StartTime: IfcDateTime;\r\n    EndTime: IfcDateTime;\r\n    TimeSeriesDataType: IfcTimeSeriesDataTypeEnum;\r\n    DataOrigin: IfcDataOriginEnum;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    Unit: IfcUnit | null;\r\n    Values: (Handle<IfcIrregularTimeSeriesValue> | IfcIrregularTimeSeriesValue)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeries;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcIrregularTimeSeriesValue {\r\n    constructor(expressID: number, type: number, TimeStamp: IfcDateTime, ListValues: IfcValue[]);\r\n    expressID: number;\r\n    type: number;\r\n    TimeStamp: IfcDateTime;\r\n    ListValues: IfcValue[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeriesValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcJunctionBox {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcJunctionBoxTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcJunctionBoxTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcJunctionBox;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcJunctionBoxType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcJunctionBoxTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcJunctionBoxTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcJunctionBoxType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Depth: IfcPositiveLengthMeasure, Width: IfcPositiveLengthMeasure | null, Thickness: IfcPositiveLengthMeasure, FilletRadius: IfcNonNegativeLengthMeasure | null, EdgeRadius: IfcNonNegativeLengthMeasure | null, LegSlope: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Depth: IfcPositiveLengthMeasure;\r\n    Width: IfcPositiveLengthMeasure | null;\r\n    Thickness: IfcPositiveLengthMeasure;\r\n    FilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    EdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    LegSlope: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLaborResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcLaborResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcLaborResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLaborResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLaborResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcLaborResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcLaborResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLaborResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLagTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, LagValue: IfcTimeOrRatioSelect, DurationType: IfcTaskDurationEnum);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    LagValue: IfcTimeOrRatioSelect;\r\n    DurationType: IfcTaskDurationEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLagTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLamp {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcLampTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcLampTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLamp;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLampType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcLampTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcLampTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLampType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLibraryInformation {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Version: IfcLabel | null, Publisher: IfcActorSelect | null, VersionDate: IfcDateTime | null, Location: IfcURIReference | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Version: IfcLabel | null;\r\n    Publisher: IfcActorSelect | null;\r\n    VersionDate: IfcDateTime | null;\r\n    Location: IfcURIReference | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryInformation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLibraryReference {\r\n    constructor(expressID: number, type: number, Location: IfcURIReference | null, Identification: IfcIdentifier | null, Name: IfcLabel | null, Description: IfcText | null, Language: IfcLanguageId | null, ReferencedLibrary: (Handle<IfcLibraryInformation> | IfcLibraryInformation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Location: IfcURIReference | null;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Language: IfcLanguageId | null;\r\n    ReferencedLibrary: (Handle<IfcLibraryInformation> | IfcLibraryInformation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryReference;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightDistributionData {\r\n    constructor(expressID: number, type: number, MainPlaneAngle: IfcPlaneAngleMeasure, SecondaryPlaneAngle: IfcPlaneAngleMeasure[], LuminousIntensity: IfcLuminousIntensityDistributionMeasure[]);\r\n    expressID: number;\r\n    type: number;\r\n    MainPlaneAngle: IfcPlaneAngleMeasure;\r\n    SecondaryPlaneAngle: IfcPlaneAngleMeasure[];\r\n    LuminousIntensity: IfcLuminousIntensityDistributionMeasure[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightDistributionData;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightFixture {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcLightFixtureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcLightFixtureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightFixture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightFixtureType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcLightFixtureTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcLightFixtureTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightFixtureType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightIntensityDistribution {\r\n    constructor(expressID: number, type: number, LightDistributionCurve: IfcLightDistributionCurveEnum, DistributionData: (Handle<IfcLightDistributionData> | IfcLightDistributionData)[]);\r\n    expressID: number;\r\n    type: number;\r\n    LightDistributionCurve: IfcLightDistributionCurveEnum;\r\n    DistributionData: (Handle<IfcLightDistributionData> | IfcLightDistributionData)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightIntensityDistribution;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSource {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSourceAmbient {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceAmbient;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSourceDirectional {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null, Orientation: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    Orientation: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceDirectional;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSourceGoniometric {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), ColourAppearance: (Handle<IfcColourRgb> | IfcColourRgb) | null, ColourTemperature: IfcThermodynamicTemperatureMeasure, LuminousFlux: IfcLuminousFluxMeasure, LightEmissionSource: IfcLightEmissionSourceEnum, LightDistributionDataSource: IfcLightDistributionDataSourceSelect);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    ColourAppearance: (Handle<IfcColourRgb> | IfcColourRgb) | null;\r\n    ColourTemperature: IfcThermodynamicTemperatureMeasure;\r\n    LuminousFlux: IfcLuminousFluxMeasure;\r\n    LightEmissionSource: IfcLightEmissionSourceEnum;\r\n    LightDistributionDataSource: IfcLightDistributionDataSourceSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceGoniometric;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSourcePositional {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null, Position: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Radius: IfcPositiveLengthMeasure, ConstantAttenuation: IfcReal, DistanceAttenuation: IfcReal, QuadricAttenuation: IfcReal);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    Position: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    ConstantAttenuation: IfcReal;\r\n    DistanceAttenuation: IfcReal;\r\n    QuadricAttenuation: IfcReal;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourcePositional;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLightSourceSpot {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LightColour: (Handle<IfcColourRgb> | IfcColourRgb), AmbientIntensity: IfcNormalisedRatioMeasure | null, Intensity: IfcNormalisedRatioMeasure | null, Position: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Radius: IfcPositiveLengthMeasure, ConstantAttenuation: IfcReal, DistanceAttenuation: IfcReal, QuadricAttenuation: IfcReal, Orientation: (Handle<IfcDirection> | IfcDirection), ConcentrationExponent: IfcReal | null, SpreadAngle: IfcPositivePlaneAngleMeasure, BeamWidthAngle: IfcPositivePlaneAngleMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LightColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    AmbientIntensity: IfcNormalisedRatioMeasure | null;\r\n    Intensity: IfcNormalisedRatioMeasure | null;\r\n    Position: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    ConstantAttenuation: IfcReal;\r\n    DistanceAttenuation: IfcReal;\r\n    QuadricAttenuation: IfcReal;\r\n    Orientation: (Handle<IfcDirection> | IfcDirection);\r\n    ConcentrationExponent: IfcReal | null;\r\n    SpreadAngle: IfcPositivePlaneAngleMeasure;\r\n    BeamWidthAngle: IfcPositivePlaneAngleMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceSpot;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLine {\r\n    constructor(expressID: number, type: number, Pnt: (Handle<IfcCartesianPoint> | IfcCartesianPoint), Dir: (Handle<IfcVector> | IfcVector));\r\n    expressID: number;\r\n    type: number;\r\n    Pnt: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    Dir: (Handle<IfcVector> | IfcVector);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLine;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLineSegment2D {\r\n    constructor(expressID: number, type: number, StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint), StartDirection: IfcPlaneAngleMeasure, SegmentLength: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    StartDirection: IfcPlaneAngleMeasure;\r\n    SegmentLength: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLineSegment2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLinearPlacement {\r\n    constructor(expressID: number, type: number, PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, PlacementMeasuredAlong: (Handle<IfcCurve> | IfcCurve), Distance: (Handle<IfcDistanceExpression> | IfcDistanceExpression), Orientation: (Handle<IfcOrientationExpression> | IfcOrientationExpression) | null, CartesianPosition: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    PlacementMeasuredAlong: (Handle<IfcCurve> | IfcCurve);\r\n    Distance: (Handle<IfcDistanceExpression> | IfcDistanceExpression);\r\n    Orientation: (Handle<IfcOrientationExpression> | IfcOrientationExpression) | null;\r\n    CartesianPosition: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLinearPlacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLinearPositioningElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Axis: (Handle<IfcCurve> | IfcCurve));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Axis: (Handle<IfcCurve> | IfcCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLinearPositioningElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLocalPlacement {\r\n    constructor(expressID: number, type: number, PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, RelativePlacement: IfcAxis2Placement);\r\n    expressID: number;\r\n    type: number;\r\n    PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    RelativePlacement: IfcAxis2Placement;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLocalPlacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcLoop {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcLoop;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcManifoldSolidBrep {\r\n    constructor(expressID: number, type: number, Outer: (Handle<IfcClosedShell> | IfcClosedShell));\r\n    expressID: number;\r\n    type: number;\r\n    Outer: (Handle<IfcClosedShell> | IfcClosedShell);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcManifoldSolidBrep;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMapConversion {\r\n    constructor(expressID: number, type: number, SourceCRS: IfcCoordinateReferenceSystemSelect, TargetCRS: (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem), Eastings: IfcLengthMeasure, Northings: IfcLengthMeasure, OrthogonalHeight: IfcLengthMeasure, XAxisAbscissa: IfcReal | null, XAxisOrdinate: IfcReal | null, Scale: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    SourceCRS: IfcCoordinateReferenceSystemSelect;\r\n    TargetCRS: (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem);\r\n    Eastings: IfcLengthMeasure;\r\n    Northings: IfcLengthMeasure;\r\n    OrthogonalHeight: IfcLengthMeasure;\r\n    XAxisAbscissa: IfcReal | null;\r\n    XAxisOrdinate: IfcReal | null;\r\n    Scale: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMapConversion;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMappedItem {\r\n    constructor(expressID: number, type: number, MappingSource: (Handle<IfcRepresentationMap> | IfcRepresentationMap), MappingTarget: (Handle<IfcCartesianTransformationOperator> | IfcCartesianTransformationOperator));\r\n    expressID: number;\r\n    type: number;\r\n    MappingSource: (Handle<IfcRepresentationMap> | IfcRepresentationMap);\r\n    MappingTarget: (Handle<IfcCartesianTransformationOperator> | IfcCartesianTransformationOperator);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMappedItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterial {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Category: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Category: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterial;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialClassificationRelationship {\r\n    constructor(expressID: number, type: number, MaterialClassifications: IfcClassificationSelect[], ClassifiedMaterial: (Handle<IfcMaterial> | IfcMaterial));\r\n    expressID: number;\r\n    type: number;\r\n    MaterialClassifications: IfcClassificationSelect[];\r\n    ClassifiedMaterial: (Handle<IfcMaterial> | IfcMaterial);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialClassificationRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialConstituent {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Material: (Handle<IfcMaterial> | IfcMaterial), Fraction: IfcNormalisedRatioMeasure | null, Category: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Material: (Handle<IfcMaterial> | IfcMaterial);\r\n    Fraction: IfcNormalisedRatioMeasure | null;\r\n    Category: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialConstituent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialConstituentSet {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, MaterialConstituents: (Handle<IfcMaterialConstituent> | IfcMaterialConstituent)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    MaterialConstituents: (Handle<IfcMaterialConstituent> | IfcMaterialConstituent)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialConstituentSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialDefinition {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialDefinitionRepresentation {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Representations: (Handle<IfcRepresentation> | IfcRepresentation)[], RepresentedMaterial: (Handle<IfcMaterial> | IfcMaterial));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Representations: (Handle<IfcRepresentation> | IfcRepresentation)[];\r\n    RepresentedMaterial: (Handle<IfcMaterial> | IfcMaterial);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialDefinitionRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialLayer {\r\n    constructor(expressID: number, type: number, Material: (Handle<IfcMaterial> | IfcMaterial) | null, LayerThickness: IfcNonNegativeLengthMeasure, IsVentilated: IfcLogical | null, Name: IfcLabel | null, Description: IfcText | null, Category: IfcLabel | null, Priority: IfcInteger | null);\r\n    expressID: number;\r\n    type: number;\r\n    Material: (Handle<IfcMaterial> | IfcMaterial) | null;\r\n    LayerThickness: IfcNonNegativeLengthMeasure;\r\n    IsVentilated: IfcLogical | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Category: IfcLabel | null;\r\n    Priority: IfcInteger | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayer;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialLayerSet {\r\n    constructor(expressID: number, type: number, MaterialLayers: (Handle<IfcMaterialLayer> | IfcMaterialLayer)[], LayerSetName: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    MaterialLayers: (Handle<IfcMaterialLayer> | IfcMaterialLayer)[];\r\n    LayerSetName: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialLayerSetUsage {\r\n    constructor(expressID: number, type: number, ForLayerSet: (Handle<IfcMaterialLayerSet> | IfcMaterialLayerSet), LayerSetDirection: IfcLayerSetDirectionEnum, DirectionSense: IfcDirectionSenseEnum, OffsetFromReferenceLine: IfcLengthMeasure, ReferenceExtent: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ForLayerSet: (Handle<IfcMaterialLayerSet> | IfcMaterialLayerSet);\r\n    LayerSetDirection: IfcLayerSetDirectionEnum;\r\n    DirectionSense: IfcDirectionSenseEnum;\r\n    OffsetFromReferenceLine: IfcLengthMeasure;\r\n    ReferenceExtent: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSetUsage;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialLayerWithOffsets {\r\n    constructor(expressID: number, type: number, Material: (Handle<IfcMaterial> | IfcMaterial) | null, LayerThickness: IfcNonNegativeLengthMeasure, IsVentilated: IfcLogical | null, Name: IfcLabel | null, Description: IfcText | null, Category: IfcLabel | null, Priority: IfcInteger | null, OffsetDirection: IfcLayerSetDirectionEnum, OffsetValues: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Material: (Handle<IfcMaterial> | IfcMaterial) | null;\r\n    LayerThickness: IfcNonNegativeLengthMeasure;\r\n    IsVentilated: IfcLogical | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Category: IfcLabel | null;\r\n    Priority: IfcInteger | null;\r\n    OffsetDirection: IfcLayerSetDirectionEnum;\r\n    OffsetValues: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerWithOffsets;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialList {\r\n    constructor(expressID: number, type: number, Materials: (Handle<IfcMaterial> | IfcMaterial)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Materials: (Handle<IfcMaterial> | IfcMaterial)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialList;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProfile {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Material: (Handle<IfcMaterial> | IfcMaterial) | null, Profile: (Handle<IfcProfileDef> | IfcProfileDef), Priority: IfcInteger | null, Category: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Material: (Handle<IfcMaterial> | IfcMaterial) | null;\r\n    Profile: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Priority: IfcInteger | null;\r\n    Category: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfile;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProfileSet {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, MaterialProfiles: (Handle<IfcMaterialProfile> | IfcMaterialProfile)[], CompositeProfile: (Handle<IfcCompositeProfileDef> | IfcCompositeProfileDef) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    MaterialProfiles: (Handle<IfcMaterialProfile> | IfcMaterialProfile)[];\r\n    CompositeProfile: (Handle<IfcCompositeProfileDef> | IfcCompositeProfileDef) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProfileSetUsage {\r\n    constructor(expressID: number, type: number, ForProfileSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet), CardinalPoint: IfcCardinalPointReference | null, ReferenceExtent: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ForProfileSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet);\r\n    CardinalPoint: IfcCardinalPointReference | null;\r\n    ReferenceExtent: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSetUsage;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProfileSetUsageTapering {\r\n    constructor(expressID: number, type: number, ForProfileSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet), CardinalPoint: IfcCardinalPointReference | null, ReferenceExtent: IfcPositiveLengthMeasure | null, ForProfileEndSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet), CardinalEndPoint: IfcCardinalPointReference | null);\r\n    expressID: number;\r\n    type: number;\r\n    ForProfileSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet);\r\n    CardinalPoint: IfcCardinalPointReference | null;\r\n    ReferenceExtent: IfcPositiveLengthMeasure | null;\r\n    ForProfileEndSet: (Handle<IfcMaterialProfileSet> | IfcMaterialProfileSet);\r\n    CardinalEndPoint: IfcCardinalPointReference | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSetUsageTapering;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProfileWithOffsets {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Material: (Handle<IfcMaterial> | IfcMaterial) | null, Profile: (Handle<IfcProfileDef> | IfcProfileDef), Priority: IfcInteger | null, Category: IfcLabel | null, OffsetValues: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Material: (Handle<IfcMaterial> | IfcMaterial) | null;\r\n    Profile: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Priority: IfcInteger | null;\r\n    Category: IfcLabel | null;\r\n    OffsetValues: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileWithOffsets;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialProperties {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier | null, Description: IfcText | null, Properties: (Handle<IfcProperty> | IfcProperty)[], Material: (Handle<IfcMaterialDefinition> | IfcMaterialDefinition));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier | null;\r\n    Description: IfcText | null;\r\n    Properties: (Handle<IfcProperty> | IfcProperty)[];\r\n    Material: (Handle<IfcMaterialDefinition> | IfcMaterialDefinition);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingMaterial: (Handle<IfcMaterial> | IfcMaterial), RelatedMaterials: (Handle<IfcMaterial> | IfcMaterial)[], Expression: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingMaterial: (Handle<IfcMaterial> | IfcMaterial);\r\n    RelatedMaterials: (Handle<IfcMaterial> | IfcMaterial)[];\r\n    Expression: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMaterialUsageDefinition {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialUsageDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMeasureWithUnit {\r\n    constructor(expressID: number, type: number, ValueComponent: IfcValue, UnitComponent: IfcUnit);\r\n    expressID: number;\r\n    type: number;\r\n    ValueComponent: IfcValue;\r\n    UnitComponent: IfcUnit;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMeasureWithUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMechanicalFastener {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, NominalDiameter: IfcPositiveLengthMeasure | null, NominalLength: IfcPositiveLengthMeasure | null, PredefinedType: IfcMechanicalFastenerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    NominalLength: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcMechanicalFastenerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastener;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMechanicalFastenerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcMechanicalFastenerTypeEnum, NominalDiameter: IfcPositiveLengthMeasure | null, NominalLength: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcMechanicalFastenerTypeEnum;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    NominalLength: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastenerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMedicalDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcMedicalDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcMedicalDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMedicalDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMedicalDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcMedicalDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcMedicalDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMedicalDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMember {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcMemberTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcMemberTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMember;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMemberStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcMemberTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcMemberTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMemberStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMemberType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcMemberTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcMemberTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMemberType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMetric {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, ConstraintGrade: IfcConstraintEnum, ConstraintSource: IfcLabel | null, CreatingActor: IfcActorSelect | null, CreationTime: IfcDateTime | null, UserDefinedGrade: IfcLabel | null, Benchmark: IfcBenchmarkEnum, ValueSource: IfcLabel | null, DataValue: IfcMetricValueSelect | null, ReferencePath: (Handle<IfcReference> | IfcReference) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    ConstraintGrade: IfcConstraintEnum;\r\n    ConstraintSource: IfcLabel | null;\r\n    CreatingActor: IfcActorSelect | null;\r\n    CreationTime: IfcDateTime | null;\r\n    UserDefinedGrade: IfcLabel | null;\r\n    Benchmark: IfcBenchmarkEnum;\r\n    ValueSource: IfcLabel | null;\r\n    DataValue: IfcMetricValueSelect | null;\r\n    ReferencePath: (Handle<IfcReference> | IfcReference) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMetric;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMirroredProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, ParentProfile: (Handle<IfcProfileDef> | IfcProfileDef), Operator: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D), Label: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    ParentProfile: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Operator: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D);\r\n    Label: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMirroredProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMonetaryUnit {\r\n    constructor(expressID: number, type: number, Currency: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Currency: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMonetaryUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMotorConnection {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcMotorConnectionTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcMotorConnectionTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMotorConnection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcMotorConnectionType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcMotorConnectionTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcMotorConnectionTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcMotorConnectionType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcNamedUnit {\r\n    constructor(expressID: number, type: number, Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents), UnitType: IfcUnitEnum);\r\n    expressID: number;\r\n    type: number;\r\n    Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents);\r\n    UnitType: IfcUnitEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcNamedUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcObject {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcObject;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcObjectDefinition {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcObjectDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcObjectPlacement {\r\n    constructor(expressID: number, type: number, PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null);\r\n    expressID: number;\r\n    type: number;\r\n    PlacementRelTo: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcObjectPlacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcObjective {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, ConstraintGrade: IfcConstraintEnum, ConstraintSource: IfcLabel | null, CreatingActor: IfcActorSelect | null, CreationTime: IfcDateTime | null, UserDefinedGrade: IfcLabel | null, BenchmarkValues: (Handle<IfcConstraint> | IfcConstraint)[] | null, LogicalAggregator: IfcLogicalOperatorEnum | null, ObjectiveQualifier: IfcObjectiveEnum, UserDefinedQualifier: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    ConstraintGrade: IfcConstraintEnum;\r\n    ConstraintSource: IfcLabel | null;\r\n    CreatingActor: IfcActorSelect | null;\r\n    CreationTime: IfcDateTime | null;\r\n    UserDefinedGrade: IfcLabel | null;\r\n    BenchmarkValues: (Handle<IfcConstraint> | IfcConstraint)[] | null;\r\n    LogicalAggregator: IfcLogicalOperatorEnum | null;\r\n    ObjectiveQualifier: IfcObjectiveEnum;\r\n    UserDefinedQualifier: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcObjective;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOccupant {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, TheActor: IfcActorSelect, PredefinedType: IfcOccupantTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    TheActor: IfcActorSelect;\r\n    PredefinedType: IfcOccupantTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOccupant;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOffsetCurve {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve));\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOffsetCurve2D {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve), Distance: IfcLengthMeasure, SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    Distance: IfcLengthMeasure;\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOffsetCurve3D {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve), Distance: IfcLengthMeasure, SelfIntersect: IfcLogical, RefDirection: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    Distance: IfcLengthMeasure;\r\n    SelfIntersect: IfcLogical;\r\n    RefDirection: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve3D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOffsetCurveByDistances {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve), OffsetValues: (Handle<IfcDistanceExpression> | IfcDistanceExpression)[], Tag: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    OffsetValues: (Handle<IfcDistanceExpression> | IfcDistanceExpression)[];\r\n    Tag: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurveByDistances;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOpenShell {\r\n    constructor(expressID: number, type: number, CfsFaces: (Handle<IfcFace> | IfcFace)[]);\r\n    expressID: number;\r\n    type: number;\r\n    CfsFaces: (Handle<IfcFace> | IfcFace)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOpenShell;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOpeningElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcOpeningElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcOpeningElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOpeningElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOpeningStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcOpeningElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcOpeningElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOpeningStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOrganization {\r\n    constructor(expressID: number, type: number, Identification: IfcIdentifier | null, Name: IfcLabel, Description: IfcText | null, Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null, Addresses: (Handle<IfcAddress> | IfcAddress)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Identification: IfcIdentifier | null;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null;\r\n    Addresses: (Handle<IfcAddress> | IfcAddress)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOrganization;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOrganizationRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingOrganization: (Handle<IfcOrganization> | IfcOrganization), RelatedOrganizations: (Handle<IfcOrganization> | IfcOrganization)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingOrganization: (Handle<IfcOrganization> | IfcOrganization);\r\n    RelatedOrganizations: (Handle<IfcOrganization> | IfcOrganization)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOrganizationRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOrientationExpression {\r\n    constructor(expressID: number, type: number, LateralAxisDirection: (Handle<IfcDirection> | IfcDirection), VerticalAxisDirection: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    LateralAxisDirection: (Handle<IfcDirection> | IfcDirection);\r\n    VerticalAxisDirection: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOrientationExpression;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOrientedEdge {\r\n    constructor(expressID: number, type: number, EdgeStart: (Handle<IfcVertex> | IfcVertex), EdgeEnd: (Handle<IfcVertex> | IfcVertex), EdgeElement: (Handle<IfcEdge> | IfcEdge), Orientation: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    EdgeStart: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeEnd: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeElement: (Handle<IfcEdge> | IfcEdge);\r\n    Orientation: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOrientedEdge;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOuterBoundaryCurve {\r\n    constructor(expressID: number, type: number, Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[], SelfIntersect: IfcLogical);\r\n    expressID: number;\r\n    type: number;\r\n    Segments: (Handle<IfcCompositeCurveSegment> | IfcCompositeCurveSegment)[];\r\n    SelfIntersect: IfcLogical;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOuterBoundaryCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOutlet {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcOutletTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcOutletTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOutlet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOutletType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcOutletTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcOutletTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOutletType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcOwnerHistory {\r\n    constructor(expressID: number, type: number, OwningUser: (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization), OwningApplication: (Handle<IfcApplication> | IfcApplication), State: IfcStateEnum | null, ChangeAction: IfcChangeActionEnum | null, LastModifiedDate: IfcTimeStamp | null, LastModifyingUser: (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | null, LastModifyingApplication: (Handle<IfcApplication> | IfcApplication) | null, CreationDate: IfcTimeStamp);\r\n    expressID: number;\r\n    type: number;\r\n    OwningUser: (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization);\r\n    OwningApplication: (Handle<IfcApplication> | IfcApplication);\r\n    State: IfcStateEnum | null;\r\n    ChangeAction: IfcChangeActionEnum | null;\r\n    LastModifiedDate: IfcTimeStamp | null;\r\n    LastModifyingUser: (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | null;\r\n    LastModifyingApplication: (Handle<IfcApplication> | IfcApplication) | null;\r\n    CreationDate: IfcTimeStamp;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcOwnerHistory;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcParameterizedProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcParameterizedProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPath {\r\n    constructor(expressID: number, type: number, EdgeList: (Handle<IfcOrientedEdge> | IfcOrientedEdge)[]);\r\n    expressID: number;\r\n    type: number;\r\n    EdgeList: (Handle<IfcOrientedEdge> | IfcOrientedEdge)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPath;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPcurve {\r\n    constructor(expressID: number, type: number, BasisSurface: (Handle<IfcSurface> | IfcSurface), ReferenceCurve: (Handle<IfcCurve> | IfcCurve));\r\n    expressID: number;\r\n    type: number;\r\n    BasisSurface: (Handle<IfcSurface> | IfcSurface);\r\n    ReferenceCurve: (Handle<IfcCurve> | IfcCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPcurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPerformanceHistory {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LifeCyclePhase: IfcLabel, PredefinedType: IfcPerformanceHistoryTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LifeCyclePhase: IfcLabel;\r\n    PredefinedType: IfcPerformanceHistoryTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPerformanceHistory;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPermeableCoveringProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, OperationType: IfcPermeableCoveringOperationEnum, PanelPosition: IfcWindowPanelPositionEnum, FrameDepth: IfcPositiveLengthMeasure | null, FrameThickness: IfcPositiveLengthMeasure | null, ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    OperationType: IfcPermeableCoveringOperationEnum;\r\n    PanelPosition: IfcWindowPanelPositionEnum;\r\n    FrameDepth: IfcPositiveLengthMeasure | null;\r\n    FrameThickness: IfcPositiveLengthMeasure | null;\r\n    ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPermeableCoveringProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPermit {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, PredefinedType: IfcPermitTypeEnum | null, Status: IfcLabel | null, LongDescription: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    PredefinedType: IfcPermitTypeEnum | null;\r\n    Status: IfcLabel | null;\r\n    LongDescription: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPermit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPerson {\r\n    constructor(expressID: number, type: number, Identification: IfcIdentifier | null, FamilyName: IfcLabel | null, GivenName: IfcLabel | null, MiddleNames: IfcLabel[] | null, PrefixTitles: IfcLabel[] | null, SuffixTitles: IfcLabel[] | null, Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null, Addresses: (Handle<IfcAddress> | IfcAddress)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Identification: IfcIdentifier | null;\r\n    FamilyName: IfcLabel | null;\r\n    GivenName: IfcLabel | null;\r\n    MiddleNames: IfcLabel[] | null;\r\n    PrefixTitles: IfcLabel[] | null;\r\n    SuffixTitles: IfcLabel[] | null;\r\n    Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null;\r\n    Addresses: (Handle<IfcAddress> | IfcAddress)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPerson;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPersonAndOrganization {\r\n    constructor(expressID: number, type: number, ThePerson: (Handle<IfcPerson> | IfcPerson), TheOrganization: (Handle<IfcOrganization> | IfcOrganization), Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    ThePerson: (Handle<IfcPerson> | IfcPerson);\r\n    TheOrganization: (Handle<IfcOrganization> | IfcOrganization);\r\n    Roles: (Handle<IfcActorRole> | IfcActorRole)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPersonAndOrganization;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPhysicalComplexQuantity {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, HasQuantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[], Discrimination: IfcLabel, Quality: IfcLabel | null, Usage: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    HasQuantities: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity)[];\r\n    Discrimination: IfcLabel;\r\n    Quality: IfcLabel | null;\r\n    Usage: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalComplexQuantity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPhysicalQuantity {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalQuantity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPhysicalSimpleQuantity {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalSimpleQuantity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPile {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPileTypeEnum | null, ConstructionType: IfcPileConstructionEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPileTypeEnum | null;\r\n    ConstructionType: IfcPileConstructionEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPile;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPileType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcPileTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcPileTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPileType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPipeFitting {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPipeFittingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPipeFittingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPipeFitting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPipeFittingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcPipeFittingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcPipeFittingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPipeFittingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPipeSegment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPipeSegmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPipeSegmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPipeSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPipeSegmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcPipeSegmentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcPipeSegmentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPipeSegmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPixelTexture {\r\n    constructor(expressID: number, type: number, RepeatS: IfcBoolean, RepeatT: IfcBoolean, Mode: IfcIdentifier | null, TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null, Parameter: IfcIdentifier[] | null, Width: IfcInteger, Height: IfcInteger, ColourComponents: IfcInteger, Pixel: IfcBinary[]);\r\n    expressID: number;\r\n    type: number;\r\n    RepeatS: IfcBoolean;\r\n    RepeatT: IfcBoolean;\r\n    Mode: IfcIdentifier | null;\r\n    TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null;\r\n    Parameter: IfcIdentifier[] | null;\r\n    Width: IfcInteger;\r\n    Height: IfcInteger;\r\n    ColourComponents: IfcInteger;\r\n    Pixel: IfcBinary[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPixelTexture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlacement {\r\n    constructor(expressID: number, type: number, Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint));\r\n    expressID: number;\r\n    type: number;\r\n    Location: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlanarBox {\r\n    constructor(expressID: number, type: number, SizeInX: IfcLengthMeasure, SizeInY: IfcLengthMeasure, Placement: IfcAxis2Placement);\r\n    expressID: number;\r\n    type: number;\r\n    SizeInX: IfcLengthMeasure;\r\n    SizeInY: IfcLengthMeasure;\r\n    Placement: IfcAxis2Placement;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarBox;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlanarExtent {\r\n    constructor(expressID: number, type: number, SizeInX: IfcLengthMeasure, SizeInY: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    SizeInX: IfcLengthMeasure;\r\n    SizeInY: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarExtent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlane {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D));\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlane;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPlateTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPlateTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlateStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPlateTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPlateTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlateStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPlateType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcPlateTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcPlateTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPlateType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPoint {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPoint;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPointOnCurve {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve), PointParameter: IfcParameterValue);\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    PointParameter: IfcParameterValue;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPointOnSurface {\r\n    constructor(expressID: number, type: number, BasisSurface: (Handle<IfcSurface> | IfcSurface), PointParameterU: IfcParameterValue, PointParameterV: IfcParameterValue);\r\n    expressID: number;\r\n    type: number;\r\n    BasisSurface: (Handle<IfcSurface> | IfcSurface);\r\n    PointParameterU: IfcParameterValue;\r\n    PointParameterV: IfcParameterValue;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPolyLoop {\r\n    constructor(expressID: number, type: number, Polygon: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Polygon: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPolyLoop;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPolygonalBoundedHalfSpace {\r\n    constructor(expressID: number, type: number, BaseSurface: (Handle<IfcSurface> | IfcSurface), AgreementFlag: IfcBoolean, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), PolygonalBoundary: (Handle<IfcBoundedCurve> | IfcBoundedCurve));\r\n    expressID: number;\r\n    type: number;\r\n    BaseSurface: (Handle<IfcSurface> | IfcSurface);\r\n    AgreementFlag: IfcBoolean;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    PolygonalBoundary: (Handle<IfcBoundedCurve> | IfcBoundedCurve);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPolygonalBoundedHalfSpace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPolygonalFaceSet {\r\n    constructor(expressID: number, type: number, Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D), Closed: IfcBoolean | null, Faces: (Handle<IfcIndexedPolygonalFace> | IfcIndexedPolygonalFace)[], PnIndex: IfcPositiveInteger[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D);\r\n    Closed: IfcBoolean | null;\r\n    Faces: (Handle<IfcIndexedPolygonalFace> | IfcIndexedPolygonalFace)[];\r\n    PnIndex: IfcPositiveInteger[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPolygonalFaceSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPolyline {\r\n    constructor(expressID: number, type: number, Points: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Points: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPolyline;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPort {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPort;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPositioningElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPositioningElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPostalAddress {\r\n    constructor(expressID: number, type: number, Purpose: IfcAddressTypeEnum | null, Description: IfcText | null, UserDefinedPurpose: IfcLabel | null, InternalLocation: IfcLabel | null, AddressLines: IfcLabel[] | null, PostalBox: IfcLabel | null, Town: IfcLabel | null, Region: IfcLabel | null, PostalCode: IfcLabel | null, Country: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Purpose: IfcAddressTypeEnum | null;\r\n    Description: IfcText | null;\r\n    UserDefinedPurpose: IfcLabel | null;\r\n    InternalLocation: IfcLabel | null;\r\n    AddressLines: IfcLabel[] | null;\r\n    PostalBox: IfcLabel | null;\r\n    Town: IfcLabel | null;\r\n    Region: IfcLabel | null;\r\n    PostalCode: IfcLabel | null;\r\n    Country: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPostalAddress;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedColour {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedColour;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedCurveFont {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedCurveFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedItem {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedProperties {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedPropertySet {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedPropertySet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPreDefinedTextFont {\r\n    constructor(expressID: number, type: number, Name: IfcLabel);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedTextFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPresentationItem {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPresentationLayerAssignment {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, AssignedItems: IfcLayeredItem[], Identifier: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    AssignedItems: IfcLayeredItem[];\r\n    Identifier: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerAssignment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPresentationLayerWithStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, AssignedItems: IfcLayeredItem[], Identifier: IfcIdentifier | null, LayerOn: IfcLogical, LayerFrozen: IfcLogical, LayerBlocked: IfcLogical, LayerStyles: (Handle<IfcPresentationStyle> | IfcPresentationStyle)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    AssignedItems: IfcLayeredItem[];\r\n    Identifier: IfcIdentifier | null;\r\n    LayerOn: IfcLogical;\r\n    LayerFrozen: IfcLogical;\r\n    LayerBlocked: IfcLogical;\r\n    LayerStyles: (Handle<IfcPresentationStyle> | IfcPresentationStyle)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerWithStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPresentationStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPresentationStyleAssignment {\r\n    constructor(expressID: number, type: number, Styles: IfcPresentationStyleSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Styles: IfcPresentationStyleSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyleAssignment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProcedure {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, PredefinedType: IfcProcedureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    PredefinedType: IfcProcedureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProcedure;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProcedureType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ProcessType: IfcLabel | null, PredefinedType: IfcProcedureTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ProcessType: IfcLabel | null;\r\n    PredefinedType: IfcProcedureTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProcedureType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProcess {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProcess;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProduct {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProduct;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProductDefinitionShape {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Representations: (Handle<IfcRepresentation> | IfcRepresentation)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Representations: (Handle<IfcRepresentation> | IfcRepresentation)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProductDefinitionShape;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProductRepresentation {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, Representations: (Handle<IfcRepresentation> | IfcRepresentation)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Representations: (Handle<IfcRepresentation> | IfcRepresentation)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProductRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProfileProperties {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier | null, Description: IfcText | null, Properties: (Handle<IfcProperty> | IfcProperty)[], ProfileDefinition: (Handle<IfcProfileDef> | IfcProfileDef));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier | null;\r\n    Description: IfcText | null;\r\n    Properties: (Handle<IfcProperty> | IfcProperty)[];\r\n    ProfileDefinition: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProfileProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProject {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null, Phase: IfcLabel | null, RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    Phase: IfcLabel | null;\r\n    RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null;\r\n    UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProject;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProjectLibrary {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null, Phase: IfcLabel | null, RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    Phase: IfcLabel | null;\r\n    RepresentationContexts: (Handle<IfcRepresentationContext> | IfcRepresentationContext)[] | null;\r\n    UnitsInContext: (Handle<IfcUnitAssignment> | IfcUnitAssignment) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProjectLibrary;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProjectOrder {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, PredefinedType: IfcProjectOrderTypeEnum | null, Status: IfcLabel | null, LongDescription: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    PredefinedType: IfcProjectOrderTypeEnum | null;\r\n    Status: IfcLabel | null;\r\n    LongDescription: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProjectOrder;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProjectedCRS {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, GeodeticDatum: IfcIdentifier | null, VerticalDatum: IfcIdentifier | null, MapProjection: IfcIdentifier | null, MapZone: IfcIdentifier | null, MapUnit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    GeodeticDatum: IfcIdentifier | null;\r\n    VerticalDatum: IfcIdentifier | null;\r\n    MapProjection: IfcIdentifier | null;\r\n    MapZone: IfcIdentifier | null;\r\n    MapUnit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProjectedCRS;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProjectionElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcProjectionElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcProjectionElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProjectionElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProperty {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProperty;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyAbstraction {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyAbstraction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyBoundedValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, UpperBoundValue: IfcValue | null, LowerBoundValue: IfcValue | null, Unit: IfcUnit | null, SetPointValue: IfcValue | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    UpperBoundValue: IfcValue | null;\r\n    LowerBoundValue: IfcValue | null;\r\n    Unit: IfcUnit | null;\r\n    SetPointValue: IfcValue | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyBoundedValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyDefinition {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyDependencyRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, DependingProperty: (Handle<IfcProperty> | IfcProperty), DependantProperty: (Handle<IfcProperty> | IfcProperty), Expression: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    DependingProperty: (Handle<IfcProperty> | IfcProperty);\r\n    DependantProperty: (Handle<IfcProperty> | IfcProperty);\r\n    Expression: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDependencyRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyEnumeratedValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, EnumerationValues: IfcValue[] | null, EnumerationReference: (Handle<IfcPropertyEnumeration> | IfcPropertyEnumeration) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    EnumerationValues: IfcValue[] | null;\r\n    EnumerationReference: (Handle<IfcPropertyEnumeration> | IfcPropertyEnumeration) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeratedValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyEnumeration {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, EnumerationValues: IfcValue[], Unit: IfcUnit | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    EnumerationValues: IfcValue[];\r\n    Unit: IfcUnit | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeration;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyListValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, ListValues: IfcValue[] | null, Unit: IfcUnit | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    ListValues: IfcValue[] | null;\r\n    Unit: IfcUnit | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyListValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyReferenceValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, UsageName: IfcText | null, PropertyReference: IfcObjectReferenceSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    UsageName: IfcText | null;\r\n    PropertyReference: IfcObjectReferenceSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyReferenceValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertySet {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, HasProperties: (Handle<IfcProperty> | IfcProperty)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    HasProperties: (Handle<IfcProperty> | IfcProperty)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertySetDefinition {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySetDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertySetTemplate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, TemplateType: IfcPropertySetTemplateTypeEnum | null, ApplicableEntity: IfcIdentifier | null, HasPropertyTemplates: (Handle<IfcPropertyTemplate> | IfcPropertyTemplate)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    TemplateType: IfcPropertySetTemplateTypeEnum | null;\r\n    ApplicableEntity: IfcIdentifier | null;\r\n    HasPropertyTemplates: (Handle<IfcPropertyTemplate> | IfcPropertyTemplate)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySetTemplate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertySingleValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, NominalValue: IfcValue | null, Unit: IfcUnit | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    NominalValue: IfcValue | null;\r\n    Unit: IfcUnit | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySingleValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyTableValue {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null, DefiningValues: IfcValue[] | null, DefinedValues: IfcValue[] | null, Expression: IfcText | null, DefiningUnit: IfcUnit | null, DefinedUnit: IfcUnit | null, CurveInterpolation: IfcCurveInterpolationEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    DefiningValues: IfcValue[] | null;\r\n    DefinedValues: IfcValue[] | null;\r\n    Expression: IfcText | null;\r\n    DefiningUnit: IfcUnit | null;\r\n    DefinedUnit: IfcUnit | null;\r\n    CurveInterpolation: IfcCurveInterpolationEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTableValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyTemplate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTemplate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPropertyTemplateDefinition {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTemplateDefinition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProtectiveDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcProtectiveDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcProtectiveDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProtectiveDeviceTrippingUnit {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcProtectiveDeviceTrippingUnitTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcProtectiveDeviceTrippingUnitTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceTrippingUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProtectiveDeviceTrippingUnitType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcProtectiveDeviceTrippingUnitTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcProtectiveDeviceTrippingUnitTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceTrippingUnitType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProtectiveDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcProtectiveDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcProtectiveDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcProxy {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, ProxyType: IfcObjectTypeEnum, Tag: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    ProxyType: IfcObjectTypeEnum;\r\n    Tag: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcProxy;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPump {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcPumpTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcPumpTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPump;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcPumpType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcPumpTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcPumpTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcPumpType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityArea {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, AreaValue: IfcAreaMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    AreaValue: IfcAreaMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityArea;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityCount {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, CountValue: IfcCountMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    CountValue: IfcCountMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityCount;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityLength {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, LengthValue: IfcLengthMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    LengthValue: IfcLengthMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityLength;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantitySet {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantitySet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, TimeValue: IfcTimeMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    TimeValue: IfcTimeMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityVolume {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, VolumeValue: IfcVolumeMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    VolumeValue: IfcVolumeMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityVolume;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcQuantityWeight {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null, WeightValue: IfcMassMeasure, Formula: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    Unit: (Handle<IfcNamedUnit> | IfcNamedUnit) | null;\r\n    WeightValue: IfcMassMeasure;\r\n    Formula: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityWeight;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRailing {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcRailingTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcRailingTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRailing;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRailingType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcRailingTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcRailingTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRailingType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRamp {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcRampTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcRampTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRamp;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRampFlight {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcRampFlightTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcRampFlightTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlight;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRampFlightType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcRampFlightTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcRampFlightTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlightType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRampType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcRampTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcRampTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRampType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRationalBSplineCurveWithKnots {\r\n    constructor(expressID: number, type: number, Degree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], CurveForm: IfcBSplineCurveForm, ClosedCurve: IfcLogical, SelfIntersect: IfcLogical, KnotMultiplicities: IfcInteger[], Knots: IfcParameterValue[], KnotSpec: IfcKnotType, WeightsData: IfcReal[]);\r\n    expressID: number;\r\n    type: number;\r\n    Degree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    CurveForm: IfcBSplineCurveForm;\r\n    ClosedCurve: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    KnotMultiplicities: IfcInteger[];\r\n    Knots: IfcParameterValue[];\r\n    KnotSpec: IfcKnotType;\r\n    WeightsData: IfcReal[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRationalBSplineCurveWithKnots;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRationalBSplineSurfaceWithKnots {\r\n    constructor(expressID: number, type: number, UDegree: IfcInteger, VDegree: IfcInteger, ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[], SurfaceForm: IfcBSplineSurfaceForm, UClosed: IfcLogical, VClosed: IfcLogical, SelfIntersect: IfcLogical, UMultiplicities: IfcInteger[], VMultiplicities: IfcInteger[], UKnots: IfcParameterValue[], VKnots: IfcParameterValue[], KnotSpec: IfcKnotType, WeightsData: IfcReal[]);\r\n    expressID: number;\r\n    type: number;\r\n    UDegree: IfcInteger;\r\n    VDegree: IfcInteger;\r\n    ControlPointsList: (Handle<IfcCartesianPoint> | IfcCartesianPoint)[];\r\n    SurfaceForm: IfcBSplineSurfaceForm;\r\n    UClosed: IfcLogical;\r\n    VClosed: IfcLogical;\r\n    SelfIntersect: IfcLogical;\r\n    UMultiplicities: IfcInteger[];\r\n    VMultiplicities: IfcInteger[];\r\n    UKnots: IfcParameterValue[];\r\n    VKnots: IfcParameterValue[];\r\n    KnotSpec: IfcKnotType;\r\n    WeightsData: IfcReal[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRationalBSplineSurfaceWithKnots;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRectangleHollowProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, XDim: IfcPositiveLengthMeasure, YDim: IfcPositiveLengthMeasure, WallThickness: IfcPositiveLengthMeasure, InnerFilletRadius: IfcNonNegativeLengthMeasure | null, OuterFilletRadius: IfcNonNegativeLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    XDim: IfcPositiveLengthMeasure;\r\n    YDim: IfcPositiveLengthMeasure;\r\n    WallThickness: IfcPositiveLengthMeasure;\r\n    InnerFilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    OuterFilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleHollowProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRectangleProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, XDim: IfcPositiveLengthMeasure, YDim: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    XDim: IfcPositiveLengthMeasure;\r\n    YDim: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRectangularPyramid {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), XLength: IfcPositiveLengthMeasure, YLength: IfcPositiveLengthMeasure, Height: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    XLength: IfcPositiveLengthMeasure;\r\n    YLength: IfcPositiveLengthMeasure;\r\n    Height: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularPyramid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRectangularTrimmedSurface {\r\n    constructor(expressID: number, type: number, BasisSurface: (Handle<IfcSurface> | IfcSurface), U1: IfcParameterValue, V1: IfcParameterValue, U2: IfcParameterValue, V2: IfcParameterValue, Usense: IfcBoolean, Vsense: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    BasisSurface: (Handle<IfcSurface> | IfcSurface);\r\n    U1: IfcParameterValue;\r\n    V1: IfcParameterValue;\r\n    U2: IfcParameterValue;\r\n    V2: IfcParameterValue;\r\n    Usense: IfcBoolean;\r\n    Vsense: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularTrimmedSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRecurrencePattern {\r\n    constructor(expressID: number, type: number, RecurrenceType: IfcRecurrenceTypeEnum, DayComponent: IfcDayInMonthNumber[] | null, WeekdayComponent: IfcDayInWeekNumber[] | null, MonthComponent: IfcMonthInYearNumber[] | null, Position: IfcInteger | null, Interval: IfcInteger | null, Occurrences: IfcInteger | null, TimePeriods: (Handle<IfcTimePeriod> | IfcTimePeriod)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    RecurrenceType: IfcRecurrenceTypeEnum;\r\n    DayComponent: IfcDayInMonthNumber[] | null;\r\n    WeekdayComponent: IfcDayInWeekNumber[] | null;\r\n    MonthComponent: IfcMonthInYearNumber[] | null;\r\n    Position: IfcInteger | null;\r\n    Interval: IfcInteger | null;\r\n    Occurrences: IfcInteger | null;\r\n    TimePeriods: (Handle<IfcTimePeriod> | IfcTimePeriod)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRecurrencePattern;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReference {\r\n    constructor(expressID: number, type: number, TypeIdentifier: IfcIdentifier | null, AttributeIdentifier: IfcIdentifier | null, InstanceName: IfcLabel | null, ListPositions: IfcInteger[] | null, InnerReference: (Handle<IfcReference> | IfcReference) | null);\r\n    expressID: number;\r\n    type: number;\r\n    TypeIdentifier: IfcIdentifier | null;\r\n    AttributeIdentifier: IfcIdentifier | null;\r\n    InstanceName: IfcLabel | null;\r\n    ListPositions: IfcInteger[] | null;\r\n    InnerReference: (Handle<IfcReference> | IfcReference) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReference;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReferent {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, PredefinedType: IfcReferentTypeEnum | null, RestartDistance: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    PredefinedType: IfcReferentTypeEnum | null;\r\n    RestartDistance: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReferent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRegularTimeSeries {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, StartTime: IfcDateTime, EndTime: IfcDateTime, TimeSeriesDataType: IfcTimeSeriesDataTypeEnum, DataOrigin: IfcDataOriginEnum, UserDefinedDataOrigin: IfcLabel | null, Unit: IfcUnit | null, TimeStep: IfcTimeMeasure, Values: (Handle<IfcTimeSeriesValue> | IfcTimeSeriesValue)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    StartTime: IfcDateTime;\r\n    EndTime: IfcDateTime;\r\n    TimeSeriesDataType: IfcTimeSeriesDataTypeEnum;\r\n    DataOrigin: IfcDataOriginEnum;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    Unit: IfcUnit | null;\r\n    TimeStep: IfcTimeMeasure;\r\n    Values: (Handle<IfcTimeSeriesValue> | IfcTimeSeriesValue)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRegularTimeSeries;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcementBarProperties {\r\n    constructor(expressID: number, type: number, TotalCrossSectionArea: IfcAreaMeasure, SteelGrade: IfcLabel, BarSurface: IfcReinforcingBarSurfaceEnum | null, EffectiveDepth: IfcLengthMeasure | null, NominalBarDiameter: IfcPositiveLengthMeasure | null, BarCount: IfcCountMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    TotalCrossSectionArea: IfcAreaMeasure;\r\n    SteelGrade: IfcLabel;\r\n    BarSurface: IfcReinforcingBarSurfaceEnum | null;\r\n    EffectiveDepth: IfcLengthMeasure | null;\r\n    NominalBarDiameter: IfcPositiveLengthMeasure | null;\r\n    BarCount: IfcCountMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementBarProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcementDefinitionProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, DefinitionType: IfcLabel | null, ReinforcementSectionDefinitions: (Handle<IfcSectionReinforcementProperties> | IfcSectionReinforcementProperties)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    DefinitionType: IfcLabel | null;\r\n    ReinforcementSectionDefinitions: (Handle<IfcSectionReinforcementProperties> | IfcSectionReinforcementProperties)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementDefinitionProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingBar {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null, NominalDiameter: IfcPositiveLengthMeasure | null, CrossSectionArea: IfcAreaMeasure | null, BarLength: IfcPositiveLengthMeasure | null, PredefinedType: IfcReinforcingBarTypeEnum | null, BarSurface: IfcReinforcingBarSurfaceEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    CrossSectionArea: IfcAreaMeasure | null;\r\n    BarLength: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcReinforcingBarTypeEnum | null;\r\n    BarSurface: IfcReinforcingBarSurfaceEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingBar;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingBarType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcReinforcingBarTypeEnum, NominalDiameter: IfcPositiveLengthMeasure | null, CrossSectionArea: IfcAreaMeasure | null, BarLength: IfcPositiveLengthMeasure | null, BarSurface: IfcReinforcingBarSurfaceEnum | null, BendingShapeCode: IfcLabel | null, BendingParameters: IfcBendingParameterSelect[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcReinforcingBarTypeEnum;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    CrossSectionArea: IfcAreaMeasure | null;\r\n    BarLength: IfcPositiveLengthMeasure | null;\r\n    BarSurface: IfcReinforcingBarSurfaceEnum | null;\r\n    BendingShapeCode: IfcLabel | null;\r\n    BendingParameters: IfcBendingParameterSelect[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingBarType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingMesh {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null, MeshLength: IfcPositiveLengthMeasure | null, MeshWidth: IfcPositiveLengthMeasure | null, LongitudinalBarNominalDiameter: IfcPositiveLengthMeasure | null, TransverseBarNominalDiameter: IfcPositiveLengthMeasure | null, LongitudinalBarCrossSectionArea: IfcAreaMeasure | null, TransverseBarCrossSectionArea: IfcAreaMeasure | null, LongitudinalBarSpacing: IfcPositiveLengthMeasure | null, TransverseBarSpacing: IfcPositiveLengthMeasure | null, PredefinedType: IfcReinforcingMeshTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    MeshLength: IfcPositiveLengthMeasure | null;\r\n    MeshWidth: IfcPositiveLengthMeasure | null;\r\n    LongitudinalBarNominalDiameter: IfcPositiveLengthMeasure | null;\r\n    TransverseBarNominalDiameter: IfcPositiveLengthMeasure | null;\r\n    LongitudinalBarCrossSectionArea: IfcAreaMeasure | null;\r\n    TransverseBarCrossSectionArea: IfcAreaMeasure | null;\r\n    LongitudinalBarSpacing: IfcPositiveLengthMeasure | null;\r\n    TransverseBarSpacing: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcReinforcingMeshTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingMesh;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReinforcingMeshType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcReinforcingMeshTypeEnum, MeshLength: IfcPositiveLengthMeasure | null, MeshWidth: IfcPositiveLengthMeasure | null, LongitudinalBarNominalDiameter: IfcPositiveLengthMeasure | null, TransverseBarNominalDiameter: IfcPositiveLengthMeasure | null, LongitudinalBarCrossSectionArea: IfcAreaMeasure | null, TransverseBarCrossSectionArea: IfcAreaMeasure | null, LongitudinalBarSpacing: IfcPositiveLengthMeasure | null, TransverseBarSpacing: IfcPositiveLengthMeasure | null, BendingShapeCode: IfcLabel | null, BendingParameters: IfcBendingParameterSelect[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcReinforcingMeshTypeEnum;\r\n    MeshLength: IfcPositiveLengthMeasure | null;\r\n    MeshWidth: IfcPositiveLengthMeasure | null;\r\n    LongitudinalBarNominalDiameter: IfcPositiveLengthMeasure | null;\r\n    TransverseBarNominalDiameter: IfcPositiveLengthMeasure | null;\r\n    LongitudinalBarCrossSectionArea: IfcAreaMeasure | null;\r\n    TransverseBarCrossSectionArea: IfcAreaMeasure | null;\r\n    LongitudinalBarSpacing: IfcPositiveLengthMeasure | null;\r\n    TransverseBarSpacing: IfcPositiveLengthMeasure | null;\r\n    BendingShapeCode: IfcLabel | null;\r\n    BendingParameters: IfcBendingParameterSelect[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingMeshType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAggregates {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingObject: (Handle<IfcObjectDefinition> | IfcObjectDefinition), RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingObject: (Handle<IfcObjectDefinition> | IfcObjectDefinition);\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAggregates;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssigns {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssigns;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToActor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingActor: (Handle<IfcActor> | IfcActor), ActingRole: (Handle<IfcActorRole> | IfcActorRole) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingActor: (Handle<IfcActor> | IfcActor);\r\n    ActingRole: (Handle<IfcActorRole> | IfcActorRole) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToActor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToControl {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingControl: (Handle<IfcControl> | IfcControl));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingControl: (Handle<IfcControl> | IfcControl);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToControl;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToGroup {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingGroup: (Handle<IfcGroup> | IfcGroup));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingGroup: (Handle<IfcGroup> | IfcGroup);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToGroup;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToGroupByFactor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingGroup: (Handle<IfcGroup> | IfcGroup), Factor: IfcRatioMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingGroup: (Handle<IfcGroup> | IfcGroup);\r\n    Factor: IfcRatioMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToGroupByFactor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToProcess {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingProcess: IfcProcessSelect, QuantityInProcess: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingProcess: IfcProcessSelect;\r\n    QuantityInProcess: (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProcess;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToProduct {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingProduct: IfcProductSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingProduct: IfcProductSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProduct;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssignsToResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatedObjectsType: IfcObjectTypeEnum | null, RelatingResource: IfcResourceSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatedObjectsType: IfcObjectTypeEnum | null;\r\n    RelatingResource: IfcResourceSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociates {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociates;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesApproval {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], RelatingApproval: (Handle<IfcApproval> | IfcApproval));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    RelatingApproval: (Handle<IfcApproval> | IfcApproval);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesApproval;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesClassification {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], RelatingClassification: IfcClassificationSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    RelatingClassification: IfcClassificationSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesClassification;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesConstraint {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], Intent: IfcLabel | null, RelatingConstraint: (Handle<IfcConstraint> | IfcConstraint));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    Intent: IfcLabel | null;\r\n    RelatingConstraint: (Handle<IfcConstraint> | IfcConstraint);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesConstraint;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesDocument {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], RelatingDocument: IfcDocumentSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    RelatingDocument: IfcDocumentSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesDocument;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesLibrary {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], RelatingLibrary: IfcLibrarySelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    RelatingLibrary: IfcLibrarySelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesLibrary;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelAssociatesMaterial {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: IfcDefinitionSelect[], RelatingMaterial: IfcMaterialSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: IfcDefinitionSelect[];\r\n    RelatingMaterial: IfcMaterialSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesMaterial;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnects {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnects;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, RelatingElement: (Handle<IfcElement> | IfcElement), RelatedElement: (Handle<IfcElement> | IfcElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    RelatingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedElement: (Handle<IfcElement> | IfcElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsPathElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, RelatingElement: (Handle<IfcElement> | IfcElement), RelatedElement: (Handle<IfcElement> | IfcElement), RelatingPriorities: IfcInteger[], RelatedPriorities: IfcInteger[], RelatedConnectionType: IfcConnectionTypeEnum, RelatingConnectionType: IfcConnectionTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    RelatingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedElement: (Handle<IfcElement> | IfcElement);\r\n    RelatingPriorities: IfcInteger[];\r\n    RelatedPriorities: IfcInteger[];\r\n    RelatedConnectionType: IfcConnectionTypeEnum;\r\n    RelatingConnectionType: IfcConnectionTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPathElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsPortToElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingPort: (Handle<IfcPort> | IfcPort), RelatedElement: (Handle<IfcDistributionElement> | IfcDistributionElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingPort: (Handle<IfcPort> | IfcPort);\r\n    RelatedElement: (Handle<IfcDistributionElement> | IfcDistributionElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPortToElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsPorts {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingPort: (Handle<IfcPort> | IfcPort), RelatedPort: (Handle<IfcPort> | IfcPort), RealizingElement: (Handle<IfcElement> | IfcElement) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingPort: (Handle<IfcPort> | IfcPort);\r\n    RelatedPort: (Handle<IfcPort> | IfcPort);\r\n    RealizingElement: (Handle<IfcElement> | IfcElement) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPorts;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsStructuralActivity {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingElement: IfcStructuralActivityAssignmentSelect, RelatedStructuralActivity: (Handle<IfcStructuralActivity> | IfcStructuralActivity));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingElement: IfcStructuralActivityAssignmentSelect;\r\n    RelatedStructuralActivity: (Handle<IfcStructuralActivity> | IfcStructuralActivity);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralActivity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsStructuralMember {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingStructuralMember: (Handle<IfcStructuralMember> | IfcStructuralMember), RelatedStructuralConnection: (Handle<IfcStructuralConnection> | IfcStructuralConnection), AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IfcStructuralConnectionCondition> | IfcStructuralConnectionCondition) | null, SupportedLength: IfcLengthMeasure | null, ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingStructuralMember: (Handle<IfcStructuralMember> | IfcStructuralMember);\r\n    RelatedStructuralConnection: (Handle<IfcStructuralConnection> | IfcStructuralConnection);\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    AdditionalConditions: (Handle<IfcStructuralConnectionCondition> | IfcStructuralConnectionCondition) | null;\r\n    SupportedLength: IfcLengthMeasure | null;\r\n    ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralMember;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsWithEccentricity {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingStructuralMember: (Handle<IfcStructuralMember> | IfcStructuralMember), RelatedStructuralConnection: (Handle<IfcStructuralConnection> | IfcStructuralConnection), AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IfcStructuralConnectionCondition> | IfcStructuralConnectionCondition) | null, SupportedLength: IfcLengthMeasure | null, ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, ConnectionConstraint: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingStructuralMember: (Handle<IfcStructuralMember> | IfcStructuralMember);\r\n    RelatedStructuralConnection: (Handle<IfcStructuralConnection> | IfcStructuralConnection);\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    AdditionalConditions: (Handle<IfcStructuralConnectionCondition> | IfcStructuralConnectionCondition) | null;\r\n    SupportedLength: IfcLengthMeasure | null;\r\n    ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    ConnectionConstraint: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithEccentricity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelConnectsWithRealizingElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, RelatingElement: (Handle<IfcElement> | IfcElement), RelatedElement: (Handle<IfcElement> | IfcElement), RealizingElements: (Handle<IfcElement> | IfcElement)[], ConnectionType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    RelatingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedElement: (Handle<IfcElement> | IfcElement);\r\n    RealizingElements: (Handle<IfcElement> | IfcElement)[];\r\n    ConnectionType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithRealizingElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelContainedInSpatialStructure {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedElements: (Handle<IfcProduct> | IfcProduct)[], RelatingStructure: (Handle<IfcSpatialElement> | IfcSpatialElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedElements: (Handle<IfcProduct> | IfcProduct)[];\r\n    RelatingStructure: (Handle<IfcSpatialElement> | IfcSpatialElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelContainedInSpatialStructure;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelCoversBldgElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingBuildingElement: (Handle<IfcElement> | IfcElement), RelatedCoverings: (Handle<IfcCovering> | IfcCovering)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedCoverings: (Handle<IfcCovering> | IfcCovering)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversBldgElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelCoversSpaces {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingSpace: (Handle<IfcSpace> | IfcSpace), RelatedCoverings: (Handle<IfcCovering> | IfcCovering)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingSpace: (Handle<IfcSpace> | IfcSpace);\r\n    RelatedCoverings: (Handle<IfcCovering> | IfcCovering)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversSpaces;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDeclares {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingContext: (Handle<IfcContext> | IfcContext), RelatedDefinitions: IfcDefinitionSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingContext: (Handle<IfcContext> | IfcContext);\r\n    RelatedDefinitions: IfcDefinitionSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDeclares;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDecomposes {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDecomposes;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDefines {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefines;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDefinesByObject {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObject> | IfcObject)[], RelatingObject: (Handle<IfcObject> | IfcObject));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObject> | IfcObject)[];\r\n    RelatingObject: (Handle<IfcObject> | IfcObject);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByObject;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDefinesByProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[], RelatingPropertyDefinition: IfcPropertySetDefinitionSelect);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    RelatingPropertyDefinition: IfcPropertySetDefinitionSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDefinesByTemplate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[], RelatingTemplate: (Handle<IfcPropertySetTemplate> | IfcPropertySetTemplate));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[];\r\n    RelatingTemplate: (Handle<IfcPropertySetTemplate> | IfcPropertySetTemplate);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByTemplate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelDefinesByType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedObjects: (Handle<IfcObject> | IfcObject)[], RelatingType: (Handle<IfcTypeObject> | IfcTypeObject));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedObjects: (Handle<IfcObject> | IfcObject)[];\r\n    RelatingType: (Handle<IfcTypeObject> | IfcTypeObject);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelFillsElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingOpeningElement: (Handle<IfcOpeningElement> | IfcOpeningElement), RelatedBuildingElement: (Handle<IfcElement> | IfcElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingOpeningElement: (Handle<IfcOpeningElement> | IfcOpeningElement);\r\n    RelatedBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelFillsElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelFlowControlElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedControlElements: (Handle<IfcDistributionControlElement> | IfcDistributionControlElement)[], RelatingFlowElement: (Handle<IfcDistributionFlowElement> | IfcDistributionFlowElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedControlElements: (Handle<IfcDistributionControlElement> | IfcDistributionControlElement)[];\r\n    RelatingFlowElement: (Handle<IfcDistributionFlowElement> | IfcDistributionFlowElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelFlowControlElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelInterferesElements {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingElement: (Handle<IfcElement> | IfcElement), RelatedElement: (Handle<IfcElement> | IfcElement), InterferenceGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, InterferenceType: IfcIdentifier | null, ImpliedOrder: boolean);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedElement: (Handle<IfcElement> | IfcElement);\r\n    InterferenceGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    InterferenceType: IfcIdentifier | null;\r\n    ImpliedOrder: boolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelInterferesElements;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelNests {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingObject: (Handle<IfcObjectDefinition> | IfcObjectDefinition), RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingObject: (Handle<IfcObjectDefinition> | IfcObjectDefinition);\r\n    RelatedObjects: (Handle<IfcObjectDefinition> | IfcObjectDefinition)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelNests;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelPositions {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingPositioningElement: (Handle<IfcPositioningElement> | IfcPositioningElement), RelatedProducts: (Handle<IfcProduct> | IfcProduct)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingPositioningElement: (Handle<IfcPositioningElement> | IfcPositioningElement);\r\n    RelatedProducts: (Handle<IfcProduct> | IfcProduct)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelPositions;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelProjectsElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingElement: (Handle<IfcElement> | IfcElement), RelatedFeatureElement: (Handle<IfcFeatureElementAddition> | IfcFeatureElementAddition));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedFeatureElement: (Handle<IfcFeatureElementAddition> | IfcFeatureElementAddition);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelProjectsElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelReferencedInSpatialStructure {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatedElements: (Handle<IfcProduct> | IfcProduct)[], RelatingStructure: (Handle<IfcSpatialElement> | IfcSpatialElement));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedElements: (Handle<IfcProduct> | IfcProduct)[];\r\n    RelatingStructure: (Handle<IfcSpatialElement> | IfcSpatialElement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelReferencedInSpatialStructure;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelSequence {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingProcess: (Handle<IfcProcess> | IfcProcess), RelatedProcess: (Handle<IfcProcess> | IfcProcess), TimeLag: (Handle<IfcLagTime> | IfcLagTime) | null, SequenceType: IfcSequenceEnum | null, UserDefinedSequenceType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingProcess: (Handle<IfcProcess> | IfcProcess);\r\n    RelatedProcess: (Handle<IfcProcess> | IfcProcess);\r\n    TimeLag: (Handle<IfcLagTime> | IfcLagTime) | null;\r\n    SequenceType: IfcSequenceEnum | null;\r\n    UserDefinedSequenceType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelSequence;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelServicesBuildings {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingSystem: (Handle<IfcSystem> | IfcSystem), RelatedBuildings: (Handle<IfcSpatialElement> | IfcSpatialElement)[]);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingSystem: (Handle<IfcSystem> | IfcSystem);\r\n    RelatedBuildings: (Handle<IfcSpatialElement> | IfcSpatialElement)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelServicesBuildings;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelSpaceBoundary {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingSpace: IfcSpaceBoundarySelect, RelatedBuildingElement: (Handle<IfcElement> | IfcElement), ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum, InternalOrExternalBoundary: IfcInternalOrExternalEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingSpace: IfcSpaceBoundarySelect;\r\n    RelatedBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum;\r\n    InternalOrExternalBoundary: IfcInternalOrExternalEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelSpaceBoundary1stLevel {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingSpace: IfcSpaceBoundarySelect, RelatedBuildingElement: (Handle<IfcElement> | IfcElement), ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum, InternalOrExternalBoundary: IfcInternalOrExternalEnum, ParentBoundary: (Handle<IfcRelSpaceBoundary1stLevel> | IfcRelSpaceBoundary1stLevel) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingSpace: IfcSpaceBoundarySelect;\r\n    RelatedBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum;\r\n    InternalOrExternalBoundary: IfcInternalOrExternalEnum;\r\n    ParentBoundary: (Handle<IfcRelSpaceBoundary1stLevel> | IfcRelSpaceBoundary1stLevel) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary1stLevel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelSpaceBoundary2ndLevel {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingSpace: IfcSpaceBoundarySelect, RelatedBuildingElement: (Handle<IfcElement> | IfcElement), ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum, InternalOrExternalBoundary: IfcInternalOrExternalEnum, ParentBoundary: (Handle<IfcRelSpaceBoundary1stLevel> | IfcRelSpaceBoundary1stLevel) | null, CorrespondingBoundary: (Handle<IfcRelSpaceBoundary2ndLevel> | IfcRelSpaceBoundary2ndLevel) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingSpace: IfcSpaceBoundarySelect;\r\n    RelatedBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    ConnectionGeometry: (Handle<IfcConnectionGeometry> | IfcConnectionGeometry) | null;\r\n    PhysicalOrVirtualBoundary: IfcPhysicalOrVirtualEnum;\r\n    InternalOrExternalBoundary: IfcInternalOrExternalEnum;\r\n    ParentBoundary: (Handle<IfcRelSpaceBoundary1stLevel> | IfcRelSpaceBoundary1stLevel) | null;\r\n    CorrespondingBoundary: (Handle<IfcRelSpaceBoundary2ndLevel> | IfcRelSpaceBoundary2ndLevel) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary2ndLevel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelVoidsElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, RelatingBuildingElement: (Handle<IfcElement> | IfcElement), RelatedOpeningElement: (Handle<IfcFeatureElementSubtraction> | IfcFeatureElementSubtraction));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingBuildingElement: (Handle<IfcElement> | IfcElement);\r\n    RelatedOpeningElement: (Handle<IfcFeatureElementSubtraction> | IfcFeatureElementSubtraction);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelVoidsElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRelationship {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcReparametrisedCompositeCurveSegment {\r\n    constructor(expressID: number, type: number, Transition: IfcTransitionCode, SameSense: IfcBoolean, ParentCurve: (Handle<IfcCurve> | IfcCurve), ParamLength: IfcParameterValue);\r\n    expressID: number;\r\n    type: number;\r\n    Transition: IfcTransitionCode;\r\n    SameSense: IfcBoolean;\r\n    ParentCurve: (Handle<IfcCurve> | IfcCurve);\r\n    ParamLength: IfcParameterValue;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcReparametrisedCompositeCurveSegment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRepresentation {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRepresentationContext {\r\n    constructor(expressID: number, type: number, ContextIdentifier: IfcLabel | null, ContextType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    ContextIdentifier: IfcLabel | null;\r\n    ContextType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationContext;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRepresentationItem {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRepresentationMap {\r\n    constructor(expressID: number, type: number, MappingOrigin: IfcAxis2Placement, MappedRepresentation: (Handle<IfcRepresentation> | IfcRepresentation));\r\n    expressID: number;\r\n    type: number;\r\n    MappingOrigin: IfcAxis2Placement;\r\n    MappedRepresentation: (Handle<IfcRepresentation> | IfcRepresentation);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationMap;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcResourceApprovalRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatedResourceObjects: IfcResourceObjectSelect[], RelatingApproval: (Handle<IfcApproval> | IfcApproval));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatedResourceObjects: IfcResourceObjectSelect[];\r\n    RelatingApproval: (Handle<IfcApproval> | IfcApproval);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcResourceApprovalRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcResourceConstraintRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null, RelatingConstraint: (Handle<IfcConstraint> | IfcConstraint), RelatedResourceObjects: IfcResourceObjectSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    RelatingConstraint: (Handle<IfcConstraint> | IfcConstraint);\r\n    RelatedResourceObjects: IfcResourceObjectSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcResourceConstraintRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcResourceLevelRelationship {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcResourceLevelRelationship;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcResourceTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, ScheduleWork: IfcDuration | null, ScheduleUsage: IfcPositiveRatioMeasure | null, ScheduleStart: IfcDateTime | null, ScheduleFinish: IfcDateTime | null, ScheduleContour: IfcLabel | null, LevelingDelay: IfcDuration | null, IsOverAllocated: IfcBoolean | null, StatusTime: IfcDateTime | null, ActualWork: IfcDuration | null, ActualUsage: IfcPositiveRatioMeasure | null, ActualStart: IfcDateTime | null, ActualFinish: IfcDateTime | null, RemainingWork: IfcDuration | null, RemainingUsage: IfcPositiveRatioMeasure | null, Completion: IfcPositiveRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    ScheduleWork: IfcDuration | null;\r\n    ScheduleUsage: IfcPositiveRatioMeasure | null;\r\n    ScheduleStart: IfcDateTime | null;\r\n    ScheduleFinish: IfcDateTime | null;\r\n    ScheduleContour: IfcLabel | null;\r\n    LevelingDelay: IfcDuration | null;\r\n    IsOverAllocated: IfcBoolean | null;\r\n    StatusTime: IfcDateTime | null;\r\n    ActualWork: IfcDuration | null;\r\n    ActualUsage: IfcPositiveRatioMeasure | null;\r\n    ActualStart: IfcDateTime | null;\r\n    ActualFinish: IfcDateTime | null;\r\n    RemainingWork: IfcDuration | null;\r\n    RemainingUsage: IfcPositiveRatioMeasure | null;\r\n    Completion: IfcPositiveRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcResourceTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRevolvedAreaSolid {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, Axis: (Handle<IfcAxis1Placement> | IfcAxis1Placement), Angle: IfcPlaneAngleMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    Axis: (Handle<IfcAxis1Placement> | IfcAxis1Placement);\r\n    Angle: IfcPlaneAngleMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRevolvedAreaSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRevolvedAreaSolidTapered {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, Axis: (Handle<IfcAxis1Placement> | IfcAxis1Placement), Angle: IfcPlaneAngleMeasure, EndSweptArea: (Handle<IfcProfileDef> | IfcProfileDef));\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    Axis: (Handle<IfcAxis1Placement> | IfcAxis1Placement);\r\n    Angle: IfcPlaneAngleMeasure;\r\n    EndSweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRevolvedAreaSolidTapered;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRightCircularCone {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), Height: IfcPositiveLengthMeasure, BottomRadius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    Height: IfcPositiveLengthMeasure;\r\n    BottomRadius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCone;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRightCircularCylinder {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), Height: IfcPositiveLengthMeasure, Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    Height: IfcPositiveLengthMeasure;\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCylinder;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRoof {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcRoofTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcRoofTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRoof;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRoofType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcRoofTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcRoofTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRoofType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRoot {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRoot;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcRoundedRectangleProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, XDim: IfcPositiveLengthMeasure, YDim: IfcPositiveLengthMeasure, RoundingRadius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    XDim: IfcPositiveLengthMeasure;\r\n    YDim: IfcPositiveLengthMeasure;\r\n    RoundingRadius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcRoundedRectangleProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSIUnit {\r\n    constructor(expressID: number, type: number, Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents), UnitType: IfcUnitEnum, Prefix: IfcSIPrefix | null, Name: IfcSIUnitName);\r\n    expressID: number;\r\n    type: number;\r\n    Dimensions: (Handle<IfcDimensionalExponents> | IfcDimensionalExponents);\r\n    UnitType: IfcUnitEnum;\r\n    Prefix: IfcSIPrefix | null;\r\n    Name: IfcSIUnitName;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSIUnit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSanitaryTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSanitaryTerminalTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSanitaryTerminalTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSanitaryTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSanitaryTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSanitaryTerminalTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSanitaryTerminalTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSanitaryTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSchedulingTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSchedulingTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSeamCurve {\r\n    constructor(expressID: number, type: number, Curve3D: (Handle<IfcCurve> | IfcCurve), AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[], MasterRepresentation: IfcPreferredSurfaceCurveRepresentation);\r\n    expressID: number;\r\n    type: number;\r\n    Curve3D: (Handle<IfcCurve> | IfcCurve);\r\n    AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[];\r\n    MasterRepresentation: IfcPreferredSurfaceCurveRepresentation;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSeamCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSectionProperties {\r\n    constructor(expressID: number, type: number, SectionType: IfcSectionTypeEnum, StartProfile: (Handle<IfcProfileDef> | IfcProfileDef), EndProfile: (Handle<IfcProfileDef> | IfcProfileDef) | null);\r\n    expressID: number;\r\n    type: number;\r\n    SectionType: IfcSectionTypeEnum;\r\n    StartProfile: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    EndProfile: (Handle<IfcProfileDef> | IfcProfileDef) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSectionProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSectionReinforcementProperties {\r\n    constructor(expressID: number, type: number, LongitudinalStartPosition: IfcLengthMeasure, LongitudinalEndPosition: IfcLengthMeasure, TransversePosition: IfcLengthMeasure | null, ReinforcementRole: IfcReinforcingBarRoleEnum, SectionDefinition: (Handle<IfcSectionProperties> | IfcSectionProperties), CrossSectionReinforcementDefinitions: (Handle<IfcReinforcementBarProperties> | IfcReinforcementBarProperties)[]);\r\n    expressID: number;\r\n    type: number;\r\n    LongitudinalStartPosition: IfcLengthMeasure;\r\n    LongitudinalEndPosition: IfcLengthMeasure;\r\n    TransversePosition: IfcLengthMeasure | null;\r\n    ReinforcementRole: IfcReinforcingBarRoleEnum;\r\n    SectionDefinition: (Handle<IfcSectionProperties> | IfcSectionProperties);\r\n    CrossSectionReinforcementDefinitions: (Handle<IfcReinforcementBarProperties> | IfcReinforcementBarProperties)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSectionReinforcementProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSectionedSolid {\r\n    constructor(expressID: number, type: number, Directrix: (Handle<IfcCurve> | IfcCurve), CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSectionedSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSectionedSolidHorizontal {\r\n    constructor(expressID: number, type: number, Directrix: (Handle<IfcCurve> | IfcCurve), CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[], CrossSectionPositions: (Handle<IfcDistanceExpression> | IfcDistanceExpression)[], FixedAxisVertical: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[];\r\n    CrossSectionPositions: (Handle<IfcDistanceExpression> | IfcDistanceExpression)[];\r\n    FixedAxisVertical: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSectionedSolidHorizontal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSectionedSpine {\r\n    constructor(expressID: number, type: number, SpineCurve: (Handle<IfcCompositeCurve> | IfcCompositeCurve), CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[], CrossSectionPositions: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D)[]);\r\n    expressID: number;\r\n    type: number;\r\n    SpineCurve: (Handle<IfcCompositeCurve> | IfcCompositeCurve);\r\n    CrossSections: (Handle<IfcProfileDef> | IfcProfileDef)[];\r\n    CrossSectionPositions: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSectionedSpine;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSensor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSensorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSensorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSensor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSensorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSensorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSensorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSensorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShadingDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcShadingDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcShadingDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShadingDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShadingDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcShadingDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcShadingDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShadingDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShapeAspect {\r\n    constructor(expressID: number, type: number, ShapeRepresentations: (Handle<IfcShapeModel> | IfcShapeModel)[], Name: IfcLabel | null, Description: IfcText | null, ProductDefinitional: IfcLogical, PartOfProductDefinitionShape: IfcProductRepresentationSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    ShapeRepresentations: (Handle<IfcShapeModel> | IfcShapeModel)[];\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ProductDefinitional: IfcLogical;\r\n    PartOfProductDefinitionShape: IfcProductRepresentationSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShapeAspect;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShapeModel {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShapeModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShapeRepresentation {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShapeRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcShellBasedSurfaceModel {\r\n    constructor(expressID: number, type: number, SbsmBoundary: IfcShell[]);\r\n    expressID: number;\r\n    type: number;\r\n    SbsmBoundary: IfcShell[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcShellBasedSurfaceModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSimpleProperty {\r\n    constructor(expressID: number, type: number, Name: IfcIdentifier, Description: IfcText | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcIdentifier;\r\n    Description: IfcText | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSimpleProperty;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSimplePropertyTemplate {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, TemplateType: IfcSimplePropertyTemplateTypeEnum | null, PrimaryMeasureType: IfcLabel | null, SecondaryMeasureType: IfcLabel | null, Enumerators: (Handle<IfcPropertyEnumeration> | IfcPropertyEnumeration) | null, PrimaryUnit: IfcUnit | null, SecondaryUnit: IfcUnit | null, Expression: IfcLabel | null, AccessState: IfcStateEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    TemplateType: IfcSimplePropertyTemplateTypeEnum | null;\r\n    PrimaryMeasureType: IfcLabel | null;\r\n    SecondaryMeasureType: IfcLabel | null;\r\n    Enumerators: (Handle<IfcPropertyEnumeration> | IfcPropertyEnumeration) | null;\r\n    PrimaryUnit: IfcUnit | null;\r\n    SecondaryUnit: IfcUnit | null;\r\n    Expression: IfcLabel | null;\r\n    AccessState: IfcStateEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSimplePropertyTemplate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSite {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, RefLatitude: IfcCompoundPlaneAngleMeasure | null, RefLongitude: IfcCompoundPlaneAngleMeasure | null, RefElevation: IfcLengthMeasure | null, LandTitleNumber: IfcLabel | null, SiteAddress: (Handle<IfcPostalAddress> | IfcPostalAddress) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    RefLatitude: IfcCompoundPlaneAngleMeasure | null;\r\n    RefLongitude: IfcCompoundPlaneAngleMeasure | null;\r\n    RefElevation: IfcLengthMeasure | null;\r\n    LandTitleNumber: IfcLabel | null;\r\n    SiteAddress: (Handle<IfcPostalAddress> | IfcPostalAddress) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSite;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSlab {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSlabTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSlabTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSlab;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSlabElementedCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSlabTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSlabTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSlabElementedCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSlabStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSlabTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSlabTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSlabStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSlabType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSlabTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSlabTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSlabType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSlippageConnectionCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, SlippageX: IfcLengthMeasure | null, SlippageY: IfcLengthMeasure | null, SlippageZ: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    SlippageX: IfcLengthMeasure | null;\r\n    SlippageY: IfcLengthMeasure | null;\r\n    SlippageZ: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSlippageConnectionCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSolarDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSolarDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSolarDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSolarDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSolarDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSolarDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSolarDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSolarDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSolidModel {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSolidModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpace {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null, PredefinedType: IfcSpaceTypeEnum | null, ElevationWithFlooring: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    PredefinedType: IfcSpaceTypeEnum | null;\r\n    ElevationWithFlooring: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpace;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpaceHeater {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSpaceHeaterTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSpaceHeaterTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceHeater;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpaceHeaterType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSpaceHeaterTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSpaceHeaterTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceHeaterType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpaceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSpaceTypeEnum, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSpaceTypeEnum;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialStructureElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, CompositionType: IfcElementCompositionEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    CompositionType: IfcElementCompositionEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialStructureElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialZone {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, LongName: IfcLabel | null, PredefinedType: IfcSpatialZoneTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    LongName: IfcLabel | null;\r\n    PredefinedType: IfcSpatialZoneTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialZone;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSpatialZoneType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSpatialZoneTypeEnum, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSpatialZoneTypeEnum;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialZoneType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSphere {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSphere;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSphericalSurface {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), Radius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSphericalSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStackTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcStackTerminalTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcStackTerminalTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStackTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStackTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcStackTerminalTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcStackTerminalTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStackTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStair {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcStairTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcStairTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStair;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStairFlight {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, NumberOfRisers: IfcInteger | null, NumberOfTreads: IfcInteger | null, RiserHeight: IfcPositiveLengthMeasure | null, TreadLength: IfcPositiveLengthMeasure | null, PredefinedType: IfcStairFlightTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    NumberOfRisers: IfcInteger | null;\r\n    NumberOfTreads: IfcInteger | null;\r\n    RiserHeight: IfcPositiveLengthMeasure | null;\r\n    TreadLength: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcStairFlightTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlight;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStairFlightType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcStairFlightTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcStairFlightTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlightType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStairType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcStairTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcStairTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStairType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralActivity {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralActivity;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralAnalysisModel {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, PredefinedType: IfcAnalysisModelTypeEnum, OrientationOf2DPlane: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, LoadedBy: (Handle<IfcStructuralLoadGroup> | IfcStructuralLoadGroup)[] | null, HasResults: (Handle<IfcStructuralResultGroup> | IfcStructuralResultGroup)[] | null, SharedPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    PredefinedType: IfcAnalysisModelTypeEnum;\r\n    OrientationOf2DPlane: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    LoadedBy: (Handle<IfcStructuralLoadGroup> | IfcStructuralLoadGroup)[] | null;\r\n    HasResults: (Handle<IfcStructuralResultGroup> | IfcStructuralResultGroup)[] | null;\r\n    SharedPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAnalysisModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralConnection {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralConnectionCondition {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnectionCondition;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralCurveAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null, ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null, PredefinedType: IfcStructuralCurveActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null;\r\n    PredefinedType: IfcStructuralCurveActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralCurveConnection {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null, Axis: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    Axis: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveConnection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralCurveMember {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, PredefinedType: IfcStructuralCurveMemberTypeEnum, Axis: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    PredefinedType: IfcStructuralCurveMemberTypeEnum;\r\n    Axis: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMember;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralCurveMemberVarying {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, PredefinedType: IfcStructuralCurveMemberTypeEnum, Axis: (Handle<IfcDirection> | IfcDirection));\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    PredefinedType: IfcStructuralCurveMemberTypeEnum;\r\n    Axis: (Handle<IfcDirection> | IfcDirection);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMemberVarying;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralCurveReaction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, PredefinedType: IfcStructuralCurveActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    PredefinedType: IfcStructuralCurveActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveReaction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralItem {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLinearAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null, ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null, PredefinedType: IfcStructuralCurveActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null;\r\n    PredefinedType: IfcStructuralCurveActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLinearAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoad {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoad;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, PredefinedType: IfcLoadGroupTypeEnum, ActionType: IfcActionTypeEnum, ActionSource: IfcActionSourceTypeEnum, Coefficient: IfcRatioMeasure | null, Purpose: IfcLabel | null, SelfWeightCoefficients: IfcRatioMeasure[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    PredefinedType: IfcLoadGroupTypeEnum;\r\n    ActionType: IfcActionTypeEnum;\r\n    ActionSource: IfcActionSourceTypeEnum;\r\n    Coefficient: IfcRatioMeasure | null;\r\n    Purpose: IfcLabel | null;\r\n    SelfWeightCoefficients: IfcRatioMeasure[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadConfiguration {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Values: (Handle<IfcStructuralLoadOrResult> | IfcStructuralLoadOrResult)[], Locations: IfcLengthMeasure[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Values: (Handle<IfcStructuralLoadOrResult> | IfcStructuralLoadOrResult)[];\r\n    Locations: IfcLengthMeasure[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadConfiguration;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadGroup {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, PredefinedType: IfcLoadGroupTypeEnum, ActionType: IfcActionTypeEnum, ActionSource: IfcActionSourceTypeEnum, Coefficient: IfcRatioMeasure | null, Purpose: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    PredefinedType: IfcLoadGroupTypeEnum;\r\n    ActionType: IfcActionTypeEnum;\r\n    ActionSource: IfcActionSourceTypeEnum;\r\n    Coefficient: IfcRatioMeasure | null;\r\n    Purpose: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadGroup;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadLinearForce {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, LinearForceX: IfcLinearForceMeasure | null, LinearForceY: IfcLinearForceMeasure | null, LinearForceZ: IfcLinearForceMeasure | null, LinearMomentX: IfcLinearMomentMeasure | null, LinearMomentY: IfcLinearMomentMeasure | null, LinearMomentZ: IfcLinearMomentMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    LinearForceX: IfcLinearForceMeasure | null;\r\n    LinearForceY: IfcLinearForceMeasure | null;\r\n    LinearForceZ: IfcLinearForceMeasure | null;\r\n    LinearMomentX: IfcLinearMomentMeasure | null;\r\n    LinearMomentY: IfcLinearMomentMeasure | null;\r\n    LinearMomentZ: IfcLinearMomentMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadLinearForce;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadOrResult {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadOrResult;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadPlanarForce {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, PlanarForceX: IfcPlanarForceMeasure | null, PlanarForceY: IfcPlanarForceMeasure | null, PlanarForceZ: IfcPlanarForceMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    PlanarForceX: IfcPlanarForceMeasure | null;\r\n    PlanarForceY: IfcPlanarForceMeasure | null;\r\n    PlanarForceZ: IfcPlanarForceMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadPlanarForce;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadSingleDisplacement {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DisplacementX: IfcLengthMeasure | null, DisplacementY: IfcLengthMeasure | null, DisplacementZ: IfcLengthMeasure | null, RotationalDisplacementRX: IfcPlaneAngleMeasure | null, RotationalDisplacementRY: IfcPlaneAngleMeasure | null, RotationalDisplacementRZ: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DisplacementX: IfcLengthMeasure | null;\r\n    DisplacementY: IfcLengthMeasure | null;\r\n    DisplacementZ: IfcLengthMeasure | null;\r\n    RotationalDisplacementRX: IfcPlaneAngleMeasure | null;\r\n    RotationalDisplacementRY: IfcPlaneAngleMeasure | null;\r\n    RotationalDisplacementRZ: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadSingleDisplacementDistortion {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DisplacementX: IfcLengthMeasure | null, DisplacementY: IfcLengthMeasure | null, DisplacementZ: IfcLengthMeasure | null, RotationalDisplacementRX: IfcPlaneAngleMeasure | null, RotationalDisplacementRY: IfcPlaneAngleMeasure | null, RotationalDisplacementRZ: IfcPlaneAngleMeasure | null, Distortion: IfcCurvatureMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DisplacementX: IfcLengthMeasure | null;\r\n    DisplacementY: IfcLengthMeasure | null;\r\n    DisplacementZ: IfcLengthMeasure | null;\r\n    RotationalDisplacementRX: IfcPlaneAngleMeasure | null;\r\n    RotationalDisplacementRY: IfcPlaneAngleMeasure | null;\r\n    RotationalDisplacementRZ: IfcPlaneAngleMeasure | null;\r\n    Distortion: IfcCurvatureMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacementDistortion;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadSingleForce {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, ForceX: IfcForceMeasure | null, ForceY: IfcForceMeasure | null, ForceZ: IfcForceMeasure | null, MomentX: IfcTorqueMeasure | null, MomentY: IfcTorqueMeasure | null, MomentZ: IfcTorqueMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    ForceX: IfcForceMeasure | null;\r\n    ForceY: IfcForceMeasure | null;\r\n    ForceZ: IfcForceMeasure | null;\r\n    MomentX: IfcTorqueMeasure | null;\r\n    MomentY: IfcTorqueMeasure | null;\r\n    MomentZ: IfcTorqueMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForce;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadSingleForceWarping {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, ForceX: IfcForceMeasure | null, ForceY: IfcForceMeasure | null, ForceZ: IfcForceMeasure | null, MomentX: IfcTorqueMeasure | null, MomentY: IfcTorqueMeasure | null, MomentZ: IfcTorqueMeasure | null, WarpingMoment: IfcWarpingMomentMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    ForceX: IfcForceMeasure | null;\r\n    ForceY: IfcForceMeasure | null;\r\n    ForceZ: IfcForceMeasure | null;\r\n    MomentX: IfcTorqueMeasure | null;\r\n    MomentY: IfcTorqueMeasure | null;\r\n    MomentZ: IfcTorqueMeasure | null;\r\n    WarpingMoment: IfcWarpingMomentMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForceWarping;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadStatic {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadStatic;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralLoadTemperature {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DeltaTConstant: IfcThermodynamicTemperatureMeasure | null, DeltaTY: IfcThermodynamicTemperatureMeasure | null, DeltaTZ: IfcThermodynamicTemperatureMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DeltaTConstant: IfcThermodynamicTemperatureMeasure | null;\r\n    DeltaTY: IfcThermodynamicTemperatureMeasure | null;\r\n    DeltaTZ: IfcThermodynamicTemperatureMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadTemperature;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralMember {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralMember;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralPlanarAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null, ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null, PredefinedType: IfcStructuralSurfaceActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null;\r\n    PredefinedType: IfcStructuralSurfaceActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPlanarAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralPointAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralPointConnection {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null, ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    ConditionCoordinateSystem: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointConnection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralPointReaction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointReaction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralReaction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralReaction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralResultGroup {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, TheoryType: IfcAnalysisTheoryTypeEnum, ResultForLoadGroup: (Handle<IfcStructuralLoadGroup> | IfcStructuralLoadGroup) | null, IsLinear: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    TheoryType: IfcAnalysisTheoryTypeEnum;\r\n    ResultForLoadGroup: (Handle<IfcStructuralLoadGroup> | IfcStructuralLoadGroup) | null;\r\n    IsLinear: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralResultGroup;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralSurfaceAction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, DestabilizingLoad: IfcBoolean | null, ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null, PredefinedType: IfcStructuralSurfaceActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    DestabilizingLoad: IfcBoolean | null;\r\n    ProjectedOrTrue: IfcProjectedOrTrueLengthEnum | null;\r\n    PredefinedType: IfcStructuralSurfaceActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceAction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralSurfaceConnection {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedCondition: (Handle<IfcBoundaryCondition> | IfcBoundaryCondition) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceConnection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralSurfaceMember {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, PredefinedType: IfcStructuralSurfaceMemberTypeEnum, Thickness: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    PredefinedType: IfcStructuralSurfaceMemberTypeEnum;\r\n    Thickness: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMember;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralSurfaceMemberVarying {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, PredefinedType: IfcStructuralSurfaceMemberTypeEnum, Thickness: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    PredefinedType: IfcStructuralSurfaceMemberTypeEnum;\r\n    Thickness: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMemberVarying;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStructuralSurfaceReaction {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad), GlobalOrLocal: IfcGlobalOrLocalEnum, PredefinedType: IfcStructuralSurfaceActivityTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    AppliedLoad: (Handle<IfcStructuralLoad> | IfcStructuralLoad);\r\n    GlobalOrLocal: IfcGlobalOrLocalEnum;\r\n    PredefinedType: IfcStructuralSurfaceActivityTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceReaction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStyleModel {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStyleModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStyledItem {\r\n    constructor(expressID: number, type: number, Item: (Handle<IfcRepresentationItem> | IfcRepresentationItem) | null, Styles: IfcStyleAssignmentSelect[], Name: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    Item: (Handle<IfcRepresentationItem> | IfcRepresentationItem) | null;\r\n    Styles: IfcStyleAssignmentSelect[];\r\n    Name: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStyledItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcStyledRepresentation {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcStyledRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSubContractResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcSubContractResourceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Usage: (Handle<IfcResourceTime> | IfcResourceTime) | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcSubContractResourceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSubContractResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSubContractResourceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null, BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null, BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null, PredefinedType: IfcSubContractResourceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    BaseCosts: (Handle<IfcAppliedValue> | IfcAppliedValue)[] | null;\r\n    BaseQuantity: (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | null;\r\n    PredefinedType: IfcSubContractResourceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSubContractResourceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSubedge {\r\n    constructor(expressID: number, type: number, EdgeStart: (Handle<IfcVertex> | IfcVertex), EdgeEnd: (Handle<IfcVertex> | IfcVertex), ParentEdge: (Handle<IfcEdge> | IfcEdge));\r\n    expressID: number;\r\n    type: number;\r\n    EdgeStart: (Handle<IfcVertex> | IfcVertex);\r\n    EdgeEnd: (Handle<IfcVertex> | IfcVertex);\r\n    ParentEdge: (Handle<IfcEdge> | IfcEdge);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSubedge;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurface {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceCurve {\r\n    constructor(expressID: number, type: number, Curve3D: (Handle<IfcCurve> | IfcCurve), AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[], MasterRepresentation: IfcPreferredSurfaceCurveRepresentation);\r\n    expressID: number;\r\n    type: number;\r\n    Curve3D: (Handle<IfcCurve> | IfcCurve);\r\n    AssociatedGeometry: (Handle<IfcPcurve> | IfcPcurve)[];\r\n    MasterRepresentation: IfcPreferredSurfaceCurveRepresentation;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceCurveSweptAreaSolid {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, Directrix: (Handle<IfcCurve> | IfcCurve), StartParam: IfcParameterValue | null, EndParam: IfcParameterValue | null, ReferenceSurface: (Handle<IfcSurface> | IfcSurface));\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    StartParam: IfcParameterValue | null;\r\n    EndParam: IfcParameterValue | null;\r\n    ReferenceSurface: (Handle<IfcSurface> | IfcSurface);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceCurveSweptAreaSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceFeature {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSurfaceFeatureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSurfaceFeatureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceFeature;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceOfLinearExtrusion {\r\n    constructor(expressID: number, type: number, SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IfcDirection> | IfcDirection), Depth: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    ExtrudedDirection: (Handle<IfcDirection> | IfcDirection);\r\n    Depth: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfLinearExtrusion;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceOfRevolution {\r\n    constructor(expressID: number, type: number, SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null, AxisPosition: (Handle<IfcAxis1Placement> | IfcAxis1Placement));\r\n    expressID: number;\r\n    type: number;\r\n    SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    AxisPosition: (Handle<IfcAxis1Placement> | IfcAxis1Placement);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfRevolution;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceReinforcementArea {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, SurfaceReinforcement1: IfcLengthMeasure[] | null, SurfaceReinforcement2: IfcLengthMeasure[] | null, ShearReinforcement: IfcRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    SurfaceReinforcement1: IfcLengthMeasure[] | null;\r\n    SurfaceReinforcement2: IfcLengthMeasure[] | null;\r\n    ShearReinforcement: IfcRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceReinforcementArea;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Side: IfcSurfaceSide, Styles: IfcSurfaceStyleElementSelect[]);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Side: IfcSurfaceSide;\r\n    Styles: IfcSurfaceStyleElementSelect[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyleLighting {\r\n    constructor(expressID: number, type: number, DiffuseTransmissionColour: (Handle<IfcColourRgb> | IfcColourRgb), DiffuseReflectionColour: (Handle<IfcColourRgb> | IfcColourRgb), TransmissionColour: (Handle<IfcColourRgb> | IfcColourRgb), ReflectanceColour: (Handle<IfcColourRgb> | IfcColourRgb));\r\n    expressID: number;\r\n    type: number;\r\n    DiffuseTransmissionColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    DiffuseReflectionColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    TransmissionColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    ReflectanceColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleLighting;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyleRefraction {\r\n    constructor(expressID: number, type: number, RefractionIndex: IfcReal | null, DispersionFactor: IfcReal | null);\r\n    expressID: number;\r\n    type: number;\r\n    RefractionIndex: IfcReal | null;\r\n    DispersionFactor: IfcReal | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRefraction;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyleRendering {\r\n    constructor(expressID: number, type: number, SurfaceColour: (Handle<IfcColourRgb> | IfcColourRgb), Transparency: IfcNormalisedRatioMeasure | null, DiffuseColour: IfcColourOrFactor | null, TransmissionColour: IfcColourOrFactor | null, DiffuseTransmissionColour: IfcColourOrFactor | null, ReflectionColour: IfcColourOrFactor | null, SpecularColour: IfcColourOrFactor | null, SpecularHighlight: IfcSpecularHighlightSelect | null, ReflectanceMethod: IfcReflectanceMethodEnum);\r\n    expressID: number;\r\n    type: number;\r\n    SurfaceColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    Transparency: IfcNormalisedRatioMeasure | null;\r\n    DiffuseColour: IfcColourOrFactor | null;\r\n    TransmissionColour: IfcColourOrFactor | null;\r\n    DiffuseTransmissionColour: IfcColourOrFactor | null;\r\n    ReflectionColour: IfcColourOrFactor | null;\r\n    SpecularColour: IfcColourOrFactor | null;\r\n    SpecularHighlight: IfcSpecularHighlightSelect | null;\r\n    ReflectanceMethod: IfcReflectanceMethodEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRendering;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyleShading {\r\n    constructor(expressID: number, type: number, SurfaceColour: (Handle<IfcColourRgb> | IfcColourRgb), Transparency: IfcNormalisedRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    SurfaceColour: (Handle<IfcColourRgb> | IfcColourRgb);\r\n    Transparency: IfcNormalisedRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleShading;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceStyleWithTextures {\r\n    constructor(expressID: number, type: number, Textures: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Textures: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleWithTextures;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSurfaceTexture {\r\n    constructor(expressID: number, type: number, RepeatS: IfcBoolean, RepeatT: IfcBoolean, Mode: IfcIdentifier | null, TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null, Parameter: IfcIdentifier[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    RepeatS: IfcBoolean;\r\n    RepeatT: IfcBoolean;\r\n    Mode: IfcIdentifier | null;\r\n    TextureTransform: (Handle<IfcCartesianTransformationOperator2D> | IfcCartesianTransformationOperator2D) | null;\r\n    Parameter: IfcIdentifier[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceTexture;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSweptAreaSolid {\r\n    constructor(expressID: number, type: number, SweptArea: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    SweptArea: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSweptAreaSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSweptDiskSolid {\r\n    constructor(expressID: number, type: number, Directrix: (Handle<IfcCurve> | IfcCurve), Radius: IfcPositiveLengthMeasure, InnerRadius: IfcPositiveLengthMeasure | null, StartParam: IfcParameterValue | null, EndParam: IfcParameterValue | null);\r\n    expressID: number;\r\n    type: number;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    InnerRadius: IfcPositiveLengthMeasure | null;\r\n    StartParam: IfcParameterValue | null;\r\n    EndParam: IfcParameterValue | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSweptDiskSolid;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSweptDiskSolidPolygonal {\r\n    constructor(expressID: number, type: number, Directrix: (Handle<IfcCurve> | IfcCurve), Radius: IfcPositiveLengthMeasure, InnerRadius: IfcPositiveLengthMeasure | null, StartParam: IfcParameterValue | null, EndParam: IfcParameterValue | null, FilletRadius: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Directrix: (Handle<IfcCurve> | IfcCurve);\r\n    Radius: IfcPositiveLengthMeasure;\r\n    InnerRadius: IfcPositiveLengthMeasure | null;\r\n    StartParam: IfcParameterValue | null;\r\n    EndParam: IfcParameterValue | null;\r\n    FilletRadius: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSweptDiskSolidPolygonal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSweptSurface {\r\n    constructor(expressID: number, type: number, SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef), Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null);\r\n    expressID: number;\r\n    type: number;\r\n    SweptCurve: (Handle<IfcProfileDef> | IfcProfileDef);\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSweptSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSwitchingDevice {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSwitchingDeviceTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSwitchingDeviceTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSwitchingDevice;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSwitchingDeviceType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSwitchingDeviceTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSwitchingDeviceTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSwitchingDeviceType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSystem {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSystem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSystemFurnitureElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcSystemFurnitureElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcSystemFurnitureElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSystemFurnitureElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcSystemFurnitureElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcSystemFurnitureElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcSystemFurnitureElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcSystemFurnitureElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Depth: IfcPositiveLengthMeasure, FlangeWidth: IfcPositiveLengthMeasure, WebThickness: IfcPositiveLengthMeasure, FlangeThickness: IfcPositiveLengthMeasure, FilletRadius: IfcNonNegativeLengthMeasure | null, FlangeEdgeRadius: IfcNonNegativeLengthMeasure | null, WebEdgeRadius: IfcNonNegativeLengthMeasure | null, WebSlope: IfcPlaneAngleMeasure | null, FlangeSlope: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Depth: IfcPositiveLengthMeasure;\r\n    FlangeWidth: IfcPositiveLengthMeasure;\r\n    WebThickness: IfcPositiveLengthMeasure;\r\n    FlangeThickness: IfcPositiveLengthMeasure;\r\n    FilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    FlangeEdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    WebEdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    WebSlope: IfcPlaneAngleMeasure | null;\r\n    FlangeSlope: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTable {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, Rows: (Handle<IfcTableRow> | IfcTableRow)[] | null, Columns: (Handle<IfcTableColumn> | IfcTableColumn)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    Rows: (Handle<IfcTableRow> | IfcTableRow)[] | null;\r\n    Columns: (Handle<IfcTableColumn> | IfcTableColumn)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTable;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTableColumn {\r\n    constructor(expressID: number, type: number, Identifier: IfcIdentifier | null, Name: IfcLabel | null, Description: IfcText | null, Unit: IfcUnit | null, ReferencePath: (Handle<IfcReference> | IfcReference) | null);\r\n    expressID: number;\r\n    type: number;\r\n    Identifier: IfcIdentifier | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    Unit: IfcUnit | null;\r\n    ReferencePath: (Handle<IfcReference> | IfcReference) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTableColumn;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTableRow {\r\n    constructor(expressID: number, type: number, RowCells: IfcValue[] | null, IsHeading: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    RowCells: IfcValue[] | null;\r\n    IsHeading: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTableRow;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTank {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcTankTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcTankTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTank;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTankType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTankTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTankTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTankType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTask {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, Status: IfcLabel | null, WorkMethod: IfcLabel | null, IsMilestone: IfcBoolean, Priority: IfcInteger | null, TaskTime: (Handle<IfcTaskTime> | IfcTaskTime) | null, PredefinedType: IfcTaskTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    Status: IfcLabel | null;\r\n    WorkMethod: IfcLabel | null;\r\n    IsMilestone: IfcBoolean;\r\n    Priority: IfcInteger | null;\r\n    TaskTime: (Handle<IfcTaskTime> | IfcTaskTime) | null;\r\n    PredefinedType: IfcTaskTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTask;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTaskTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, DurationType: IfcTaskDurationEnum | null, ScheduleDuration: IfcDuration | null, ScheduleStart: IfcDateTime | null, ScheduleFinish: IfcDateTime | null, EarlyStart: IfcDateTime | null, EarlyFinish: IfcDateTime | null, LateStart: IfcDateTime | null, LateFinish: IfcDateTime | null, FreeFloat: IfcDuration | null, TotalFloat: IfcDuration | null, IsCritical: IfcBoolean | null, StatusTime: IfcDateTime | null, ActualDuration: IfcDuration | null, ActualStart: IfcDateTime | null, ActualFinish: IfcDateTime | null, RemainingTime: IfcDuration | null, Completion: IfcPositiveRatioMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    DurationType: IfcTaskDurationEnum | null;\r\n    ScheduleDuration: IfcDuration | null;\r\n    ScheduleStart: IfcDateTime | null;\r\n    ScheduleFinish: IfcDateTime | null;\r\n    EarlyStart: IfcDateTime | null;\r\n    EarlyFinish: IfcDateTime | null;\r\n    LateStart: IfcDateTime | null;\r\n    LateFinish: IfcDateTime | null;\r\n    FreeFloat: IfcDuration | null;\r\n    TotalFloat: IfcDuration | null;\r\n    IsCritical: IfcBoolean | null;\r\n    StatusTime: IfcDateTime | null;\r\n    ActualDuration: IfcDuration | null;\r\n    ActualStart: IfcDateTime | null;\r\n    ActualFinish: IfcDateTime | null;\r\n    RemainingTime: IfcDuration | null;\r\n    Completion: IfcPositiveRatioMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTaskTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTaskTimeRecurring {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, DurationType: IfcTaskDurationEnum | null, ScheduleDuration: IfcDuration | null, ScheduleStart: IfcDateTime | null, ScheduleFinish: IfcDateTime | null, EarlyStart: IfcDateTime | null, EarlyFinish: IfcDateTime | null, LateStart: IfcDateTime | null, LateFinish: IfcDateTime | null, FreeFloat: IfcDuration | null, TotalFloat: IfcDuration | null, IsCritical: IfcBoolean | null, StatusTime: IfcDateTime | null, ActualDuration: IfcDuration | null, ActualStart: IfcDateTime | null, ActualFinish: IfcDateTime | null, RemainingTime: IfcDuration | null, Completion: IfcPositiveRatioMeasure | null, Recurrence: (Handle<IfcRecurrencePattern> | IfcRecurrencePattern));\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    DurationType: IfcTaskDurationEnum | null;\r\n    ScheduleDuration: IfcDuration | null;\r\n    ScheduleStart: IfcDateTime | null;\r\n    ScheduleFinish: IfcDateTime | null;\r\n    EarlyStart: IfcDateTime | null;\r\n    EarlyFinish: IfcDateTime | null;\r\n    LateStart: IfcDateTime | null;\r\n    LateFinish: IfcDateTime | null;\r\n    FreeFloat: IfcDuration | null;\r\n    TotalFloat: IfcDuration | null;\r\n    IsCritical: IfcBoolean | null;\r\n    StatusTime: IfcDateTime | null;\r\n    ActualDuration: IfcDuration | null;\r\n    ActualStart: IfcDateTime | null;\r\n    ActualFinish: IfcDateTime | null;\r\n    RemainingTime: IfcDuration | null;\r\n    Completion: IfcPositiveRatioMeasure | null;\r\n    Recurrence: (Handle<IfcRecurrencePattern> | IfcRecurrencePattern);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTaskTimeRecurring;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTaskType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ProcessType: IfcLabel | null, PredefinedType: IfcTaskTypeEnum, WorkMethod: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ProcessType: IfcLabel | null;\r\n    PredefinedType: IfcTaskTypeEnum;\r\n    WorkMethod: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTaskType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTelecomAddress {\r\n    constructor(expressID: number, type: number, Purpose: IfcAddressTypeEnum | null, Description: IfcText | null, UserDefinedPurpose: IfcLabel | null, TelephoneNumbers: IfcLabel[] | null, FacsimileNumbers: IfcLabel[] | null, PagerNumber: IfcLabel | null, ElectronicMailAddresses: IfcLabel[] | null, WWWHomePageURL: IfcURIReference | null, MessagingIDs: IfcURIReference[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Purpose: IfcAddressTypeEnum | null;\r\n    Description: IfcText | null;\r\n    UserDefinedPurpose: IfcLabel | null;\r\n    TelephoneNumbers: IfcLabel[] | null;\r\n    FacsimileNumbers: IfcLabel[] | null;\r\n    PagerNumber: IfcLabel | null;\r\n    ElectronicMailAddresses: IfcLabel[] | null;\r\n    WWWHomePageURL: IfcURIReference | null;\r\n    MessagingIDs: IfcURIReference[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTelecomAddress;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendon {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null, PredefinedType: IfcTendonTypeEnum | null, NominalDiameter: IfcPositiveLengthMeasure | null, CrossSectionArea: IfcAreaMeasure | null, TensionForce: IfcForceMeasure | null, PreStress: IfcPressureMeasure | null, FrictionCoefficient: IfcNormalisedRatioMeasure | null, AnchorageSlip: IfcPositiveLengthMeasure | null, MinCurvatureRadius: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    PredefinedType: IfcTendonTypeEnum | null;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    CrossSectionArea: IfcAreaMeasure | null;\r\n    TensionForce: IfcForceMeasure | null;\r\n    PreStress: IfcPressureMeasure | null;\r\n    FrictionCoefficient: IfcNormalisedRatioMeasure | null;\r\n    AnchorageSlip: IfcPositiveLengthMeasure | null;\r\n    MinCurvatureRadius: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendon;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendonAnchor {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null, PredefinedType: IfcTendonAnchorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    PredefinedType: IfcTendonAnchorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendonAnchor;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendonAnchorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTendonAnchorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTendonAnchorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendonAnchorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendonConduit {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, SteelGrade: IfcLabel | null, PredefinedType: IfcTendonConduitTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    SteelGrade: IfcLabel | null;\r\n    PredefinedType: IfcTendonConduitTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendonConduit;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendonConduitType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTendonConduitTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTendonConduitTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendonConduitType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTendonType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTendonTypeEnum, NominalDiameter: IfcPositiveLengthMeasure | null, CrossSectionArea: IfcAreaMeasure | null, SheathDiameter: IfcPositiveLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTendonTypeEnum;\r\n    NominalDiameter: IfcPositiveLengthMeasure | null;\r\n    CrossSectionArea: IfcAreaMeasure | null;\r\n    SheathDiameter: IfcPositiveLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTendonType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTessellatedFaceSet {\r\n    constructor(expressID: number, type: number, Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D));\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTessellatedFaceSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTessellatedItem {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTessellatedItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextLiteral {\r\n    constructor(expressID: number, type: number, Literal: IfcPresentableText, Placement: IfcAxis2Placement, Path: IfcTextPath);\r\n    expressID: number;\r\n    type: number;\r\n    Literal: IfcPresentableText;\r\n    Placement: IfcAxis2Placement;\r\n    Path: IfcTextPath;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteral;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextLiteralWithExtent {\r\n    constructor(expressID: number, type: number, Literal: IfcPresentableText, Placement: IfcAxis2Placement, Path: IfcTextPath, Extent: (Handle<IfcPlanarExtent> | IfcPlanarExtent), BoxAlignment: IfcBoxAlignment);\r\n    expressID: number;\r\n    type: number;\r\n    Literal: IfcPresentableText;\r\n    Placement: IfcAxis2Placement;\r\n    Path: IfcTextPath;\r\n    Extent: (Handle<IfcPlanarExtent> | IfcPlanarExtent);\r\n    BoxAlignment: IfcBoxAlignment;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteralWithExtent;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextStyle {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, TextCharacterAppearance: (Handle<IfcTextStyleForDefinedFont> | IfcTextStyleForDefinedFont) | null, TextStyle: (Handle<IfcTextStyleTextModel> | IfcTextStyleTextModel) | null, TextFontStyle: IfcTextFontSelect, ModelOrDraughting: IfcBoolean | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    TextCharacterAppearance: (Handle<IfcTextStyleForDefinedFont> | IfcTextStyleForDefinedFont) | null;\r\n    TextStyle: (Handle<IfcTextStyleTextModel> | IfcTextStyleTextModel) | null;\r\n    TextFontStyle: IfcTextFontSelect;\r\n    ModelOrDraughting: IfcBoolean | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextStyleFontModel {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, FontFamily: IfcTextFontName[], FontStyle: IfcFontStyle | null, FontVariant: IfcFontVariant | null, FontWeight: IfcFontWeight | null, FontSize: IfcSizeSelect);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    FontFamily: IfcTextFontName[];\r\n    FontStyle: IfcFontStyle | null;\r\n    FontVariant: IfcFontVariant | null;\r\n    FontWeight: IfcFontWeight | null;\r\n    FontSize: IfcSizeSelect;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleFontModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextStyleForDefinedFont {\r\n    constructor(expressID: number, type: number, Colour: IfcColour, BackgroundColour: IfcColour | null);\r\n    expressID: number;\r\n    type: number;\r\n    Colour: IfcColour;\r\n    BackgroundColour: IfcColour | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleForDefinedFont;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextStyleTextModel {\r\n    constructor(expressID: number, type: number, TextIndent: IfcSizeSelect | null, TextAlign: IfcTextAlignment | null, TextDecoration: IfcTextDecoration | null, LetterSpacing: IfcSizeSelect | null, WordSpacing: IfcSizeSelect | null, TextTransform: IfcTextTransformation | null, LineHeight: IfcSizeSelect | null);\r\n    expressID: number;\r\n    type: number;\r\n    TextIndent: IfcSizeSelect | null;\r\n    TextAlign: IfcTextAlignment | null;\r\n    TextDecoration: IfcTextDecoration | null;\r\n    LetterSpacing: IfcSizeSelect | null;\r\n    WordSpacing: IfcSizeSelect | null;\r\n    TextTransform: IfcTextTransformation | null;\r\n    LineHeight: IfcSizeSelect | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleTextModel;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextureCoordinate {\r\n    constructor(expressID: number, type: number, Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[]);\r\n    expressID: number;\r\n    type: number;\r\n    Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinate;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextureCoordinateGenerator {\r\n    constructor(expressID: number, type: number, Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[], Mode: IfcLabel, Parameter: IfcReal[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    Mode: IfcLabel;\r\n    Parameter: IfcReal[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinateGenerator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextureMap {\r\n    constructor(expressID: number, type: number, Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[], Vertices: (Handle<IfcTextureVertex> | IfcTextureVertex)[], MappedTo: (Handle<IfcFace> | IfcFace));\r\n    expressID: number;\r\n    type: number;\r\n    Maps: (Handle<IfcSurfaceTexture> | IfcSurfaceTexture)[];\r\n    Vertices: (Handle<IfcTextureVertex> | IfcTextureVertex)[];\r\n    MappedTo: (Handle<IfcFace> | IfcFace);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextureMap;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextureVertex {\r\n    constructor(expressID: number, type: number, Coordinates: IfcParameterValue[]);\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: IfcParameterValue[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextureVertex;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTextureVertexList {\r\n    constructor(expressID: number, type: number, TexCoordsList: IfcParameterValue[]);\r\n    expressID: number;\r\n    type: number;\r\n    TexCoordsList: IfcParameterValue[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTextureVertexList;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTimePeriod {\r\n    constructor(expressID: number, type: number, StartTime: IfcTime, EndTime: IfcTime);\r\n    expressID: number;\r\n    type: number;\r\n    StartTime: IfcTime;\r\n    EndTime: IfcTime;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTimePeriod;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTimeSeries {\r\n    constructor(expressID: number, type: number, Name: IfcLabel, Description: IfcText | null, StartTime: IfcDateTime, EndTime: IfcDateTime, TimeSeriesDataType: IfcTimeSeriesDataTypeEnum, DataOrigin: IfcDataOriginEnum, UserDefinedDataOrigin: IfcLabel | null, Unit: IfcUnit | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel;\r\n    Description: IfcText | null;\r\n    StartTime: IfcDateTime;\r\n    EndTime: IfcDateTime;\r\n    TimeSeriesDataType: IfcTimeSeriesDataTypeEnum;\r\n    DataOrigin: IfcDataOriginEnum;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    Unit: IfcUnit | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeries;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTimeSeriesValue {\r\n    constructor(expressID: number, type: number, ListValues: IfcValue[]);\r\n    expressID: number;\r\n    type: number;\r\n    ListValues: IfcValue[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeriesValue;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTopologicalRepresentationItem {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTopologicalRepresentationItem;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTopologyRepresentation {\r\n    constructor(expressID: number, type: number, ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext), RepresentationIdentifier: IfcLabel | null, RepresentationType: IfcLabel | null, Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[]);\r\n    expressID: number;\r\n    type: number;\r\n    ContextOfItems: (Handle<IfcRepresentationContext> | IfcRepresentationContext);\r\n    RepresentationIdentifier: IfcLabel | null;\r\n    RepresentationType: IfcLabel | null;\r\n    Items: (Handle<IfcRepresentationItem> | IfcRepresentationItem)[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTopologyRepresentation;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcToroidalSurface {\r\n    constructor(expressID: number, type: number, Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D), MajorRadius: IfcPositiveLengthMeasure, MinorRadius: IfcPositiveLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Position: (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\r\n    MajorRadius: IfcPositiveLengthMeasure;\r\n    MinorRadius: IfcPositiveLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcToroidalSurface;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTransformer {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcTransformerTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcTransformerTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTransformer;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTransformerType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTransformerTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTransformerTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTransformerType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTransitionCurveSegment2D {\r\n    constructor(expressID: number, type: number, StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint), StartDirection: IfcPlaneAngleMeasure, SegmentLength: IfcPositiveLengthMeasure, StartRadius: IfcPositiveLengthMeasure | null, EndRadius: IfcPositiveLengthMeasure | null, IsStartRadiusCCW: IfcBoolean, IsEndRadiusCCW: IfcBoolean, TransitionCurveType: IfcTransitionCurveType);\r\n    expressID: number;\r\n    type: number;\r\n    StartPoint: (Handle<IfcCartesianPoint> | IfcCartesianPoint);\r\n    StartDirection: IfcPlaneAngleMeasure;\r\n    SegmentLength: IfcPositiveLengthMeasure;\r\n    StartRadius: IfcPositiveLengthMeasure | null;\r\n    EndRadius: IfcPositiveLengthMeasure | null;\r\n    IsStartRadiusCCW: IfcBoolean;\r\n    IsEndRadiusCCW: IfcBoolean;\r\n    TransitionCurveType: IfcTransitionCurveType;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTransitionCurveSegment2D;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTransportElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcTransportElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcTransportElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTransportElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTransportElementTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTransportElementTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTrapeziumProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, BottomXDim: IfcPositiveLengthMeasure, TopXDim: IfcPositiveLengthMeasure, YDim: IfcPositiveLengthMeasure, TopXOffset: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    BottomXDim: IfcPositiveLengthMeasure;\r\n    TopXDim: IfcPositiveLengthMeasure;\r\n    YDim: IfcPositiveLengthMeasure;\r\n    TopXOffset: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTrapeziumProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTriangulatedFaceSet {\r\n    constructor(expressID: number, type: number, Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D), Normals: IfcParameterValue[] | null, Closed: IfcBoolean | null, CoordIndex: IfcPositiveInteger[], PnIndex: IfcPositiveInteger[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D);\r\n    Normals: IfcParameterValue[] | null;\r\n    Closed: IfcBoolean | null;\r\n    CoordIndex: IfcPositiveInteger[];\r\n    PnIndex: IfcPositiveInteger[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTriangulatedFaceSet;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTriangulatedIrregularNetwork {\r\n    constructor(expressID: number, type: number, Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D), Normals: IfcParameterValue[] | null, Closed: IfcBoolean | null, CoordIndex: IfcPositiveInteger[], PnIndex: IfcPositiveInteger[] | null, Flags: IfcInteger[]);\r\n    expressID: number;\r\n    type: number;\r\n    Coordinates: (Handle<IfcCartesianPointList3D> | IfcCartesianPointList3D);\r\n    Normals: IfcParameterValue[] | null;\r\n    Closed: IfcBoolean | null;\r\n    CoordIndex: IfcPositiveInteger[];\r\n    PnIndex: IfcPositiveInteger[] | null;\r\n    Flags: IfcInteger[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTriangulatedIrregularNetwork;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTrimmedCurve {\r\n    constructor(expressID: number, type: number, BasisCurve: (Handle<IfcCurve> | IfcCurve), Trim1: IfcTrimmingSelect[], Trim2: IfcTrimmingSelect[], SenseAgreement: IfcBoolean, MasterRepresentation: IfcTrimmingPreference);\r\n    expressID: number;\r\n    type: number;\r\n    BasisCurve: (Handle<IfcCurve> | IfcCurve);\r\n    Trim1: IfcTrimmingSelect[];\r\n    Trim2: IfcTrimmingSelect[];\r\n    SenseAgreement: IfcBoolean;\r\n    MasterRepresentation: IfcTrimmingPreference;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTrimmedCurve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTubeBundle {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcTubeBundleTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcTubeBundleTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTubeBundle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTubeBundleType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcTubeBundleTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcTubeBundleTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTubeBundleType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTypeObject {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTypeObject;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTypeProcess {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ProcessType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ProcessType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTypeProcess;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTypeProduct {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTypeProduct;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcTypeResource {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, Identification: IfcIdentifier | null, LongDescription: IfcText | null, ResourceType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    Identification: IfcIdentifier | null;\r\n    LongDescription: IfcText | null;\r\n    ResourceType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcTypeResource;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Depth: IfcPositiveLengthMeasure, FlangeWidth: IfcPositiveLengthMeasure, WebThickness: IfcPositiveLengthMeasure, FlangeThickness: IfcPositiveLengthMeasure, FilletRadius: IfcNonNegativeLengthMeasure | null, EdgeRadius: IfcNonNegativeLengthMeasure | null, FlangeSlope: IfcPlaneAngleMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Depth: IfcPositiveLengthMeasure;\r\n    FlangeWidth: IfcPositiveLengthMeasure;\r\n    WebThickness: IfcPositiveLengthMeasure;\r\n    FlangeThickness: IfcPositiveLengthMeasure;\r\n    FilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    EdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    FlangeSlope: IfcPlaneAngleMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUnitAssignment {\r\n    constructor(expressID: number, type: number, Units: IfcUnit[]);\r\n    expressID: number;\r\n    type: number;\r\n    Units: IfcUnit[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUnitAssignment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUnitaryControlElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcUnitaryControlElementTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcUnitaryControlElementTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryControlElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUnitaryControlElementType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcUnitaryControlElementTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcUnitaryControlElementTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryControlElementType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUnitaryEquipment {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcUnitaryEquipmentTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcUnitaryEquipmentTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryEquipment;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcUnitaryEquipmentType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcUnitaryEquipmentTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcUnitaryEquipmentTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryEquipmentType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcValve {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcValveTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcValveTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcValve;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcValveType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcValveTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcValveTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcValveType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVector {\r\n    constructor(expressID: number, type: number, Orientation: (Handle<IfcDirection> | IfcDirection), Magnitude: IfcLengthMeasure);\r\n    expressID: number;\r\n    type: number;\r\n    Orientation: (Handle<IfcDirection> | IfcDirection);\r\n    Magnitude: IfcLengthMeasure;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVector;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVertex {\r\n    constructor(expressID: number, type: number);\r\n    expressID: number;\r\n    type: number;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVertex;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVertexLoop {\r\n    constructor(expressID: number, type: number, LoopVertex: (Handle<IfcVertex> | IfcVertex));\r\n    expressID: number;\r\n    type: number;\r\n    LoopVertex: (Handle<IfcVertex> | IfcVertex);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVertexLoop;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVertexPoint {\r\n    constructor(expressID: number, type: number, VertexGeometry: (Handle<IfcPoint> | IfcPoint));\r\n    expressID: number;\r\n    type: number;\r\n    VertexGeometry: (Handle<IfcPoint> | IfcPoint);\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVertexPoint;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVibrationDamper {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcVibrationDamperTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcVibrationDamperTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationDamper;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVibrationDamperType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcVibrationDamperTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcVibrationDamperTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationDamperType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVibrationIsolator {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcVibrationIsolatorTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcVibrationIsolatorTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationIsolator;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVibrationIsolatorType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcVibrationIsolatorTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcVibrationIsolatorTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationIsolatorType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVirtualElement {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualElement;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVirtualGridIntersection {\r\n    constructor(expressID: number, type: number, IntersectingAxes: (Handle<IfcGridAxis> | IfcGridAxis)[], OffsetDistances: IfcLengthMeasure[]);\r\n    expressID: number;\r\n    type: number;\r\n    IntersectingAxes: (Handle<IfcGridAxis> | IfcGridAxis)[];\r\n    OffsetDistances: IfcLengthMeasure[];\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualGridIntersection;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcVoidingFeature {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcVoidingFeatureTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcVoidingFeatureTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcVoidingFeature;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWall {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcWallTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcWallTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWall;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWallElementedCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcWallTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcWallTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWallElementedCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWallStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcWallTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcWallTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWallStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWallType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcWallTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcWallTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWallType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWasteTerminal {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, PredefinedType: IfcWasteTerminalTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    PredefinedType: IfcWasteTerminalTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWasteTerminal;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWasteTerminalType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcWasteTerminalTypeEnum);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcWasteTerminalTypeEnum;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWasteTerminalType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindow {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, OverallHeight: IfcPositiveLengthMeasure | null, OverallWidth: IfcPositiveLengthMeasure | null, PredefinedType: IfcWindowTypeEnum | null, PartitioningType: IfcWindowTypePartitioningEnum | null, UserDefinedPartitioningType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    OverallHeight: IfcPositiveLengthMeasure | null;\r\n    OverallWidth: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcWindowTypeEnum | null;\r\n    PartitioningType: IfcWindowTypePartitioningEnum | null;\r\n    UserDefinedPartitioningType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindow;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindowLiningProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, LiningDepth: IfcPositiveLengthMeasure | null, LiningThickness: IfcNonNegativeLengthMeasure | null, TransomThickness: IfcNonNegativeLengthMeasure | null, MullionThickness: IfcNonNegativeLengthMeasure | null, FirstTransomOffset: IfcNormalisedRatioMeasure | null, SecondTransomOffset: IfcNormalisedRatioMeasure | null, FirstMullionOffset: IfcNormalisedRatioMeasure | null, SecondMullionOffset: IfcNormalisedRatioMeasure | null, ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null, LiningOffset: IfcLengthMeasure | null, LiningToPanelOffsetX: IfcLengthMeasure | null, LiningToPanelOffsetY: IfcLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    LiningDepth: IfcPositiveLengthMeasure | null;\r\n    LiningThickness: IfcNonNegativeLengthMeasure | null;\r\n    TransomThickness: IfcNonNegativeLengthMeasure | null;\r\n    MullionThickness: IfcNonNegativeLengthMeasure | null;\r\n    FirstTransomOffset: IfcNormalisedRatioMeasure | null;\r\n    SecondTransomOffset: IfcNormalisedRatioMeasure | null;\r\n    FirstMullionOffset: IfcNormalisedRatioMeasure | null;\r\n    SecondMullionOffset: IfcNormalisedRatioMeasure | null;\r\n    ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null;\r\n    LiningOffset: IfcLengthMeasure | null;\r\n    LiningToPanelOffsetX: IfcLengthMeasure | null;\r\n    LiningToPanelOffsetY: IfcLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindowLiningProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindowPanelProperties {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, OperationType: IfcWindowPanelOperationEnum, PanelPosition: IfcWindowPanelPositionEnum, FrameDepth: IfcPositiveLengthMeasure | null, FrameThickness: IfcPositiveLengthMeasure | null, ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    OperationType: IfcWindowPanelOperationEnum;\r\n    PanelPosition: IfcWindowPanelPositionEnum;\r\n    FrameDepth: IfcPositiveLengthMeasure | null;\r\n    FrameThickness: IfcPositiveLengthMeasure | null;\r\n    ShapeAspectStyle: (Handle<IfcShapeAspect> | IfcShapeAspect) | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindowPanelProperties;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindowStandardCase {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null, Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null, Tag: IfcIdentifier | null, OverallHeight: IfcPositiveLengthMeasure | null, OverallWidth: IfcPositiveLengthMeasure | null, PredefinedType: IfcWindowTypeEnum | null, PartitioningType: IfcWindowTypePartitioningEnum | null, UserDefinedPartitioningType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    ObjectPlacement: (Handle<IfcObjectPlacement> | IfcObjectPlacement) | null;\r\n    Representation: (Handle<IfcProductRepresentation> | IfcProductRepresentation) | null;\r\n    Tag: IfcIdentifier | null;\r\n    OverallHeight: IfcPositiveLengthMeasure | null;\r\n    OverallWidth: IfcPositiveLengthMeasure | null;\r\n    PredefinedType: IfcWindowTypeEnum | null;\r\n    PartitioningType: IfcWindowTypePartitioningEnum | null;\r\n    UserDefinedPartitioningType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindowStandardCase;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindowStyle {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ConstructionType: IfcWindowStyleConstructionEnum, OperationType: IfcWindowStyleOperationEnum, ParameterTakesPrecedence: IfcBoolean, Sizeable: IfcBoolean);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ConstructionType: IfcWindowStyleConstructionEnum;\r\n    OperationType: IfcWindowStyleOperationEnum;\r\n    ParameterTakesPrecedence: IfcBoolean;\r\n    Sizeable: IfcBoolean;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindowStyle;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWindowType {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ApplicableOccurrence: IfcIdentifier | null, HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null, Tag: IfcLabel | null, ElementType: IfcLabel | null, PredefinedType: IfcWindowTypeEnum, PartitioningType: IfcWindowTypePartitioningEnum, ParameterTakesPrecedence: IfcBoolean | null, UserDefinedPartitioningType: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ApplicableOccurrence: IfcIdentifier | null;\r\n    HasPropertySets: (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition)[] | null;\r\n    RepresentationMaps: (Handle<IfcRepresentationMap> | IfcRepresentationMap)[] | null;\r\n    Tag: IfcLabel | null;\r\n    ElementType: IfcLabel | null;\r\n    PredefinedType: IfcWindowTypeEnum;\r\n    PartitioningType: IfcWindowTypePartitioningEnum;\r\n    ParameterTakesPrecedence: IfcBoolean | null;\r\n    UserDefinedPartitioningType: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWindowType;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWorkCalendar {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, WorkingTimes: (Handle<IfcWorkTime> | IfcWorkTime)[] | null, ExceptionTimes: (Handle<IfcWorkTime> | IfcWorkTime)[] | null, PredefinedType: IfcWorkCalendarTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    WorkingTimes: (Handle<IfcWorkTime> | IfcWorkTime)[] | null;\r\n    ExceptionTimes: (Handle<IfcWorkTime> | IfcWorkTime)[] | null;\r\n    PredefinedType: IfcWorkCalendarTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWorkCalendar;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWorkControl {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, CreationDate: IfcDateTime, Creators: (Handle<IfcPerson> | IfcPerson)[] | null, Purpose: IfcLabel | null, Duration: IfcDuration | null, TotalFloat: IfcDuration | null, StartTime: IfcDateTime, FinishTime: IfcDateTime | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    CreationDate: IfcDateTime;\r\n    Creators: (Handle<IfcPerson> | IfcPerson)[] | null;\r\n    Purpose: IfcLabel | null;\r\n    Duration: IfcDuration | null;\r\n    TotalFloat: IfcDuration | null;\r\n    StartTime: IfcDateTime;\r\n    FinishTime: IfcDateTime | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWorkControl;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWorkPlan {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, CreationDate: IfcDateTime, Creators: (Handle<IfcPerson> | IfcPerson)[] | null, Purpose: IfcLabel | null, Duration: IfcDuration | null, TotalFloat: IfcDuration | null, StartTime: IfcDateTime, FinishTime: IfcDateTime | null, PredefinedType: IfcWorkPlanTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    CreationDate: IfcDateTime;\r\n    Creators: (Handle<IfcPerson> | IfcPerson)[] | null;\r\n    Purpose: IfcLabel | null;\r\n    Duration: IfcDuration | null;\r\n    TotalFloat: IfcDuration | null;\r\n    StartTime: IfcDateTime;\r\n    FinishTime: IfcDateTime | null;\r\n    PredefinedType: IfcWorkPlanTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWorkPlan;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWorkSchedule {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, Identification: IfcIdentifier | null, CreationDate: IfcDateTime, Creators: (Handle<IfcPerson> | IfcPerson)[] | null, Purpose: IfcLabel | null, Duration: IfcDuration | null, TotalFloat: IfcDuration | null, StartTime: IfcDateTime, FinishTime: IfcDateTime | null, PredefinedType: IfcWorkScheduleTypeEnum | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    Identification: IfcIdentifier | null;\r\n    CreationDate: IfcDateTime;\r\n    Creators: (Handle<IfcPerson> | IfcPerson)[] | null;\r\n    Purpose: IfcLabel | null;\r\n    Duration: IfcDuration | null;\r\n    TotalFloat: IfcDuration | null;\r\n    StartTime: IfcDateTime;\r\n    FinishTime: IfcDateTime | null;\r\n    PredefinedType: IfcWorkScheduleTypeEnum | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWorkSchedule;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcWorkTime {\r\n    constructor(expressID: number, type: number, Name: IfcLabel | null, DataOrigin: IfcDataOriginEnum | null, UserDefinedDataOrigin: IfcLabel | null, RecurrencePattern: (Handle<IfcRecurrencePattern> | IfcRecurrencePattern) | null, Start: IfcDate | null, Finish: IfcDate | null);\r\n    expressID: number;\r\n    type: number;\r\n    Name: IfcLabel | null;\r\n    DataOrigin: IfcDataOriginEnum | null;\r\n    UserDefinedDataOrigin: IfcLabel | null;\r\n    RecurrencePattern: (Handle<IfcRecurrencePattern> | IfcRecurrencePattern) | null;\r\n    Start: IfcDate | null;\r\n    Finish: IfcDate | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcWorkTime;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcZShapeProfileDef {\r\n    constructor(expressID: number, type: number, ProfileType: IfcProfileTypeEnum, ProfileName: IfcLabel | null, Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null, Depth: IfcPositiveLengthMeasure, FlangeWidth: IfcPositiveLengthMeasure, WebThickness: IfcPositiveLengthMeasure, FlangeThickness: IfcPositiveLengthMeasure, FilletRadius: IfcNonNegativeLengthMeasure | null, EdgeRadius: IfcNonNegativeLengthMeasure | null);\r\n    expressID: number;\r\n    type: number;\r\n    ProfileType: IfcProfileTypeEnum;\r\n    ProfileName: IfcLabel | null;\r\n    Position: (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | null;\r\n    Depth: IfcPositiveLengthMeasure;\r\n    FlangeWidth: IfcPositiveLengthMeasure;\r\n    WebThickness: IfcPositiveLengthMeasure;\r\n    FlangeThickness: IfcPositiveLengthMeasure;\r\n    FilletRadius: IfcNonNegativeLengthMeasure | null;\r\n    EdgeRadius: IfcNonNegativeLengthMeasure | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcZShapeProfileDef;\r\n    ToTape(): any[];\r\n}\r\n declare class IfcZone {\r\n    constructor(expressID: number, type: number, GlobalId: IfcGloballyUniqueId, OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null, Name: IfcLabel | null, Description: IfcText | null, ObjectType: IfcLabel | null, LongName: IfcLabel | null);\r\n    expressID: number;\r\n    type: number;\r\n    GlobalId: IfcGloballyUniqueId;\r\n    OwnerHistory: (Handle<IfcOwnerHistory> | IfcOwnerHistory) | null;\r\n    Name: IfcLabel | null;\r\n    Description: IfcText | null;\r\n    ObjectType: IfcLabel | null;\r\n    LongName: IfcLabel | null;\r\n    static FromTape(expressID: number, type: number, tape: any[]): IfcZone;\r\n    ToTape(): any[];\r\n}\r\n";
    export let ifc2x4 = " declare const IFCACTIONREQUEST = 3821786052;\r\n declare const IFCACTOR = 2296667514;\r\n declare const IFCACTORROLE = 3630933823;\r\n declare const IFCACTUATOR = 4288193352;\r\n declare const IFCACTUATORTYPE = 2874132201;\r\n declare const IFCADDRESS = 618182010;\r\n declare const IFCADVANCEDBREP = 1635779807;\r\n declare const IFCADVANCEDBREPWITHVOIDS = 2603310189;\r\n declare const IFCADVANCEDFACE = 3406155212;\r\n declare const IFCAIRTERMINAL = 1634111441;\r\n declare const IFCAIRTERMINALBOX = 177149247;\r\n declare const IFCAIRTERMINALBOXTYPE = 1411407467;\r\n declare const IFCAIRTERMINALTYPE = 3352864051;\r\n declare const IFCAIRTOAIRHEATRECOVERY = 2056796094;\r\n declare const IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\r\n declare const IFCALARM = 3087945054;\r\n declare const IFCALARMTYPE = 3001207471;\r\n declare const IFCALIGNMENT = 325726236;\r\n declare const IFCALIGNMENT2DHORIZONTAL = 749761778;\r\n declare const IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\r\n declare const IFCALIGNMENT2DSEGMENT = 2483840362;\r\n declare const IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\r\n declare const IFCALIGNMENT2DVERSEGLINE = 3239324667;\r\n declare const IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\r\n declare const IFCALIGNMENT2DVERTICAL = 53199957;\r\n declare const IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\r\n declare const IFCALIGNMENTCURVE = 3512275521;\r\n declare const IFCANNOTATION = 1674181508;\r\n declare const IFCANNOTATIONFILLAREA = 669184980;\r\n declare const IFCAPPLICATION = 639542469;\r\n declare const IFCAPPLIEDVALUE = 411424972;\r\n declare const IFCAPPROVAL = 130549933;\r\n declare const IFCAPPROVALRELATIONSHIP = 3869604511;\r\n declare const IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\r\n declare const IFCARBITRARYOPENPROFILEDEF = 1310608509;\r\n declare const IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\r\n declare const IFCASSET = 3460190687;\r\n declare const IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\r\n declare const IFCAUDIOVISUALAPPLIANCE = 277319702;\r\n declare const IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\r\n declare const IFCAXIS1PLACEMENT = 4261334040;\r\n declare const IFCAXIS2PLACEMENT2D = 3125803723;\r\n declare const IFCAXIS2PLACEMENT3D = 2740243338;\r\n declare const IFCBSPLINECURVE = 1967976161;\r\n declare const IFCBSPLINECURVEWITHKNOTS = 2461110595;\r\n declare const IFCBSPLINESURFACE = 2887950389;\r\n declare const IFCBSPLINESURFACEWITHKNOTS = 167062518;\r\n declare const IFCBEAM = 753842376;\r\n declare const IFCBEAMSTANDARDCASE = 2906023776;\r\n declare const IFCBEAMTYPE = 819618141;\r\n declare const IFCBEARING = 4196446775;\r\n declare const IFCBEARINGTYPE = 3649138523;\r\n declare const IFCBLOBTEXTURE = 616511568;\r\n declare const IFCBLOCK = 1334484129;\r\n declare const IFCBOILER = 32344328;\r\n declare const IFCBOILERTYPE = 231477066;\r\n declare const IFCBOOLEANCLIPPINGRESULT = 3649129432;\r\n declare const IFCBOOLEANRESULT = 2736907675;\r\n declare const IFCBOUNDARYCONDITION = 4037036970;\r\n declare const IFCBOUNDARYCURVE = 1136057603;\r\n declare const IFCBOUNDARYEDGECONDITION = 1560379544;\r\n declare const IFCBOUNDARYFACECONDITION = 3367102660;\r\n declare const IFCBOUNDARYNODECONDITION = 1387855156;\r\n declare const IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\r\n declare const IFCBOUNDEDCURVE = 1260505505;\r\n declare const IFCBOUNDEDSURFACE = 4182860854;\r\n declare const IFCBOUNDINGBOX = 2581212453;\r\n declare const IFCBOXEDHALFSPACE = 2713105998;\r\n declare const IFCBRIDGE = 644574406;\r\n declare const IFCBRIDGEPART = 963979645;\r\n declare const IFCBUILDING = 4031249490;\r\n declare const IFCBUILDINGELEMENT = 3299480353;\r\n declare const IFCBUILDINGELEMENTPART = 2979338954;\r\n declare const IFCBUILDINGELEMENTPARTTYPE = 39481116;\r\n declare const IFCBUILDINGELEMENTPROXY = 1095909175;\r\n declare const IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\r\n declare const IFCBUILDINGELEMENTTYPE = 1950629157;\r\n declare const IFCBUILDINGSTOREY = 3124254112;\r\n declare const IFCBUILDINGSYSTEM = 1177604601;\r\n declare const IFCBURNER = 2938176219;\r\n declare const IFCBURNERTYPE = 2188180465;\r\n declare const IFCCSHAPEPROFILEDEF = 2898889636;\r\n declare const IFCCABLECARRIERFITTING = 635142910;\r\n declare const IFCCABLECARRIERFITTINGTYPE = 395041908;\r\n declare const IFCCABLECARRIERSEGMENT = 3758799889;\r\n declare const IFCCABLECARRIERSEGMENTTYPE = 3293546465;\r\n declare const IFCCABLEFITTING = 1051757585;\r\n declare const IFCCABLEFITTINGTYPE = 2674252688;\r\n declare const IFCCABLESEGMENT = 4217484030;\r\n declare const IFCCABLESEGMENTTYPE = 1285652485;\r\n declare const IFCCAISSONFOUNDATION = 3999819293;\r\n declare const IFCCAISSONFOUNDATIONTYPE = 3203706013;\r\n declare const IFCCARTESIANPOINT = 1123145078;\r\n declare const IFCCARTESIANPOINTLIST = 574549367;\r\n declare const IFCCARTESIANPOINTLIST2D = 1675464909;\r\n declare const IFCCARTESIANPOINTLIST3D = 2059837836;\r\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\r\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\r\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\r\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\r\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\r\n declare const IFCCENTERLINEPROFILEDEF = 3150382593;\r\n declare const IFCCHILLER = 3902619387;\r\n declare const IFCCHILLERTYPE = 2951183804;\r\n declare const IFCCHIMNEY = 3296154744;\r\n declare const IFCCHIMNEYTYPE = 2197970202;\r\n declare const IFCCIRCLE = 2611217952;\r\n declare const IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\r\n declare const IFCCIRCLEPROFILEDEF = 1383045692;\r\n declare const IFCCIRCULARARCSEGMENT2D = 1062206242;\r\n declare const IFCCIVILELEMENT = 1677625105;\r\n declare const IFCCIVILELEMENTTYPE = 3893394355;\r\n declare const IFCCLASSIFICATION = 747523909;\r\n declare const IFCCLASSIFICATIONREFERENCE = 647927063;\r\n declare const IFCCLOSEDSHELL = 2205249479;\r\n declare const IFCCOIL = 639361253;\r\n declare const IFCCOILTYPE = 2301859152;\r\n declare const IFCCOLOURRGB = 776857604;\r\n declare const IFCCOLOURRGBLIST = 3285139300;\r\n declare const IFCCOLOURSPECIFICATION = 3264961684;\r\n declare const IFCCOLUMN = 843113511;\r\n declare const IFCCOLUMNSTANDARDCASE = 905975707;\r\n declare const IFCCOLUMNTYPE = 300633059;\r\n declare const IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\r\n declare const IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\r\n declare const IFCCOMPLEXPROPERTY = 2542286263;\r\n declare const IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\r\n declare const IFCCOMPOSITECURVE = 3732776249;\r\n declare const IFCCOMPOSITECURVEONSURFACE = 15328376;\r\n declare const IFCCOMPOSITECURVESEGMENT = 2485617015;\r\n declare const IFCCOMPOSITEPROFILEDEF = 1485152156;\r\n declare const IFCCOMPRESSOR = 3571504051;\r\n declare const IFCCOMPRESSORTYPE = 3850581409;\r\n declare const IFCCONDENSER = 2272882330;\r\n declare const IFCCONDENSERTYPE = 2816379211;\r\n declare const IFCCONIC = 2510884976;\r\n declare const IFCCONNECTEDFACESET = 370225590;\r\n declare const IFCCONNECTIONCURVEGEOMETRY = 1981873012;\r\n declare const IFCCONNECTIONGEOMETRY = 2859738748;\r\n declare const IFCCONNECTIONPOINTECCENTRICITY = 45288368;\r\n declare const IFCCONNECTIONPOINTGEOMETRY = 2614616156;\r\n declare const IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\r\n declare const IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\r\n declare const IFCCONSTRAINT = 1959218052;\r\n declare const IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\r\n declare const IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\r\n declare const IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\r\n declare const IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\r\n declare const IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\r\n declare const IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\r\n declare const IFCCONSTRUCTIONRESOURCE = 2559216714;\r\n declare const IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\r\n declare const IFCCONTEXT = 3419103109;\r\n declare const IFCCONTEXTDEPENDENTUNIT = 3050246964;\r\n declare const IFCCONTROL = 3293443760;\r\n declare const IFCCONTROLLER = 25142252;\r\n declare const IFCCONTROLLERTYPE = 578613899;\r\n declare const IFCCONVERSIONBASEDUNIT = 2889183280;\r\n declare const IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\r\n declare const IFCCOOLEDBEAM = 4136498852;\r\n declare const IFCCOOLEDBEAMTYPE = 335055490;\r\n declare const IFCCOOLINGTOWER = 3640358203;\r\n declare const IFCCOOLINGTOWERTYPE = 2954562838;\r\n declare const IFCCOORDINATEOPERATION = 1785450214;\r\n declare const IFCCOORDINATEREFERENCESYSTEM = 1466758467;\r\n declare const IFCCOSTITEM = 3895139033;\r\n declare const IFCCOSTSCHEDULE = 1419761937;\r\n declare const IFCCOSTVALUE = 602808272;\r\n declare const IFCCOVERING = 1973544240;\r\n declare const IFCCOVERINGTYPE = 1916426348;\r\n declare const IFCCREWRESOURCE = 3295246426;\r\n declare const IFCCREWRESOURCETYPE = 1815067380;\r\n declare const IFCCSGPRIMITIVE3D = 2506170314;\r\n declare const IFCCSGSOLID = 2147822146;\r\n declare const IFCCURRENCYRELATIONSHIP = 539742890;\r\n declare const IFCCURTAINWALL = 3495092785;\r\n declare const IFCCURTAINWALLTYPE = 1457835157;\r\n declare const IFCCURVE = 2601014836;\r\n declare const IFCCURVEBOUNDEDPLANE = 2827736869;\r\n declare const IFCCURVEBOUNDEDSURFACE = 2629017746;\r\n declare const IFCCURVESEGMENT2D = 1186437898;\r\n declare const IFCCURVESTYLE = 3800577675;\r\n declare const IFCCURVESTYLEFONT = 1105321065;\r\n declare const IFCCURVESTYLEFONTANDSCALING = 2367409068;\r\n declare const IFCCURVESTYLEFONTPATTERN = 3510044353;\r\n declare const IFCCYLINDRICALSURFACE = 1213902940;\r\n declare const IFCDAMPER = 4074379575;\r\n declare const IFCDAMPERTYPE = 3961806047;\r\n declare const IFCDEEPFOUNDATION = 3426335179;\r\n declare const IFCDEEPFOUNDATIONTYPE = 1306400036;\r\n declare const IFCDERIVEDPROFILEDEF = 3632507154;\r\n declare const IFCDERIVEDUNIT = 1765591967;\r\n declare const IFCDERIVEDUNITELEMENT = 1045800335;\r\n declare const IFCDIMENSIONALEXPONENTS = 2949456006;\r\n declare const IFCDIRECTION = 32440307;\r\n declare const IFCDISCRETEACCESSORY = 1335981549;\r\n declare const IFCDISCRETEACCESSORYTYPE = 2635815018;\r\n declare const IFCDISTANCEEXPRESSION = 1945343521;\r\n declare const IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\r\n declare const IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\r\n declare const IFCDISTRIBUTIONCIRCUIT = 562808652;\r\n declare const IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\r\n declare const IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\r\n declare const IFCDISTRIBUTIONELEMENT = 1945004755;\r\n declare const IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\r\n declare const IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\r\n declare const IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\r\n declare const IFCDISTRIBUTIONPORT = 3041715199;\r\n declare const IFCDISTRIBUTIONSYSTEM = 3205830791;\r\n declare const IFCDOCUMENTINFORMATION = 1154170062;\r\n declare const IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\r\n declare const IFCDOCUMENTREFERENCE = 3732053477;\r\n declare const IFCDOOR = 395920057;\r\n declare const IFCDOORLININGPROPERTIES = 2963535650;\r\n declare const IFCDOORPANELPROPERTIES = 1714330368;\r\n declare const IFCDOORSTANDARDCASE = 3242481149;\r\n declare const IFCDOORSTYLE = 526551008;\r\n declare const IFCDOORTYPE = 2323601079;\r\n declare const IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\r\n declare const IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\r\n declare const IFCDUCTFITTING = 342316401;\r\n declare const IFCDUCTFITTINGTYPE = 869906466;\r\n declare const IFCDUCTSEGMENT = 3518393246;\r\n declare const IFCDUCTSEGMENTTYPE = 3760055223;\r\n declare const IFCDUCTSILENCER = 1360408905;\r\n declare const IFCDUCTSILENCERTYPE = 2030761528;\r\n declare const IFCEDGE = 3900360178;\r\n declare const IFCEDGECURVE = 476780140;\r\n declare const IFCEDGELOOP = 1472233963;\r\n declare const IFCELECTRICAPPLIANCE = 1904799276;\r\n declare const IFCELECTRICAPPLIANCETYPE = 663422040;\r\n declare const IFCELECTRICDISTRIBUTIONBOARD = 862014818;\r\n declare const IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\r\n declare const IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\r\n declare const IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\r\n declare const IFCELECTRICGENERATOR = 264262732;\r\n declare const IFCELECTRICGENERATORTYPE = 1534661035;\r\n declare const IFCELECTRICMOTOR = 402227799;\r\n declare const IFCELECTRICMOTORTYPE = 1217240411;\r\n declare const IFCELECTRICTIMECONTROL = 1003880860;\r\n declare const IFCELECTRICTIMECONTROLTYPE = 712377611;\r\n declare const IFCELEMENT = 1758889154;\r\n declare const IFCELEMENTASSEMBLY = 4123344466;\r\n declare const IFCELEMENTASSEMBLYTYPE = 2397081782;\r\n declare const IFCELEMENTCOMPONENT = 1623761950;\r\n declare const IFCELEMENTCOMPONENTTYPE = 2590856083;\r\n declare const IFCELEMENTQUANTITY = 1883228015;\r\n declare const IFCELEMENTTYPE = 339256511;\r\n declare const IFCELEMENTARYSURFACE = 2777663545;\r\n declare const IFCELLIPSE = 1704287377;\r\n declare const IFCELLIPSEPROFILEDEF = 2835456948;\r\n declare const IFCENERGYCONVERSIONDEVICE = 1658829314;\r\n declare const IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\r\n declare const IFCENGINE = 2814081492;\r\n declare const IFCENGINETYPE = 132023988;\r\n declare const IFCEVAPORATIVECOOLER = 3747195512;\r\n declare const IFCEVAPORATIVECOOLERTYPE = 3174744832;\r\n declare const IFCEVAPORATOR = 484807127;\r\n declare const IFCEVAPORATORTYPE = 3390157468;\r\n declare const IFCEVENT = 4148101412;\r\n declare const IFCEVENTTIME = 211053100;\r\n declare const IFCEVENTTYPE = 4024345920;\r\n declare const IFCEXTENDEDPROPERTIES = 297599258;\r\n declare const IFCEXTERNALINFORMATION = 4294318154;\r\n declare const IFCEXTERNALREFERENCE = 3200245327;\r\n declare const IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\r\n declare const IFCEXTERNALSPATIALELEMENT = 1209101575;\r\n declare const IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\r\n declare const IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\r\n declare const IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\r\n declare const IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\r\n declare const IFCEXTRUDEDAREASOLID = 477187591;\r\n declare const IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\r\n declare const IFCFACE = 2556980723;\r\n declare const IFCFACEBASEDSURFACEMODEL = 2047409740;\r\n declare const IFCFACEBOUND = 1809719519;\r\n declare const IFCFACEOUTERBOUND = 803316827;\r\n declare const IFCFACESURFACE = 3008276851;\r\n declare const IFCFACETEDBREP = 807026263;\r\n declare const IFCFACETEDBREPWITHVOIDS = 3737207727;\r\n declare const IFCFACILITY = 24185140;\r\n declare const IFCFACILITYPART = 1310830890;\r\n declare const IFCFAILURECONNECTIONCONDITION = 4219587988;\r\n declare const IFCFAN = 3415622556;\r\n declare const IFCFANTYPE = 346874300;\r\n declare const IFCFASTENER = 647756555;\r\n declare const IFCFASTENERTYPE = 2489546625;\r\n declare const IFCFEATUREELEMENT = 2827207264;\r\n declare const IFCFEATUREELEMENTADDITION = 2143335405;\r\n declare const IFCFEATUREELEMENTSUBTRACTION = 1287392070;\r\n declare const IFCFILLAREASTYLE = 738692330;\r\n declare const IFCFILLAREASTYLEHATCHING = 374418227;\r\n declare const IFCFILLAREASTYLETILES = 315944413;\r\n declare const IFCFILTER = 819412036;\r\n declare const IFCFILTERTYPE = 1810631287;\r\n declare const IFCFIRESUPPRESSIONTERMINAL = 1426591983;\r\n declare const IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\r\n declare const IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\r\n declare const IFCFLOWCONTROLLER = 2058353004;\r\n declare const IFCFLOWCONTROLLERTYPE = 3907093117;\r\n declare const IFCFLOWFITTING = 4278956645;\r\n declare const IFCFLOWFITTINGTYPE = 3198132628;\r\n declare const IFCFLOWINSTRUMENT = 182646315;\r\n declare const IFCFLOWINSTRUMENTTYPE = 4037862832;\r\n declare const IFCFLOWMETER = 2188021234;\r\n declare const IFCFLOWMETERTYPE = 3815607619;\r\n declare const IFCFLOWMOVINGDEVICE = 3132237377;\r\n declare const IFCFLOWMOVINGDEVICETYPE = 1482959167;\r\n declare const IFCFLOWSEGMENT = 987401354;\r\n declare const IFCFLOWSEGMENTTYPE = 1834744321;\r\n declare const IFCFLOWSTORAGEDEVICE = 707683696;\r\n declare const IFCFLOWSTORAGEDEVICETYPE = 1339347760;\r\n declare const IFCFLOWTERMINAL = 2223149337;\r\n declare const IFCFLOWTERMINALTYPE = 2297155007;\r\n declare const IFCFLOWTREATMENTDEVICE = 3508470533;\r\n declare const IFCFLOWTREATMENTDEVICETYPE = 3009222698;\r\n declare const IFCFOOTING = 900683007;\r\n declare const IFCFOOTINGTYPE = 1893162501;\r\n declare const IFCFURNISHINGELEMENT = 263784265;\r\n declare const IFCFURNISHINGELEMENTTYPE = 4238390223;\r\n declare const IFCFURNITURE = 1509553395;\r\n declare const IFCFURNITURETYPE = 1268542332;\r\n declare const IFCGEOGRAPHICELEMENT = 3493046030;\r\n declare const IFCGEOGRAPHICELEMENTTYPE = 4095422895;\r\n declare const IFCGEOMETRICCURVESET = 987898635;\r\n declare const IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\r\n declare const IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\r\n declare const IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\r\n declare const IFCGEOMETRICSET = 3590301190;\r\n declare const IFCGRID = 3009204131;\r\n declare const IFCGRIDAXIS = 852622518;\r\n declare const IFCGRIDPLACEMENT = 178086475;\r\n declare const IFCGROUP = 2706460486;\r\n declare const IFCHALFSPACESOLID = 812098782;\r\n declare const IFCHEATEXCHANGER = 3319311131;\r\n declare const IFCHEATEXCHANGERTYPE = 1251058090;\r\n declare const IFCHUMIDIFIER = 2068733104;\r\n declare const IFCHUMIDIFIERTYPE = 1806887404;\r\n declare const IFCISHAPEPROFILEDEF = 1484403080;\r\n declare const IFCIMAGETEXTURE = 3905492369;\r\n declare const IFCINDEXEDCOLOURMAP = 3570813810;\r\n declare const IFCINDEXEDPOLYCURVE = 2571569899;\r\n declare const IFCINDEXEDPOLYGONALFACE = 178912537;\r\n declare const IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\r\n declare const IFCINDEXEDTEXTUREMAP = 1437953363;\r\n declare const IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\r\n declare const IFCINTERCEPTOR = 4175244083;\r\n declare const IFCINTERCEPTORTYPE = 3946677679;\r\n declare const IFCINTERSECTIONCURVE = 3113134337;\r\n declare const IFCINVENTORY = 2391368822;\r\n declare const IFCIRREGULARTIMESERIES = 3741457305;\r\n declare const IFCIRREGULARTIMESERIESVALUE = 3020489413;\r\n declare const IFCJUNCTIONBOX = 2176052936;\r\n declare const IFCJUNCTIONBOXTYPE = 4288270099;\r\n declare const IFCLSHAPEPROFILEDEF = 572779678;\r\n declare const IFCLABORRESOURCE = 3827777499;\r\n declare const IFCLABORRESOURCETYPE = 428585644;\r\n declare const IFCLAGTIME = 1585845231;\r\n declare const IFCLAMP = 76236018;\r\n declare const IFCLAMPTYPE = 1051575348;\r\n declare const IFCLIBRARYINFORMATION = 2655187982;\r\n declare const IFCLIBRARYREFERENCE = 3452421091;\r\n declare const IFCLIGHTDISTRIBUTIONDATA = 4162380809;\r\n declare const IFCLIGHTFIXTURE = 629592764;\r\n declare const IFCLIGHTFIXTURETYPE = 1161773419;\r\n declare const IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\r\n declare const IFCLIGHTSOURCE = 1402838566;\r\n declare const IFCLIGHTSOURCEAMBIENT = 125510826;\r\n declare const IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\r\n declare const IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\r\n declare const IFCLIGHTSOURCEPOSITIONAL = 1520743889;\r\n declare const IFCLIGHTSOURCESPOT = 3422422726;\r\n declare const IFCLINE = 1281925730;\r\n declare const IFCLINESEGMENT2D = 3092502836;\r\n declare const IFCLINEARPLACEMENT = 388784114;\r\n declare const IFCLINEARPOSITIONINGELEMENT = 1154579445;\r\n declare const IFCLOCALPLACEMENT = 2624227202;\r\n declare const IFCLOOP = 1008929658;\r\n declare const IFCMANIFOLDSOLIDBREP = 1425443689;\r\n declare const IFCMAPCONVERSION = 3057273783;\r\n declare const IFCMAPPEDITEM = 2347385850;\r\n declare const IFCMATERIAL = 1838606355;\r\n declare const IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\r\n declare const IFCMATERIALCONSTITUENT = 3708119000;\r\n declare const IFCMATERIALCONSTITUENTSET = 2852063980;\r\n declare const IFCMATERIALDEFINITION = 760658860;\r\n declare const IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\r\n declare const IFCMATERIALLAYER = 248100487;\r\n declare const IFCMATERIALLAYERSET = 3303938423;\r\n declare const IFCMATERIALLAYERSETUSAGE = 1303795690;\r\n declare const IFCMATERIALLAYERWITHOFFSETS = 1847252529;\r\n declare const IFCMATERIALLIST = 2199411900;\r\n declare const IFCMATERIALPROFILE = 2235152071;\r\n declare const IFCMATERIALPROFILESET = 164193824;\r\n declare const IFCMATERIALPROFILESETUSAGE = 3079605661;\r\n declare const IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\r\n declare const IFCMATERIALPROFILEWITHOFFSETS = 552965576;\r\n declare const IFCMATERIALPROPERTIES = 3265635763;\r\n declare const IFCMATERIALRELATIONSHIP = 853536259;\r\n declare const IFCMATERIALUSAGEDEFINITION = 1507914824;\r\n declare const IFCMEASUREWITHUNIT = 2597039031;\r\n declare const IFCMECHANICALFASTENER = 377706215;\r\n declare const IFCMECHANICALFASTENERTYPE = 2108223431;\r\n declare const IFCMEDICALDEVICE = 1437502449;\r\n declare const IFCMEDICALDEVICETYPE = 1114901282;\r\n declare const IFCMEMBER = 1073191201;\r\n declare const IFCMEMBERSTANDARDCASE = 1911478936;\r\n declare const IFCMEMBERTYPE = 3181161470;\r\n declare const IFCMETRIC = 3368373690;\r\n declare const IFCMIRROREDPROFILEDEF = 2998442950;\r\n declare const IFCMONETARYUNIT = 2706619895;\r\n declare const IFCMOTORCONNECTION = 2474470126;\r\n declare const IFCMOTORCONNECTIONTYPE = 977012517;\r\n declare const IFCNAMEDUNIT = 1918398963;\r\n declare const IFCOBJECT = 3888040117;\r\n declare const IFCOBJECTDEFINITION = 219451334;\r\n declare const IFCOBJECTPLACEMENT = 3701648758;\r\n declare const IFCOBJECTIVE = 2251480897;\r\n declare const IFCOCCUPANT = 4143007308;\r\n declare const IFCOFFSETCURVE = 590820931;\r\n declare const IFCOFFSETCURVE2D = 3388369263;\r\n declare const IFCOFFSETCURVE3D = 3505215534;\r\n declare const IFCOFFSETCURVEBYDISTANCES = 2485787929;\r\n declare const IFCOPENSHELL = 2665983363;\r\n declare const IFCOPENINGELEMENT = 3588315303;\r\n declare const IFCOPENINGSTANDARDCASE = 3079942009;\r\n declare const IFCORGANIZATION = 4251960020;\r\n declare const IFCORGANIZATIONRELATIONSHIP = 1411181986;\r\n declare const IFCORIENTATIONEXPRESSION = 643959842;\r\n declare const IFCORIENTEDEDGE = 1029017970;\r\n declare const IFCOUTERBOUNDARYCURVE = 144952367;\r\n declare const IFCOUTLET = 3694346114;\r\n declare const IFCOUTLETTYPE = 2837617999;\r\n declare const IFCOWNERHISTORY = 1207048766;\r\n declare const IFCPARAMETERIZEDPROFILEDEF = 2529465313;\r\n declare const IFCPATH = 2519244187;\r\n declare const IFCPCURVE = 1682466193;\r\n declare const IFCPERFORMANCEHISTORY = 2382730787;\r\n declare const IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\r\n declare const IFCPERMIT = 3327091369;\r\n declare const IFCPERSON = 2077209135;\r\n declare const IFCPERSONANDORGANIZATION = 101040310;\r\n declare const IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\r\n declare const IFCPHYSICALQUANTITY = 2483315170;\r\n declare const IFCPHYSICALSIMPLEQUANTITY = 2226359599;\r\n declare const IFCPILE = 1687234759;\r\n declare const IFCPILETYPE = 1158309216;\r\n declare const IFCPIPEFITTING = 310824031;\r\n declare const IFCPIPEFITTINGTYPE = 804291784;\r\n declare const IFCPIPESEGMENT = 3612865200;\r\n declare const IFCPIPESEGMENTTYPE = 4231323485;\r\n declare const IFCPIXELTEXTURE = 597895409;\r\n declare const IFCPLACEMENT = 2004835150;\r\n declare const IFCPLANARBOX = 603570806;\r\n declare const IFCPLANAREXTENT = 1663979128;\r\n declare const IFCPLANE = 220341763;\r\n declare const IFCPLATE = 3171933400;\r\n declare const IFCPLATESTANDARDCASE = 1156407060;\r\n declare const IFCPLATETYPE = 4017108033;\r\n declare const IFCPOINT = 2067069095;\r\n declare const IFCPOINTONCURVE = 4022376103;\r\n declare const IFCPOINTONSURFACE = 1423911732;\r\n declare const IFCPOLYLOOP = 2924175390;\r\n declare const IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\r\n declare const IFCPOLYGONALFACESET = 2839578677;\r\n declare const IFCPOLYLINE = 3724593414;\r\n declare const IFCPORT = 3740093272;\r\n declare const IFCPOSITIONINGELEMENT = 1946335990;\r\n declare const IFCPOSTALADDRESS = 3355820592;\r\n declare const IFCPREDEFINEDCOLOUR = 759155922;\r\n declare const IFCPREDEFINEDCURVEFONT = 2559016684;\r\n declare const IFCPREDEFINEDITEM = 3727388367;\r\n declare const IFCPREDEFINEDPROPERTIES = 3778827333;\r\n declare const IFCPREDEFINEDPROPERTYSET = 3967405729;\r\n declare const IFCPREDEFINEDTEXTFONT = 1775413392;\r\n declare const IFCPRESENTATIONITEM = 677532197;\r\n declare const IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\r\n declare const IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\r\n declare const IFCPRESENTATIONSTYLE = 3119450353;\r\n declare const IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\r\n declare const IFCPROCEDURE = 2744685151;\r\n declare const IFCPROCEDURETYPE = 569719735;\r\n declare const IFCPROCESS = 2945172077;\r\n declare const IFCPRODUCT = 4208778838;\r\n declare const IFCPRODUCTDEFINITIONSHAPE = 673634403;\r\n declare const IFCPRODUCTREPRESENTATION = 2095639259;\r\n declare const IFCPROFILEDEF = 3958567839;\r\n declare const IFCPROFILEPROPERTIES = 2802850158;\r\n declare const IFCPROJECT = 103090709;\r\n declare const IFCPROJECTLIBRARY = 653396225;\r\n declare const IFCPROJECTORDER = 2904328755;\r\n declare const IFCPROJECTEDCRS = 3843373140;\r\n declare const IFCPROJECTIONELEMENT = 3651124850;\r\n declare const IFCPROPERTY = 2598011224;\r\n declare const IFCPROPERTYABSTRACTION = 986844984;\r\n declare const IFCPROPERTYBOUNDEDVALUE = 871118103;\r\n declare const IFCPROPERTYDEFINITION = 1680319473;\r\n declare const IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\r\n declare const IFCPROPERTYENUMERATEDVALUE = 4166981789;\r\n declare const IFCPROPERTYENUMERATION = 3710013099;\r\n declare const IFCPROPERTYLISTVALUE = 2752243245;\r\n declare const IFCPROPERTYREFERENCEVALUE = 941946838;\r\n declare const IFCPROPERTYSET = 1451395588;\r\n declare const IFCPROPERTYSETDEFINITION = 3357820518;\r\n declare const IFCPROPERTYSETTEMPLATE = 492091185;\r\n declare const IFCPROPERTYSINGLEVALUE = 3650150729;\r\n declare const IFCPROPERTYTABLEVALUE = 110355661;\r\n declare const IFCPROPERTYTEMPLATE = 3521284610;\r\n declare const IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\r\n declare const IFCPROTECTIVEDEVICE = 738039164;\r\n declare const IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\r\n declare const IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\r\n declare const IFCPROTECTIVEDEVICETYPE = 1842657554;\r\n declare const IFCPROXY = 3219374653;\r\n declare const IFCPUMP = 90941305;\r\n declare const IFCPUMPTYPE = 2250791053;\r\n declare const IFCQUANTITYAREA = 2044713172;\r\n declare const IFCQUANTITYCOUNT = 2093928680;\r\n declare const IFCQUANTITYLENGTH = 931644368;\r\n declare const IFCQUANTITYSET = 2090586900;\r\n declare const IFCQUANTITYTIME = 3252649465;\r\n declare const IFCQUANTITYVOLUME = 2405470396;\r\n declare const IFCQUANTITYWEIGHT = 825690147;\r\n declare const IFCRAILING = 2262370178;\r\n declare const IFCRAILINGTYPE = 2893384427;\r\n declare const IFCRAMP = 3024970846;\r\n declare const IFCRAMPFLIGHT = 3283111854;\r\n declare const IFCRAMPFLIGHTTYPE = 2324767716;\r\n declare const IFCRAMPTYPE = 1469900589;\r\n declare const IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\r\n declare const IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\r\n declare const IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\r\n declare const IFCRECTANGLEPROFILEDEF = 3615266464;\r\n declare const IFCRECTANGULARPYRAMID = 2798486643;\r\n declare const IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\r\n declare const IFCRECURRENCEPATTERN = 3915482550;\r\n declare const IFCREFERENCE = 2433181523;\r\n declare const IFCREFERENT = 4021432810;\r\n declare const IFCREGULARTIMESERIES = 3413951693;\r\n declare const IFCREINFORCEMENTBARPROPERTIES = 1580146022;\r\n declare const IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\r\n declare const IFCREINFORCINGBAR = 979691226;\r\n declare const IFCREINFORCINGBARTYPE = 2572171363;\r\n declare const IFCREINFORCINGELEMENT = 3027567501;\r\n declare const IFCREINFORCINGELEMENTTYPE = 964333572;\r\n declare const IFCREINFORCINGMESH = 2320036040;\r\n declare const IFCREINFORCINGMESHTYPE = 2310774935;\r\n declare const IFCRELAGGREGATES = 160246688;\r\n declare const IFCRELASSIGNS = 3939117080;\r\n declare const IFCRELASSIGNSTOACTOR = 1683148259;\r\n declare const IFCRELASSIGNSTOCONTROL = 2495723537;\r\n declare const IFCRELASSIGNSTOGROUP = 1307041759;\r\n declare const IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\r\n declare const IFCRELASSIGNSTOPROCESS = 4278684876;\r\n declare const IFCRELASSIGNSTOPRODUCT = 2857406711;\r\n declare const IFCRELASSIGNSTORESOURCE = 205026976;\r\n declare const IFCRELASSOCIATES = 1865459582;\r\n declare const IFCRELASSOCIATESAPPROVAL = 4095574036;\r\n declare const IFCRELASSOCIATESCLASSIFICATION = 919958153;\r\n declare const IFCRELASSOCIATESCONSTRAINT = 2728634034;\r\n declare const IFCRELASSOCIATESDOCUMENT = 982818633;\r\n declare const IFCRELASSOCIATESLIBRARY = 3840914261;\r\n declare const IFCRELASSOCIATESMATERIAL = 2655215786;\r\n declare const IFCRELCONNECTS = 826625072;\r\n declare const IFCRELCONNECTSELEMENTS = 1204542856;\r\n declare const IFCRELCONNECTSPATHELEMENTS = 3945020480;\r\n declare const IFCRELCONNECTSPORTTOELEMENT = 4201705270;\r\n declare const IFCRELCONNECTSPORTS = 3190031847;\r\n declare const IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\r\n declare const IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\r\n declare const IFCRELCONNECTSWITHECCENTRICITY = 504942748;\r\n declare const IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\r\n declare const IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\r\n declare const IFCRELCOVERSBLDGELEMENTS = 886880790;\r\n declare const IFCRELCOVERSSPACES = 2802773753;\r\n declare const IFCRELDECLARES = 2565941209;\r\n declare const IFCRELDECOMPOSES = 2551354335;\r\n declare const IFCRELDEFINES = 693640335;\r\n declare const IFCRELDEFINESBYOBJECT = 1462361463;\r\n declare const IFCRELDEFINESBYPROPERTIES = 4186316022;\r\n declare const IFCRELDEFINESBYTEMPLATE = 307848117;\r\n declare const IFCRELDEFINESBYTYPE = 781010003;\r\n declare const IFCRELFILLSELEMENT = 3940055652;\r\n declare const IFCRELFLOWCONTROLELEMENTS = 279856033;\r\n declare const IFCRELINTERFERESELEMENTS = 427948657;\r\n declare const IFCRELNESTS = 3268803585;\r\n declare const IFCRELPOSITIONS = 1441486842;\r\n declare const IFCRELPROJECTSELEMENT = 750771296;\r\n declare const IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\r\n declare const IFCRELSEQUENCE = 4122056220;\r\n declare const IFCRELSERVICESBUILDINGS = 366585022;\r\n declare const IFCRELSPACEBOUNDARY = 3451746338;\r\n declare const IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\r\n declare const IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\r\n declare const IFCRELVOIDSELEMENT = 1401173127;\r\n declare const IFCRELATIONSHIP = 478536968;\r\n declare const IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\r\n declare const IFCREPRESENTATION = 1076942058;\r\n declare const IFCREPRESENTATIONCONTEXT = 3377609919;\r\n declare const IFCREPRESENTATIONITEM = 3008791417;\r\n declare const IFCREPRESENTATIONMAP = 1660063152;\r\n declare const IFCRESOURCE = 2914609552;\r\n declare const IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\r\n declare const IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\r\n declare const IFCRESOURCELEVELRELATIONSHIP = 2439245199;\r\n declare const IFCRESOURCETIME = 1042787934;\r\n declare const IFCREVOLVEDAREASOLID = 1856042241;\r\n declare const IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\r\n declare const IFCRIGHTCIRCULARCONE = 4158566097;\r\n declare const IFCRIGHTCIRCULARCYLINDER = 3626867408;\r\n declare const IFCROOF = 2016517767;\r\n declare const IFCROOFTYPE = 2781568857;\r\n declare const IFCROOT = 2341007311;\r\n declare const IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\r\n declare const IFCSIUNIT = 448429030;\r\n declare const IFCSANITARYTERMINAL = 3053780830;\r\n declare const IFCSANITARYTERMINALTYPE = 1768891740;\r\n declare const IFCSCHEDULINGTIME = 1054537805;\r\n declare const IFCSEAMCURVE = 2157484638;\r\n declare const IFCSECTIONPROPERTIES = 2042790032;\r\n declare const IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\r\n declare const IFCSECTIONEDSOLID = 1862484736;\r\n declare const IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\r\n declare const IFCSECTIONEDSPINE = 1509187699;\r\n declare const IFCSENSOR = 4086658281;\r\n declare const IFCSENSORTYPE = 1783015770;\r\n declare const IFCSHADINGDEVICE = 1329646415;\r\n declare const IFCSHADINGDEVICETYPE = 4074543187;\r\n declare const IFCSHAPEASPECT = 867548509;\r\n declare const IFCSHAPEMODEL = 3982875396;\r\n declare const IFCSHAPEREPRESENTATION = 4240577450;\r\n declare const IFCSHELLBASEDSURFACEMODEL = 4124623270;\r\n declare const IFCSIMPLEPROPERTY = 3692461612;\r\n declare const IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\r\n declare const IFCSITE = 4097777520;\r\n declare const IFCSLAB = 1529196076;\r\n declare const IFCSLABELEMENTEDCASE = 3127900445;\r\n declare const IFCSLABSTANDARDCASE = 3027962421;\r\n declare const IFCSLABTYPE = 2533589738;\r\n declare const IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\r\n declare const IFCSOLARDEVICE = 3420628829;\r\n declare const IFCSOLARDEVICETYPE = 1072016465;\r\n declare const IFCSOLIDMODEL = 723233188;\r\n declare const IFCSPACE = 3856911033;\r\n declare const IFCSPACEHEATER = 1999602285;\r\n declare const IFCSPACEHEATERTYPE = 1305183839;\r\n declare const IFCSPACETYPE = 3812236995;\r\n declare const IFCSPATIALELEMENT = 1412071761;\r\n declare const IFCSPATIALELEMENTTYPE = 710998568;\r\n declare const IFCSPATIALSTRUCTUREELEMENT = 2706606064;\r\n declare const IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\r\n declare const IFCSPATIALZONE = 463610769;\r\n declare const IFCSPATIALZONETYPE = 2481509218;\r\n declare const IFCSPHERE = 451544542;\r\n declare const IFCSPHERICALSURFACE = 4015995234;\r\n declare const IFCSTACKTERMINAL = 1404847402;\r\n declare const IFCSTACKTERMINALTYPE = 3112655638;\r\n declare const IFCSTAIR = 331165859;\r\n declare const IFCSTAIRFLIGHT = 4252922144;\r\n declare const IFCSTAIRFLIGHTTYPE = 1039846685;\r\n declare const IFCSTAIRTYPE = 338393293;\r\n declare const IFCSTRUCTURALACTION = 682877961;\r\n declare const IFCSTRUCTURALACTIVITY = 3544373492;\r\n declare const IFCSTRUCTURALANALYSISMODEL = 2515109513;\r\n declare const IFCSTRUCTURALCONNECTION = 1179482911;\r\n declare const IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\r\n declare const IFCSTRUCTURALCURVEACTION = 1004757350;\r\n declare const IFCSTRUCTURALCURVECONNECTION = 4243806635;\r\n declare const IFCSTRUCTURALCURVEMEMBER = 214636428;\r\n declare const IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\r\n declare const IFCSTRUCTURALCURVEREACTION = 2757150158;\r\n declare const IFCSTRUCTURALITEM = 3136571912;\r\n declare const IFCSTRUCTURALLINEARACTION = 1807405624;\r\n declare const IFCSTRUCTURALLOAD = 2162789131;\r\n declare const IFCSTRUCTURALLOADCASE = 385403989;\r\n declare const IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\r\n declare const IFCSTRUCTURALLOADGROUP = 1252848954;\r\n declare const IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\r\n declare const IFCSTRUCTURALLOADORRESULT = 609421318;\r\n declare const IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\r\n declare const IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\r\n declare const IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\r\n declare const IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\r\n declare const IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\r\n declare const IFCSTRUCTURALLOADSTATIC = 2525727697;\r\n declare const IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\r\n declare const IFCSTRUCTURALMEMBER = 530289379;\r\n declare const IFCSTRUCTURALPLANARACTION = 1621171031;\r\n declare const IFCSTRUCTURALPOINTACTION = 2082059205;\r\n declare const IFCSTRUCTURALPOINTCONNECTION = 734778138;\r\n declare const IFCSTRUCTURALPOINTREACTION = 1235345126;\r\n declare const IFCSTRUCTURALREACTION = 3689010777;\r\n declare const IFCSTRUCTURALRESULTGROUP = 2986769608;\r\n declare const IFCSTRUCTURALSURFACEACTION = 3657597509;\r\n declare const IFCSTRUCTURALSURFACECONNECTION = 1975003073;\r\n declare const IFCSTRUCTURALSURFACEMEMBER = 3979015343;\r\n declare const IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\r\n declare const IFCSTRUCTURALSURFACEREACTION = 603775116;\r\n declare const IFCSTYLEMODEL = 2830218821;\r\n declare const IFCSTYLEDITEM = 3958052878;\r\n declare const IFCSTYLEDREPRESENTATION = 3049322572;\r\n declare const IFCSUBCONTRACTRESOURCE = 148013059;\r\n declare const IFCSUBCONTRACTRESOURCETYPE = 4095615324;\r\n declare const IFCSUBEDGE = 2233826070;\r\n declare const IFCSURFACE = 2513912981;\r\n declare const IFCSURFACECURVE = 699246055;\r\n declare const IFCSURFACECURVESWEPTAREASOLID = 2028607225;\r\n declare const IFCSURFACEFEATURE = 3101698114;\r\n declare const IFCSURFACEOFLINEAREXTRUSION = 2809605785;\r\n declare const IFCSURFACEOFREVOLUTION = 4124788165;\r\n declare const IFCSURFACEREINFORCEMENTAREA = 2934153892;\r\n declare const IFCSURFACESTYLE = 1300840506;\r\n declare const IFCSURFACESTYLELIGHTING = 3303107099;\r\n declare const IFCSURFACESTYLEREFRACTION = 1607154358;\r\n declare const IFCSURFACESTYLERENDERING = 1878645084;\r\n declare const IFCSURFACESTYLESHADING = 846575682;\r\n declare const IFCSURFACESTYLEWITHTEXTURES = 1351298697;\r\n declare const IFCSURFACETEXTURE = 626085974;\r\n declare const IFCSWEPTAREASOLID = 2247615214;\r\n declare const IFCSWEPTDISKSOLID = 1260650574;\r\n declare const IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\r\n declare const IFCSWEPTSURFACE = 230924584;\r\n declare const IFCSWITCHINGDEVICE = 1162798199;\r\n declare const IFCSWITCHINGDEVICETYPE = 2315554128;\r\n declare const IFCSYSTEM = 2254336722;\r\n declare const IFCSYSTEMFURNITUREELEMENT = 413509423;\r\n declare const IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\r\n declare const IFCTSHAPEPROFILEDEF = 3071757647;\r\n declare const IFCTABLE = 985171141;\r\n declare const IFCTABLECOLUMN = 2043862942;\r\n declare const IFCTABLEROW = 531007025;\r\n declare const IFCTANK = 812556717;\r\n declare const IFCTANKTYPE = 5716631;\r\n declare const IFCTASK = 3473067441;\r\n declare const IFCTASKTIME = 1549132990;\r\n declare const IFCTASKTIMERECURRING = 2771591690;\r\n declare const IFCTASKTYPE = 3206491090;\r\n declare const IFCTELECOMADDRESS = 912023232;\r\n declare const IFCTENDON = 3824725483;\r\n declare const IFCTENDONANCHOR = 2347447852;\r\n declare const IFCTENDONANCHORTYPE = 3081323446;\r\n declare const IFCTENDONCONDUIT = 3663046924;\r\n declare const IFCTENDONCONDUITTYPE = 2281632017;\r\n declare const IFCTENDONTYPE = 2415094496;\r\n declare const IFCTESSELLATEDFACESET = 2387106220;\r\n declare const IFCTESSELLATEDITEM = 901063453;\r\n declare const IFCTEXTLITERAL = 4282788508;\r\n declare const IFCTEXTLITERALWITHEXTENT = 3124975700;\r\n declare const IFCTEXTSTYLE = 1447204868;\r\n declare const IFCTEXTSTYLEFONTMODEL = 1983826977;\r\n declare const IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\r\n declare const IFCTEXTSTYLETEXTMODEL = 1640371178;\r\n declare const IFCTEXTURECOORDINATE = 280115917;\r\n declare const IFCTEXTURECOORDINATEGENERATOR = 1742049831;\r\n declare const IFCTEXTUREMAP = 2552916305;\r\n declare const IFCTEXTUREVERTEX = 1210645708;\r\n declare const IFCTEXTUREVERTEXLIST = 3611470254;\r\n declare const IFCTIMEPERIOD = 1199560280;\r\n declare const IFCTIMESERIES = 3101149627;\r\n declare const IFCTIMESERIESVALUE = 581633288;\r\n declare const IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\r\n declare const IFCTOPOLOGYREPRESENTATION = 1735638870;\r\n declare const IFCTOROIDALSURFACE = 1935646853;\r\n declare const IFCTRANSFORMER = 3825984169;\r\n declare const IFCTRANSFORMERTYPE = 1692211062;\r\n declare const IFCTRANSITIONCURVESEGMENT2D = 2595432518;\r\n declare const IFCTRANSPORTELEMENT = 1620046519;\r\n declare const IFCTRANSPORTELEMENTTYPE = 2097647324;\r\n declare const IFCTRAPEZIUMPROFILEDEF = 2715220739;\r\n declare const IFCTRIANGULATEDFACESET = 2916149573;\r\n declare const IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\r\n declare const IFCTRIMMEDCURVE = 3593883385;\r\n declare const IFCTUBEBUNDLE = 3026737570;\r\n declare const IFCTUBEBUNDLETYPE = 1600972822;\r\n declare const IFCTYPEOBJECT = 1628702193;\r\n declare const IFCTYPEPROCESS = 3736923433;\r\n declare const IFCTYPEPRODUCT = 2347495698;\r\n declare const IFCTYPERESOURCE = 3698973494;\r\n declare const IFCUSHAPEPROFILEDEF = 427810014;\r\n declare const IFCUNITASSIGNMENT = 180925521;\r\n declare const IFCUNITARYCONTROLELEMENT = 630975310;\r\n declare const IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\r\n declare const IFCUNITARYEQUIPMENT = 4292641817;\r\n declare const IFCUNITARYEQUIPMENTTYPE = 1911125066;\r\n declare const IFCVALVE = 4207607924;\r\n declare const IFCVALVETYPE = 728799441;\r\n declare const IFCVECTOR = 1417489154;\r\n declare const IFCVERTEX = 2799835756;\r\n declare const IFCVERTEXLOOP = 2759199220;\r\n declare const IFCVERTEXPOINT = 1907098498;\r\n declare const IFCVIBRATIONDAMPER = 1530820697;\r\n declare const IFCVIBRATIONDAMPERTYPE = 3956297820;\r\n declare const IFCVIBRATIONISOLATOR = 2391383451;\r\n declare const IFCVIBRATIONISOLATORTYPE = 3313531582;\r\n declare const IFCVIRTUALELEMENT = 2769231204;\r\n declare const IFCVIRTUALGRIDINTERSECTION = 891718957;\r\n declare const IFCVOIDINGFEATURE = 926996030;\r\n declare const IFCWALL = 2391406946;\r\n declare const IFCWALLELEMENTEDCASE = 4156078855;\r\n declare const IFCWALLSTANDARDCASE = 3512223829;\r\n declare const IFCWALLTYPE = 1898987631;\r\n declare const IFCWASTETERMINAL = 4237592921;\r\n declare const IFCWASTETERMINALTYPE = 1133259667;\r\n declare const IFCWINDOW = 3304561284;\r\n declare const IFCWINDOWLININGPROPERTIES = 336235671;\r\n declare const IFCWINDOWPANELPROPERTIES = 512836454;\r\n declare const IFCWINDOWSTANDARDCASE = 486154966;\r\n declare const IFCWINDOWSTYLE = 1299126871;\r\n declare const IFCWINDOWTYPE = 4009809668;\r\n declare const IFCWORKCALENDAR = 4088093105;\r\n declare const IFCWORKCONTROL = 1028945134;\r\n declare const IFCWORKPLAN = 4218914973;\r\n declare const IFCWORKSCHEDULE = 3342526732;\r\n declare const IFCWORKTIME = 1236880293;\r\n declare const IFCZSHAPEPROFILEDEF = 2543172580;\r\n declare const IFCZONE = 1033361043;\r\n declare const IfcElements: number[];\r\n";

